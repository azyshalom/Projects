<?xml version="1.0" encoding="utf-8" ?>
<project name="officeextension" default="officeextension.inc" xmlns="http://nant.sf.net/release/0.85-rc3/nant.xsd">
  <description>
    Copyright (c) Microsoft Corporation.  All rights reserved.

    officeextension.build - Builds the officeextension project
  </description>

  <!-- Include the global build properties -->
  <include buildfile="..\..\..\wix.include" unless="${property::exists('wix.properties.defined')}" />

  <!--
  //////////////////////////////////////////////////////////////////////////////////////////////////
  // Properties
  //////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <!-- extension directories -->
  <property name="dir.src.ext.officeextension" value="${dir.src.ext}\officeextension" readonly="true" />
  <property name="officeextension.wixext.dir.src" value="${dir.src.ext.officeextension}\wixext" readonly="true" />
  <property name="officeextension.wixlib.dir.src" value="${dir.src.ext.officeextension}\wixlib" readonly="true" />
  <property name="dir.build.ext.officeextension" value="${dir.build.ext}\officeextension" readonly="true" />

  <!-- shim-specific properties -->
  <property name="dir.src.shim" value="${dir.src.ext.officeextension}\shim" readonly="true" />
  <property name="dir.build.shim" value="${dir.build.ext}\officeextension\shim" readonly="true" />
  <property name="file.target.shim" value="${dir.target.wix}\ctoashim.dll" readonly="true" />
  <property name="file.targetPdb.shim" value="${path::change-extension(file.target.shim,'.pdb')}" readonly="true" />

  <!-- shimbld-specific properties -->
  <property name="dir.src.shimbld" value="${dir.src.ext.officeextension}\shimbld" readonly="true" />
  <property name="dir.build.shimbld" value="${dir.build.ext}\shimbld" readonly="true" />
  <property name="file.target.shimbld" value="${dir.target.wix}\shimbld.dll" readonly="true" />
  <property name="file.targetPdb.shimbld" value="${path::change-extension(file.target.shimbld,'.pdb')}" readonly="true" />

  <!-- extension files -->
  <property name="officeextension.file.officeaddin.xsd" value="${officeextension.wixext.dir.src}\Xsd\officeaddin.xsd" readonly="true" />
  <property name="officeextension.file.messages.xml" value="${officeextension.wixext.dir.src}\Data\messages.xml" readonly="true" />
  <property name="officeextension.file.messages.cs" value="${dir.build.ext.officeextension}\Messages.cs" readonly="true" />
  <property name="officeextension.file.messages.resources" value="${dir.build.ext.officeextension}\Messages.resources" readonly="true" />
  <property name="officeextension.file.officeaddin.cs" value="${dir.build.ext.officeextension}\OfficeAddin.cs" readonly="true" />

  <!--
  //////////////////////////////////////////////////////////////////////////////////////////////////
  // Includes
  //////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <!-- include buildfile="shim\shim.build" />
  <include buildfile="shimbld\shimbld.build" / -->

  <!--
  //////////////////////////////////////////////////////////////////////////////////////////////////
  // Targets
  //////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <!-- Build -->
  <target name="officeextension.build" description="Peforms a full rebuild (clean then build)" depends="officeextension.clean, officeextension.inc" />

  <!-- Clean -->
  <target name="officeextension.clean" description="Cleans the build">
    <delete dir="${dir.build.shim}" failonerror="false" if="${directory::exists(dir.build.shim)}" />
    <delete file="${file.target.shim}" failonerror="false" if="${file::exists(file.target.shim)}" />
    <delete file="${file.targetPdb.shim}" failonerror="false" if="${file::exists(file.targetPdb.shim)}" />

    <delete dir="${dir.build.shimbld}" failonerror="false" if="${directory::exists(dir.build.shimbld)}" />
    <delete file="${file.target.shimbld}" failonerror="false" if="${file::exists(file.target.shimbld)}" />
    <delete file="${file.targetPdb.shimbld}" failonerror="false" if="${file::exists(file.targetPdb.shimbld)}" />

    <delete dir="${dir.build.ext.officeextension}" failonerror="false" if="${directory::exists(dir.build.ext.officeextension)}" />
    <delete failonerror="false">
      <fileset basedir="${dir.target.wix}">
        <include name="Extensibility.dll" />
        <include name="WixOfficeExtension.dll" />
        <include name="WixOfficeExtension.pdb" />
        <include name="OfficeAddin.wixlib" />
      </fileset>
    </delete>
  </target>

  <!-- Inc -->
  <target name="officeextension.inc" description="Performs an incremental build" depends="makeDirs, createKeyFile, shim.inc, shimbld.inc">
    <mkdir dir="${dir.build.ext.officeextension}" />

    <!-- Flatten all of the xml/xsd files -->
    <foreach item="File" property="flattenxml.source">
      <in>
        <items>
          <include name="${officeextension.file.officeaddin.xsd}" />
        </items>
      </in>
      <do>
        <property name="flattenxml.target" value="${dir.build.ext.officeextension}\${path::get-file-name(flattenxml.source)}" />
        <call target="flattenXml" />
      </do>
    </foreach>

    <!-- Compile the messages.xml into the Message.cs class -->
    <exec program="${tool.msggen}" unless="${file::up-to-date(officeextension.file.messages.xml,officeextension.file.messages.cs)}">
      <arg value="-nologo" />
      <arg value="${officeextension.file.messages.xml}" />
      <arg value="${officeextension.file.messages.cs}" />
      <arg value="${officeextension.file.messages.resources}" />
    </exec>

    <!-- Compile the xsd file into the cs file -->
    <exec program="${tool.xsdgen}" unless="${file::up-to-date(officeextension.file.officeaddin.xsd,officeextension.file.officeaddin.cs)}">
      <arg value="${officeextension.file.officeaddin.xsd}" />
      <arg value="${officeextension.file.officeaddin.cs}" />
      <arg value="Microsoft.Tools.WindowsInstallerXml.Extensions.Serialize.OfficeAddin" />
      <arg value="Microsoft.Tools.WindowsInstallerXml.Serialize" />
    </exec>

    <copy file="${path::combine(dir.officepia.lib,'Extensibility.dll')}" todir="${dir.build.ext.officeextension}" />

    <!-- Pull in the wix tools NAnt tasks -->
    <loadtasks assembly="${file.nanttasks}" />

    <!-- Build the wixlib -->
    <candle out="${dir.build.ext.officeextension}\OfficeAddin.wixobj" exedir="${dir.target.wix}" warningsaserrors="true">
      <defines>
        <define name="targetDirectory" value="${dir.target.wix}" />
      </defines>
      <sources basedir="${officeextension.wixlib.dir.src}">
        <include name="OfficeAddin.wxs" />
      </sources>
    </candle>
    <lit out="${dir.target.wix}\OfficeAddin.wixlib" exedir="${dir.target.wix}" bindfiles="true" warningsaserrors="true">
      <sources basedir="${dir.build.ext.officeextension}">
        <include name="OfficeAddin.wixobj" />
      </sources>
    </lit>

    <!--csc
      target="library"
      output="${dir.target.wix}\WixOfficeExtension.dll"
      debug="${csc.debug}"
      optimize="${ship}"
      define="${csc.defines}"
      warnaserror="true"
      warninglevel="4"
      checked="true"
    >
      <sources basedir="${officeextension.wixext.dir.src}">
        <include name="${file.wixver}" />
        <include name="${file.wixkey}" />
        <include name="AssemblyInfo.cs" />
        <include name="OfficeAddinFabricator.cs" />
        <include name="BrowsePathStep.cs" />
        <include name="BrowsePathStep.Designer.cs" />
        <include name="BuildStep.cs" />
        <include name="BuildStep.Designer.cs" />
        <include name="FeedStep.cs" />
        <include name="FeedStep.Designer.cs" />
        <include name="NativeMethods.cs" />
        <include name="OfficeAddinMsiBuilder.cs" />
        <include name="OfficeShimBuilder.cs" />
        <include name="PackageInfoStep.cs" />
        <include name="PackageInfoStep.Designer.cs" />
        <include name="PickEntryStep.cs" />
        <include name="PickEntryStep.Designer.cs" />
        <include name="PickOfficeAppsStep.cs" />
        <include name="PickOfficeAppsStep.Designer.cs" />
        <include name="UpdateInfoStep.cs" />
        <include name="UpdateInfoStep.Designer.cs" />
        <include name="${officeextension.file.messages.cs}" />
        <include name="${officeextension.file.officeaddin.cs}" />
      </sources>
      <references basedir="${dir.target.wix}">
        <include name="heat.exe" />
        <include name="wix.dll" />
        <include name="WixUtilExtension.dll" />
        <include name="${dir.officepia.lib}\Extensibility.dll" />
      </references>
      Embed the xml/xsd files into the assembly
      <resources failonempty="true" basedir="${dir.build.ext.officeextension}" prefix="Microsoft.Tools.WindowsInstallerXml.Extensions.Xsd">
        <include name="officeaddin.xsd" />
      </resources>
      <resources failonempty="true" basedir="${dir.build.ext.officeextension}" prefix="Microsoft.Tools.WindowsInstallerXml.Extensions.Data">
        <include name="Messages.resources" />
      </resources>
      <resources failonempty="true" basedir="${dir.target.wix}" prefix="Microsoft.Tools.WindowsInstallerXml.Extensions.Data">
        <include name="officeaddin.wixlib" />
      </resources>
    </csc -->
    <nant buildfile="${dir.src.ext}\OfficeExtension\wixext\OfficeExtensionDll.build" inheritall="true" failonerror="true"/>
  </target>

  <target name="shim.inc" description="Performs an incremental build" depends="makeDirs">
    <mkdir dir="${dir.build.shim}" />

    <fileset id="compileCpp.fileset.sources" basedir="${dir.src.shim}">
      <include name="ClassFactory.cpp" />
      <include name="ClrLoader.cpp" />
      <include name="ConnectProxy.cpp" />
      <include name="shim.cpp" />
      <include name="UpdateThread.cpp" />
    </fileset>
    <property name="compileCpp.dir.build" value="${dir.build.shim}" />
    <property name="compileCpp.file.precomp.h" value="${dir.src.shim}\precomp.h" />
    <property name="cl.standardIncludes" value="${cl.standardIncludes} -I&quot;${dir.src.ext.officeextension}\inc&quot; -I &quot;${dir.src.ambient}\appsynup\inc&quot;" />
    <property name="compileCpp.file.rc" value="${dir.src.shim}\shim.rc" />
    <property name="makeNativeDll.file.target" value="${file.target.shim}" />
    <property name="makeNativeDll.file.def" value="${dir.src.shim}\shim.def" />
    <property name="makeNativeDll.additionalLibs" value="&quot;${dir.netfxsdk2.lib.x86}\mscoree.lib&quot; &quot;${file.target.dutil}&quot; &quot;${dir.platformsdk.lib}\wininet.lib&quot; &quot;${dir.platformsdk.lib}\msi.lib&quot; &quot;${file.target.appsynup}&quot;" />

    <!-- Make ctoashim.dll -->
    <call target="makeNativeDll" />
  </target>

  <target name="shimbld.inc" description="Performs an incremental build" depends="makeDirs">
    <mkdir dir="${dir.build.shimbld}" />

    <fileset id="compileCpp.fileset.sources" basedir="${dir.src.shimbld}">
      <include name="shimbld.cpp" />
    </fileset>
    <property name="compileCpp.dir.build" value="${dir.build.shimbld}" />
    <property name="compileCpp.file.precomp.h" value="${dir.src.shimbld}\precomp.h" />
    <property name="compileCpp.file.rc" value="${dir.src.shimbld}\shimbld.rc" />
    <property name="makeNativeDll.file.def" value="${dir.src.shimbld}\shimbld.def" />
    <property name="makeNativeDll.file.target" value="${file.target.shimbld}" />
    <property name="makeNativeDll.additionalLibs" value="&quot;${file.target.dutil}&quot;" />

    <!-- Make shimbld.dll -->
    <call target="makeNativeDll" />
  </target>

</project>
