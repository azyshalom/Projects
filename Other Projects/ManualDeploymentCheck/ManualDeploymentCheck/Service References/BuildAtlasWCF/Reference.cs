//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManualDeploymentCheck.BuildAtlasWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightCodeMove", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightCodeMove : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RolledBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduledStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildId {
            get {
                return this.BuildIdField;
            }
            set {
                if ((this.BuildIdField.Equals(value) != true)) {
                    this.BuildIdField = value;
                    this.RaisePropertyChanged("BuildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMove {
            get {
                return this.CodeMoveField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMoveField, value) != true)) {
                    this.CodeMoveField = value;
                    this.RaisePropertyChanged("CodeMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RolledBack {
            get {
                return this.RolledBackField;
            }
            set {
                if ((this.RolledBackField.Equals(value) != true)) {
                    this.RolledBackField = value;
                    this.RaisePropertyChanged("RolledBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduledBy {
            get {
                return this.ScheduledByField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduledByField, value) != true)) {
                    this.ScheduledByField = value;
                    this.RaisePropertyChanged("ScheduledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduledStart {
            get {
                return this.ScheduledStartField;
            }
            set {
                if ((this.ScheduledStartField.Equals(value) != true)) {
                    this.ScheduledStartField = value;
                    this.RaisePropertyChanged("ScheduledStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerifiedBy {
            get {
                return this.VerifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.VerifiedByField, value) != true)) {
                    this.VerifiedByField = value;
                    this.RaisePropertyChanged("VerifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSite", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeployField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnvIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnvNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deploy {
            get {
                return this.DeployField;
            }
            set {
                if ((this.DeployField.Equals(value) != true)) {
                    this.DeployField = value;
                    this.RaisePropertyChanged("Deploy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnvId {
            get {
                return this.EnvIdField;
            }
            set {
                if ((this.EnvIdField.Equals(value) != true)) {
                    this.EnvIdField = value;
                    this.RaisePropertyChanged("EnvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnvName {
            get {
                return this.EnvNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvNameField, value) != true)) {
                    this.EnvNameField = value;
                    this.RaisePropertyChanged("EnvName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightLayer", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightLayer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeployField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeployForCIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeployForQAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeployOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CI {
            get {
                return this.CIField;
            }
            set {
                if ((this.CIField.Equals(value) != true)) {
                    this.CIField = value;
                    this.RaisePropertyChanged("CI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deploy {
            get {
                return this.DeployField;
            }
            set {
                if ((this.DeployField.Equals(value) != true)) {
                    this.DeployField = value;
                    this.RaisePropertyChanged("Deploy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeployForCI {
            get {
                return this.DeployForCIField;
            }
            set {
                if ((this.DeployForCIField.Equals(value) != true)) {
                    this.DeployForCIField = value;
                    this.RaisePropertyChanged("DeployForCI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeployForQA {
            get {
                return this.DeployForQAField;
            }
            set {
                if ((this.DeployForQAField.Equals(value) != true)) {
                    this.DeployForQAField = value;
                    this.RaisePropertyChanged("DeployForQA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeployOrder {
            get {
                return this.DeployOrderField;
            }
            set {
                if ((this.DeployOrderField.Equals(value) != true)) {
                    this.DeployOrderField = value;
                    this.RaisePropertyChanged("DeployOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QA {
            get {
                return this.QAField;
            }
            set {
                if ((this.QAField.Equals(value) != true)) {
                    this.QAField = value;
                    this.RaisePropertyChanged("QA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightDeployment", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightDeployment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeMoveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HudsonBuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RolledBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduledStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMove {
            get {
                return this.CodeMoveField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMoveField, value) != true)) {
                    this.CodeMoveField = value;
                    this.RaisePropertyChanged("CodeMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeMoveId {
            get {
                return this.CodeMoveIdField;
            }
            set {
                if ((this.CodeMoveIdField.Equals(value) != true)) {
                    this.CodeMoveIdField = value;
                    this.RaisePropertyChanged("CodeMoveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HudsonBuildNumber {
            get {
                return this.HudsonBuildNumberField;
            }
            set {
                if ((this.HudsonBuildNumberField.Equals(value) != true)) {
                    this.HudsonBuildNumberField = value;
                    this.RaisePropertyChanged("HudsonBuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LayerId {
            get {
                return this.LayerIdField;
            }
            set {
                if ((this.LayerIdField.Equals(value) != true)) {
                    this.LayerIdField = value;
                    this.RaisePropertyChanged("LayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LayerName {
            get {
                return this.LayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LayerNameField, value) != true)) {
                    this.LayerNameField = value;
                    this.RaisePropertyChanged("LayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RolledBack {
            get {
                return this.RolledBackField;
            }
            set {
                if ((this.RolledBackField.Equals(value) != true)) {
                    this.RolledBackField = value;
                    this.RaisePropertyChanged("RolledBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduledBy {
            get {
                return this.ScheduledByField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduledByField, value) != true)) {
                    this.ScheduledByField = value;
                    this.RaisePropertyChanged("ScheduledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduledStart {
            get {
                return this.ScheduledStartField;
            }
            set {
                if ((this.ScheduledStartField.Equals(value) != true)) {
                    this.ScheduledStartField = value;
                    this.RaisePropertyChanged("ScheduledStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerifiedBy {
            get {
                return this.VerifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.VerifiedByField, value) != true)) {
                    this.VerifiedByField = value;
                    this.RaisePropertyChanged("VerifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSSHCommand", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightSSHCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((object.ReferenceEquals(this.CmdField, value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Output {
            get {
                return this.OutputField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputField, value) != true)) {
                    this.OutputField = value;
                    this.RaisePropertyChanged("Output");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedBy {
            get {
                return this.RequestedByField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByField, value) != true)) {
                    this.RequestedByField = value;
                    this.RaisePropertyChanged("RequestedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightServer", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightServer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackupDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildEnvDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildsDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CanConnectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionTestExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConnectionTestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LoadBalancerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PrometheusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolsDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackupDir {
            get {
                return this.BackupDirField;
            }
            set {
                if ((object.ReferenceEquals(this.BackupDirField, value) != true)) {
                    this.BackupDirField = value;
                    this.RaisePropertyChanged("BackupDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildEnvDir {
            get {
                return this.BuildEnvDirField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildEnvDirField, value) != true)) {
                    this.BuildEnvDirField = value;
                    this.RaisePropertyChanged("BuildEnvDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildsDir {
            get {
                return this.BuildsDirField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildsDirField, value) != true)) {
                    this.BuildsDirField = value;
                    this.RaisePropertyChanged("BuildsDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CanConnect {
            get {
                return this.CanConnectField;
            }
            set {
                if ((this.CanConnectField.Equals(value) != true)) {
                    this.CanConnectField = value;
                    this.RaisePropertyChanged("CanConnect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionError {
            get {
                return this.ConnectionErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionErrorField, value) != true)) {
                    this.ConnectionErrorField = value;
                    this.RaisePropertyChanged("ConnectionError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionTestException {
            get {
                return this.ConnectionTestExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionTestExceptionField, value) != true)) {
                    this.ConnectionTestExceptionField = value;
                    this.RaisePropertyChanged("ConnectionTestException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConnectionTested {
            get {
                return this.ConnectionTestedField;
            }
            set {
                if ((this.ConnectionTestedField.Equals(value) != true)) {
                    this.ConnectionTestedField = value;
                    this.RaisePropertyChanged("ConnectionTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultRegion {
            get {
                return this.DefaultRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultRegionField, value) != true)) {
                    this.DefaultRegionField = value;
                    this.RaisePropertyChanged("DefaultRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LoadBalancerId {
            get {
                return this.LoadBalancerIdField;
            }
            set {
                if ((this.LoadBalancerIdField.Equals(value) != true)) {
                    this.LoadBalancerIdField = value;
                    this.RaisePropertyChanged("LoadBalancerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OS {
            get {
                return this.OSField;
            }
            set {
                if ((object.ReferenceEquals(this.OSField, value) != true)) {
                    this.OSField = value;
                    this.RaisePropertyChanged("OS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrometheusId {
            get {
                return this.PrometheusIdField;
            }
            set {
                if ((this.PrometheusIdField.Equals(value) != true)) {
                    this.PrometheusIdField = value;
                    this.RaisePropertyChanged("PrometheusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolsDir {
            get {
                return this.ToolsDirField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolsDirField, value) != true)) {
                    this.ToolsDirField = value;
                    this.RaisePropertyChanged("ToolsDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightServerConfiguration", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightServerConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightServerComp", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightServerComp : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeOnServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompDefIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompDefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CurrentDeploymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeploymentMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeploymentVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JJField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParasitesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string A {
            get {
                return this.AField;
            }
            set {
                if ((object.ReferenceEquals(this.AField, value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AA {
            get {
                return this.AAField;
            }
            set {
                if ((object.ReferenceEquals(this.AAField, value) != true)) {
                    this.AAField = value;
                    this.RaisePropertyChanged("AA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string B {
            get {
                return this.BField;
            }
            set {
                if ((object.ReferenceEquals(this.BField, value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BB {
            get {
                return this.BBField;
            }
            set {
                if ((object.ReferenceEquals(this.BBField, value) != true)) {
                    this.BBField = value;
                    this.RaisePropertyChanged("BB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C {
            get {
                return this.CField;
            }
            set {
                if ((object.ReferenceEquals(this.CField, value) != true)) {
                    this.CField = value;
                    this.RaisePropertyChanged("C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CC {
            get {
                return this.CCField;
            }
            set {
                if ((object.ReferenceEquals(this.CCField, value) != true)) {
                    this.CCField = value;
                    this.RaisePropertyChanged("CC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CodeOnServer {
            get {
                return this.CodeOnServerField;
            }
            set {
                if ((this.CodeOnServerField.Equals(value) != true)) {
                    this.CodeOnServerField = value;
                    this.RaisePropertyChanged("CodeOnServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompDefId {
            get {
                return this.CompDefIdField;
            }
            set {
                if ((this.CompDefIdField.Equals(value) != true)) {
                    this.CompDefIdField = value;
                    this.RaisePropertyChanged("CompDefId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompDefType {
            get {
                return this.CompDefTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompDefTypeField, value) != true)) {
                    this.CompDefTypeField = value;
                    this.RaisePropertyChanged("CompDefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CurrentDeployment {
            get {
                return this.CurrentDeploymentField;
            }
            set {
                if ((this.CurrentDeploymentField.Equals(value) != true)) {
                    this.CurrentDeploymentField = value;
                    this.RaisePropertyChanged("CurrentDeployment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string D {
            get {
                return this.DField;
            }
            set {
                if ((object.ReferenceEquals(this.DField, value) != true)) {
                    this.DField = value;
                    this.RaisePropertyChanged("D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DD {
            get {
                return this.DDField;
            }
            set {
                if ((object.ReferenceEquals(this.DDField, value) != true)) {
                    this.DDField = value;
                    this.RaisePropertyChanged("DD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeploymentMatch {
            get {
                return this.DeploymentMatchField;
            }
            set {
                if ((this.DeploymentMatchField.Equals(value) != true)) {
                    this.DeploymentMatchField = value;
                    this.RaisePropertyChanged("DeploymentMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeploymentVerified {
            get {
                return this.DeploymentVerifiedField;
            }
            set {
                if ((this.DeploymentVerifiedField.Equals(value) != true)) {
                    this.DeploymentVerifiedField = value;
                    this.RaisePropertyChanged("DeploymentVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string E {
            get {
                return this.EField;
            }
            set {
                if ((object.ReferenceEquals(this.EField, value) != true)) {
                    this.EField = value;
                    this.RaisePropertyChanged("E");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EE {
            get {
                return this.EEField;
            }
            set {
                if ((object.ReferenceEquals(this.EEField, value) != true)) {
                    this.EEField = value;
                    this.RaisePropertyChanged("EE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string F {
            get {
                return this.FField;
            }
            set {
                if ((object.ReferenceEquals(this.FField, value) != true)) {
                    this.FField = value;
                    this.RaisePropertyChanged("F");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FF {
            get {
                return this.FFField;
            }
            set {
                if ((object.ReferenceEquals(this.FFField, value) != true)) {
                    this.FFField = value;
                    this.RaisePropertyChanged("FF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string G {
            get {
                return this.GField;
            }
            set {
                if ((object.ReferenceEquals(this.GField, value) != true)) {
                    this.GField = value;
                    this.RaisePropertyChanged("G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GG {
            get {
                return this.GGField;
            }
            set {
                if ((object.ReferenceEquals(this.GGField, value) != true)) {
                    this.GGField = value;
                    this.RaisePropertyChanged("GG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string H {
            get {
                return this.HField;
            }
            set {
                if ((object.ReferenceEquals(this.HField, value) != true)) {
                    this.HField = value;
                    this.RaisePropertyChanged("H");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HH {
            get {
                return this.HHField;
            }
            set {
                if ((object.ReferenceEquals(this.HHField, value) != true)) {
                    this.HHField = value;
                    this.RaisePropertyChanged("HH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string I {
            get {
                return this.IField;
            }
            set {
                if ((object.ReferenceEquals(this.IField, value) != true)) {
                    this.IField = value;
                    this.RaisePropertyChanged("I");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string II {
            get {
                return this.IIField;
            }
            set {
                if ((object.ReferenceEquals(this.IIField, value) != true)) {
                    this.IIField = value;
                    this.RaisePropertyChanged("II");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string J {
            get {
                return this.JField;
            }
            set {
                if ((object.ReferenceEquals(this.JField, value) != true)) {
                    this.JField = value;
                    this.RaisePropertyChanged("J");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JJ {
            get {
                return this.JJField;
            }
            set {
                if ((object.ReferenceEquals(this.JJField, value) != true)) {
                    this.JJField = value;
                    this.RaisePropertyChanged("JJ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string K {
            get {
                return this.KField;
            }
            set {
                if ((object.ReferenceEquals(this.KField, value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KK {
            get {
                return this.KKField;
            }
            set {
                if ((object.ReferenceEquals(this.KKField, value) != true)) {
                    this.KKField = value;
                    this.RaisePropertyChanged("KK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string L {
            get {
                return this.LField;
            }
            set {
                if ((object.ReferenceEquals(this.LField, value) != true)) {
                    this.LField = value;
                    this.RaisePropertyChanged("L");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LL {
            get {
                return this.LLField;
            }
            set {
                if ((object.ReferenceEquals(this.LLField, value) != true)) {
                    this.LLField = value;
                    this.RaisePropertyChanged("LL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string M {
            get {
                return this.MField;
            }
            set {
                if ((object.ReferenceEquals(this.MField, value) != true)) {
                    this.MField = value;
                    this.RaisePropertyChanged("M");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MM {
            get {
                return this.MMField;
            }
            set {
                if ((object.ReferenceEquals(this.MMField, value) != true)) {
                    this.MMField = value;
                    this.RaisePropertyChanged("MM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string N {
            get {
                return this.NField;
            }
            set {
                if ((object.ReferenceEquals(this.NField, value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NN {
            get {
                return this.NNField;
            }
            set {
                if ((object.ReferenceEquals(this.NNField, value) != true)) {
                    this.NNField = value;
                    this.RaisePropertyChanged("NN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O {
            get {
                return this.OField;
            }
            set {
                if ((object.ReferenceEquals(this.OField, value) != true)) {
                    this.OField = value;
                    this.RaisePropertyChanged("O");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OO {
            get {
                return this.OOField;
            }
            set {
                if ((object.ReferenceEquals(this.OOField, value) != true)) {
                    this.OOField = value;
                    this.RaisePropertyChanged("OO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P {
            get {
                return this.PField;
            }
            set {
                if ((object.ReferenceEquals(this.PField, value) != true)) {
                    this.PField = value;
                    this.RaisePropertyChanged("P");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PP {
            get {
                return this.PPField;
            }
            set {
                if ((object.ReferenceEquals(this.PPField, value) != true)) {
                    this.PPField = value;
                    this.RaisePropertyChanged("PP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parasites {
            get {
                return this.ParasitesField;
            }
            set {
                if ((object.ReferenceEquals(this.ParasitesField, value) != true)) {
                    this.ParasitesField = value;
                    this.RaisePropertyChanged("Parasites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Q {
            get {
                return this.QField;
            }
            set {
                if ((object.ReferenceEquals(this.QField, value) != true)) {
                    this.QField = value;
                    this.RaisePropertyChanged("Q");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QQ {
            get {
                return this.QQField;
            }
            set {
                if ((object.ReferenceEquals(this.QQField, value) != true)) {
                    this.QQField = value;
                    this.RaisePropertyChanged("QQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R {
            get {
                return this.RField;
            }
            set {
                if ((object.ReferenceEquals(this.RField, value) != true)) {
                    this.RField = value;
                    this.RaisePropertyChanged("R");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RR {
            get {
                return this.RRField;
            }
            set {
                if ((object.ReferenceEquals(this.RRField, value) != true)) {
                    this.RRField = value;
                    this.RaisePropertyChanged("RR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string S {
            get {
                return this.SField;
            }
            set {
                if ((object.ReferenceEquals(this.SField, value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SS {
            get {
                return this.SSField;
            }
            set {
                if ((object.ReferenceEquals(this.SSField, value) != true)) {
                    this.SSField = value;
                    this.RaisePropertyChanged("SS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string T {
            get {
                return this.TField;
            }
            set {
                if ((object.ReferenceEquals(this.TField, value) != true)) {
                    this.TField = value;
                    this.RaisePropertyChanged("T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TT {
            get {
                return this.TTField;
            }
            set {
                if ((object.ReferenceEquals(this.TTField, value) != true)) {
                    this.TTField = value;
                    this.RaisePropertyChanged("TT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U {
            get {
                return this.UField;
            }
            set {
                if ((object.ReferenceEquals(this.UField, value) != true)) {
                    this.UField = value;
                    this.RaisePropertyChanged("U");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UU {
            get {
                return this.UUField;
            }
            set {
                if ((object.ReferenceEquals(this.UUField, value) != true)) {
                    this.UUField = value;
                    this.RaisePropertyChanged("UU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string V {
            get {
                return this.VField;
            }
            set {
                if ((object.ReferenceEquals(this.VField, value) != true)) {
                    this.VField = value;
                    this.RaisePropertyChanged("V");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VV {
            get {
                return this.VVField;
            }
            set {
                if ((object.ReferenceEquals(this.VVField, value) != true)) {
                    this.VVField = value;
                    this.RaisePropertyChanged("VV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string W {
            get {
                return this.WField;
            }
            set {
                if ((object.ReferenceEquals(this.WField, value) != true)) {
                    this.WField = value;
                    this.RaisePropertyChanged("W");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WW {
            get {
                return this.WWField;
            }
            set {
                if ((object.ReferenceEquals(this.WWField, value) != true)) {
                    this.WWField = value;
                    this.RaisePropertyChanged("WW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XX {
            get {
                return this.XXField;
            }
            set {
                if ((object.ReferenceEquals(this.XXField, value) != true)) {
                    this.XXField = value;
                    this.RaisePropertyChanged("XX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YY {
            get {
                return this.YYField;
            }
            set {
                if ((object.ReferenceEquals(this.YYField, value) != true)) {
                    this.YYField = value;
                    this.RaisePropertyChanged("YY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Z {
            get {
                return this.ZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZField, value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZZ {
            get {
                return this.ZZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZZField, value) != true)) {
                    this.ZZField = value;
                    this.RaisePropertyChanged("ZZ");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightTool", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightTool : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightVersion", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildsUrl {
            get {
                return this.BuildsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildsUrlField, value) != true)) {
                    this.BuildsUrlField = value;
                    this.RaisePropertyChanged("BuildsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Major {
            get {
                return this.MajorField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorField, value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Minor {
            get {
                return this.MinorField;
            }
            set {
                if ((object.ReferenceEquals(this.MinorField, value) != true)) {
                    this.MinorField = value;
                    this.RaisePropertyChanged("Minor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagsUrl {
            get {
                return this.TagsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsUrlField, value) != true)) {
                    this.TagsUrlField = value;
                    this.RaisePropertyChanged("TagsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionString {
            get {
                return this.VersionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionStringField, value) != true)) {
                    this.VersionStringField = value;
                    this.RaisePropertyChanged("VersionString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBuildTask", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBuildTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CIEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QAEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskArgsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildOrder {
            get {
                return this.BuildOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildOrderField, value) != true)) {
                    this.BuildOrderField = value;
                    this.RaisePropertyChanged("BuildOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CIEnabled {
            get {
                return this.CIEnabledField;
            }
            set {
                if ((this.CIEnabledField.Equals(value) != true)) {
                    this.CIEnabledField = value;
                    this.RaisePropertyChanged("CIEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QAEnabled {
            get {
                return this.QAEnabledField;
            }
            set {
                if ((this.QAEnabledField.Equals(value) != true)) {
                    this.QAEnabledField = value;
                    this.RaisePropertyChanged("QAEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskArgs {
            get {
                return this.TaskArgsField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskArgsField, value) != true)) {
                    this.TaskArgsField = value;
                    this.RaisePropertyChanged("TaskArgs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskType {
            get {
                return this.TaskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskTypeField, value) != true)) {
                    this.TaskTypeField = value;
                    this.RaisePropertyChanged("TaskType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightProject", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightProject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchitectureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArchitectureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompileForCIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompileForQAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigTemplatePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConfigurationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrameworkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FrameworkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutputLayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawOutputDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Architecture {
            get {
                return this.ArchitectureField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchitectureField, value) != true)) {
                    this.ArchitectureField = value;
                    this.RaisePropertyChanged("Architecture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArchitectureId {
            get {
                return this.ArchitectureIdField;
            }
            set {
                if ((this.ArchitectureIdField.Equals(value) != true)) {
                    this.ArchitectureIdField = value;
                    this.RaisePropertyChanged("ArchitectureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildOrder {
            get {
                return this.BuildOrderField;
            }
            set {
                if ((this.BuildOrderField.Equals(value) != true)) {
                    this.BuildOrderField = value;
                    this.RaisePropertyChanged("BuildOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CI {
            get {
                return this.CIField;
            }
            set {
                if ((this.CIField.Equals(value) != true)) {
                    this.CIField = value;
                    this.RaisePropertyChanged("CI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompileForCI {
            get {
                return this.CompileForCIField;
            }
            set {
                if ((this.CompileForCIField.Equals(value) != true)) {
                    this.CompileForCIField = value;
                    this.RaisePropertyChanged("CompileForCI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompileForQA {
            get {
                return this.CompileForQAField;
            }
            set {
                if ((this.CompileForQAField.Equals(value) != true)) {
                    this.CompileForQAField = value;
                    this.RaisePropertyChanged("CompileForQA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigTemplatePath {
            get {
                return this.ConfigTemplatePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigTemplatePathField, value) != true)) {
                    this.ConfigTemplatePathField = value;
                    this.RaisePropertyChanged("ConfigTemplatePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Configuration {
            get {
                return this.ConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationField, value) != true)) {
                    this.ConfigurationField = value;
                    this.RaisePropertyChanged("Configuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConfigurationId {
            get {
                return this.ConfigurationIdField;
            }
            set {
                if ((this.ConfigurationIdField.Equals(value) != true)) {
                    this.ConfigurationIdField = value;
                    this.RaisePropertyChanged("ConfigurationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Framework {
            get {
                return this.FrameworkField;
            }
            set {
                if ((object.ReferenceEquals(this.FrameworkField, value) != true)) {
                    this.FrameworkField = value;
                    this.RaisePropertyChanged("Framework");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FrameworkId {
            get {
                return this.FrameworkIdField;
            }
            set {
                if ((this.FrameworkIdField.Equals(value) != true)) {
                    this.FrameworkIdField = value;
                    this.RaisePropertyChanged("FrameworkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LayerId {
            get {
                return this.LayerIdField;
            }
            set {
                if ((this.LayerIdField.Equals(value) != true)) {
                    this.LayerIdField = value;
                    this.RaisePropertyChanged("LayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputLayer {
            get {
                return this.OutputLayerField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputLayerField, value) != true)) {
                    this.OutputLayerField = value;
                    this.RaisePropertyChanged("OutputLayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QA {
            get {
                return this.QAField;
            }
            set {
                if ((this.QAField.Equals(value) != true)) {
                    this.QAField = value;
                    this.RaisePropertyChanged("QA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawOutputDir {
            get {
                return this.RawOutputDirField;
            }
            set {
                if ((object.ReferenceEquals(this.RawOutputDirField, value) != true)) {
                    this.RawOutputDirField = value;
                    this.RaisePropertyChanged("RawOutputDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightDeleteDir", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightDeleteDir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Directory {
            get {
                return this.DirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectoryField, value) != true)) {
                    this.DirectoryField = value;
                    this.RaisePropertyChanged("Directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightRenameDir", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightRenameDir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RenameToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalName {
            get {
                return this.OriginalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalNameField, value) != true)) {
                    this.OriginalNameField = value;
                    this.RaisePropertyChanged("OriginalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RenameTo {
            get {
                return this.RenameToField;
            }
            set {
                if ((object.ReferenceEquals(this.RenameToField, value) != true)) {
                    this.RenameToField = value;
                    this.RaisePropertyChanged("RenameTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSiteConfiguration", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightSiteConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightDeploymentLogEntry", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightDeploymentLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeploymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeploymentId {
            get {
                return this.DeploymentIdField;
            }
            set {
                if ((this.DeploymentIdField.Equals(value) != true)) {
                    this.DeploymentIdField = value;
                    this.RaisePropertyChanged("DeploymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationPath {
            get {
                return this.DestinationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationPathField, value) != true)) {
                    this.DestinationPathField = value;
                    this.RaisePropertyChanged("DestinationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LayerId {
            get {
                return this.LayerIdField;
            }
            set {
                if ((this.LayerIdField.Equals(value) != true)) {
                    this.LayerIdField = value;
                    this.RaisePropertyChanged("LayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LayerName {
            get {
                return this.LayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LayerNameField, value) != true)) {
                    this.LayerNameField = value;
                    this.RaisePropertyChanged("LayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogMsg {
            get {
                return this.LogMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.LogMsgField, value) != true)) {
                    this.LogMsgField = value;
                    this.RaisePropertyChanged("LogMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightLayerAssociation", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightLayerAssociation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AssociatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerCompField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerCompIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Associated {
            get {
                return this.AssociatedField;
            }
            set {
                if ((this.AssociatedField.Equals(value) != true)) {
                    this.AssociatedField = value;
                    this.RaisePropertyChanged("Associated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LayerId {
            get {
                return this.LayerIdField;
            }
            set {
                if ((this.LayerIdField.Equals(value) != true)) {
                    this.LayerIdField = value;
                    this.RaisePropertyChanged("LayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LayerName {
            get {
                return this.LayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LayerNameField, value) != true)) {
                    this.LayerNameField = value;
                    this.RaisePropertyChanged("LayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerComp {
            get {
                return this.ServerCompField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerCompField, value) != true)) {
                    this.ServerCompField = value;
                    this.RaisePropertyChanged("ServerComp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerCompId {
            get {
                return this.ServerCompIdField;
            }
            set {
                if ((this.ServerCompIdField.Equals(value) != true)) {
                    this.ServerCompIdField = value;
                    this.RaisePropertyChanged("ServerCompId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightTestResult", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightTestResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IgnoredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InconclusiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildId {
            get {
                return this.BuildIdField;
            }
            set {
                if ((this.BuildIdField.Equals(value) != true)) {
                    this.BuildIdField = value;
                    this.RaisePropertyChanged("BuildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Fail {
            get {
                return this.FailField;
            }
            set {
                if ((this.FailField.Equals(value) != true)) {
                    this.FailField = value;
                    this.RaisePropertyChanged("Fail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Ignored {
            get {
                return this.IgnoredField;
            }
            set {
                if ((this.IgnoredField.Equals(value) != true)) {
                    this.IgnoredField = value;
                    this.RaisePropertyChanged("Ignored");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Inconclusive {
            get {
                return this.InconclusiveField;
            }
            set {
                if ((this.InconclusiveField.Equals(value) != true)) {
                    this.InconclusiveField = value;
                    this.RaisePropertyChanged("Inconclusive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Pass {
            get {
                return this.PassField;
            }
            set {
                if ((this.PassField.Equals(value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Ran {
            get {
                return this.RanField;
            }
            set {
                if ((this.RanField.Equals(value) != true)) {
                    this.RanField = value;
                    this.RaisePropertyChanged("Ran");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Test {
            get {
                return this.TestField;
            }
            set {
                if ((object.ReferenceEquals(this.TestField, value) != true)) {
                    this.TestField = value;
                    this.RaisePropertyChanged("Test");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightHelpDeskTicketStatus", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightHelpDeskTicketStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> InQueueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsCloseStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailMessage {
            get {
                return this.EmailMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailMessageField, value) != true)) {
                    this.EmailMessageField = value;
                    this.RaisePropertyChanged("EmailMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InQueue {
            get {
                return this.InQueueField;
            }
            set {
                if ((this.InQueueField.Equals(value) != true)) {
                    this.InQueueField = value;
                    this.RaisePropertyChanged("InQueue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsCloseStatus {
            get {
                return this.IsCloseStatusField;
            }
            set {
                if ((this.IsCloseStatusField.Equals(value) != true)) {
                    this.IsCloseStatusField = value;
                    this.RaisePropertyChanged("IsCloseStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightHelpDeskTicket", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightHelpDeskTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubmittedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmittedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedOn {
            get {
                return this.ClosedOnField;
            }
            set {
                if ((this.ClosedOnField.Equals(value) != true)) {
                    this.ClosedOnField = value;
                    this.RaisePropertyChanged("ClosedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailList {
            get {
                return this.EmailListField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailListField, value) != true)) {
                    this.EmailListField = value;
                    this.RaisePropertyChanged("EmailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnedBy {
            get {
                return this.OwnedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnedByField, value) != true)) {
                    this.OwnedByField = value;
                    this.RaisePropertyChanged("OwnedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedBy {
            get {
                return this.SubmittedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedByField, value) != true)) {
                    this.SubmittedByField = value;
                    this.RaisePropertyChanged("SubmittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmittedOn {
            get {
                return this.SubmittedOnField;
            }
            set {
                if ((this.SubmittedOnField.Equals(value) != true)) {
                    this.SubmittedOnField = value;
                    this.RaisePropertyChanged("SubmittedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalMinutes {
            get {
                return this.TotalMinutesField;
            }
            set {
                if ((this.TotalMinutesField.Equals(value) != true)) {
                    this.TotalMinutesField = value;
                    this.RaisePropertyChanged("TotalMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightHelpDeskTicketHistory", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightHelpDeskTicketHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubmittedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SubmittedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedOn {
            get {
                return this.ClosedOnField;
            }
            set {
                if ((this.ClosedOnField.Equals(value) != true)) {
                    this.ClosedOnField = value;
                    this.RaisePropertyChanged("ClosedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailList {
            get {
                return this.EmailListField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailListField, value) != true)) {
                    this.EmailListField = value;
                    this.RaisePropertyChanged("EmailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnedBy {
            get {
                return this.OwnedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnedByField, value) != true)) {
                    this.OwnedByField = value;
                    this.RaisePropertyChanged("OwnedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubmittedBy {
            get {
                return this.SubmittedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmittedByField, value) != true)) {
                    this.SubmittedByField = value;
                    this.RaisePropertyChanged("SubmittedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SubmittedOn {
            get {
                return this.SubmittedOnField;
            }
            set {
                if ((this.SubmittedOnField.Equals(value) != true)) {
                    this.SubmittedOnField = value;
                    this.RaisePropertyChanged("SubmittedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalMinutes {
            get {
                return this.TotalMinutesField;
            }
            set {
                if ((this.TotalMinutesField.Equals(value) != true)) {
                    this.TotalMinutesField = value;
                    this.RaisePropertyChanged("TotalMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightHelpDeskTicketMsg", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightHelpDeskTicketMsg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MsgDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Msg {
            get {
                return this.MsgField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgField, value) != true)) {
                    this.MsgField = value;
                    this.RaisePropertyChanged("Msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MsgDate {
            get {
                return this.MsgDateField;
            }
            set {
                if ((this.MsgDateField.Equals(value) != true)) {
                    this.MsgDateField = value;
                    this.RaisePropertyChanged("MsgDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightCompDefinition", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightCompDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JJField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QQField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WWField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZZField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string A {
            get {
                return this.AField;
            }
            set {
                if ((object.ReferenceEquals(this.AField, value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AA {
            get {
                return this.AAField;
            }
            set {
                if ((object.ReferenceEquals(this.AAField, value) != true)) {
                    this.AAField = value;
                    this.RaisePropertyChanged("AA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string B {
            get {
                return this.BField;
            }
            set {
                if ((object.ReferenceEquals(this.BField, value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BB {
            get {
                return this.BBField;
            }
            set {
                if ((object.ReferenceEquals(this.BBField, value) != true)) {
                    this.BBField = value;
                    this.RaisePropertyChanged("BB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string C {
            get {
                return this.CField;
            }
            set {
                if ((object.ReferenceEquals(this.CField, value) != true)) {
                    this.CField = value;
                    this.RaisePropertyChanged("C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CC {
            get {
                return this.CCField;
            }
            set {
                if ((object.ReferenceEquals(this.CCField, value) != true)) {
                    this.CCField = value;
                    this.RaisePropertyChanged("CC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string D {
            get {
                return this.DField;
            }
            set {
                if ((object.ReferenceEquals(this.DField, value) != true)) {
                    this.DField = value;
                    this.RaisePropertyChanged("D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DD {
            get {
                return this.DDField;
            }
            set {
                if ((object.ReferenceEquals(this.DDField, value) != true)) {
                    this.DDField = value;
                    this.RaisePropertyChanged("DD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string E {
            get {
                return this.EField;
            }
            set {
                if ((object.ReferenceEquals(this.EField, value) != true)) {
                    this.EField = value;
                    this.RaisePropertyChanged("E");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EE {
            get {
                return this.EEField;
            }
            set {
                if ((object.ReferenceEquals(this.EEField, value) != true)) {
                    this.EEField = value;
                    this.RaisePropertyChanged("EE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string F {
            get {
                return this.FField;
            }
            set {
                if ((object.ReferenceEquals(this.FField, value) != true)) {
                    this.FField = value;
                    this.RaisePropertyChanged("F");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FF {
            get {
                return this.FFField;
            }
            set {
                if ((object.ReferenceEquals(this.FFField, value) != true)) {
                    this.FFField = value;
                    this.RaisePropertyChanged("FF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string G {
            get {
                return this.GField;
            }
            set {
                if ((object.ReferenceEquals(this.GField, value) != true)) {
                    this.GField = value;
                    this.RaisePropertyChanged("G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GG {
            get {
                return this.GGField;
            }
            set {
                if ((object.ReferenceEquals(this.GGField, value) != true)) {
                    this.GGField = value;
                    this.RaisePropertyChanged("GG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string H {
            get {
                return this.HField;
            }
            set {
                if ((object.ReferenceEquals(this.HField, value) != true)) {
                    this.HField = value;
                    this.RaisePropertyChanged("H");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HH {
            get {
                return this.HHField;
            }
            set {
                if ((object.ReferenceEquals(this.HHField, value) != true)) {
                    this.HHField = value;
                    this.RaisePropertyChanged("HH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string I {
            get {
                return this.IField;
            }
            set {
                if ((object.ReferenceEquals(this.IField, value) != true)) {
                    this.IField = value;
                    this.RaisePropertyChanged("I");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string II {
            get {
                return this.IIField;
            }
            set {
                if ((object.ReferenceEquals(this.IIField, value) != true)) {
                    this.IIField = value;
                    this.RaisePropertyChanged("II");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string J {
            get {
                return this.JField;
            }
            set {
                if ((object.ReferenceEquals(this.JField, value) != true)) {
                    this.JField = value;
                    this.RaisePropertyChanged("J");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JJ {
            get {
                return this.JJField;
            }
            set {
                if ((object.ReferenceEquals(this.JJField, value) != true)) {
                    this.JJField = value;
                    this.RaisePropertyChanged("JJ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string K {
            get {
                return this.KField;
            }
            set {
                if ((object.ReferenceEquals(this.KField, value) != true)) {
                    this.KField = value;
                    this.RaisePropertyChanged("K");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KK {
            get {
                return this.KKField;
            }
            set {
                if ((object.ReferenceEquals(this.KKField, value) != true)) {
                    this.KKField = value;
                    this.RaisePropertyChanged("KK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string L {
            get {
                return this.LField;
            }
            set {
                if ((object.ReferenceEquals(this.LField, value) != true)) {
                    this.LField = value;
                    this.RaisePropertyChanged("L");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LL {
            get {
                return this.LLField;
            }
            set {
                if ((object.ReferenceEquals(this.LLField, value) != true)) {
                    this.LLField = value;
                    this.RaisePropertyChanged("LL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string M {
            get {
                return this.MField;
            }
            set {
                if ((object.ReferenceEquals(this.MField, value) != true)) {
                    this.MField = value;
                    this.RaisePropertyChanged("M");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MM {
            get {
                return this.MMField;
            }
            set {
                if ((object.ReferenceEquals(this.MMField, value) != true)) {
                    this.MMField = value;
                    this.RaisePropertyChanged("MM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string N {
            get {
                return this.NField;
            }
            set {
                if ((object.ReferenceEquals(this.NField, value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NN {
            get {
                return this.NNField;
            }
            set {
                if ((object.ReferenceEquals(this.NNField, value) != true)) {
                    this.NNField = value;
                    this.RaisePropertyChanged("NN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string O {
            get {
                return this.OField;
            }
            set {
                if ((object.ReferenceEquals(this.OField, value) != true)) {
                    this.OField = value;
                    this.RaisePropertyChanged("O");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OO {
            get {
                return this.OOField;
            }
            set {
                if ((object.ReferenceEquals(this.OOField, value) != true)) {
                    this.OOField = value;
                    this.RaisePropertyChanged("OO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string P {
            get {
                return this.PField;
            }
            set {
                if ((object.ReferenceEquals(this.PField, value) != true)) {
                    this.PField = value;
                    this.RaisePropertyChanged("P");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PP {
            get {
                return this.PPField;
            }
            set {
                if ((object.ReferenceEquals(this.PPField, value) != true)) {
                    this.PPField = value;
                    this.RaisePropertyChanged("PP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Q {
            get {
                return this.QField;
            }
            set {
                if ((object.ReferenceEquals(this.QField, value) != true)) {
                    this.QField = value;
                    this.RaisePropertyChanged("Q");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QQ {
            get {
                return this.QQField;
            }
            set {
                if ((object.ReferenceEquals(this.QQField, value) != true)) {
                    this.QQField = value;
                    this.RaisePropertyChanged("QQ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string R {
            get {
                return this.RField;
            }
            set {
                if ((object.ReferenceEquals(this.RField, value) != true)) {
                    this.RField = value;
                    this.RaisePropertyChanged("R");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RR {
            get {
                return this.RRField;
            }
            set {
                if ((object.ReferenceEquals(this.RRField, value) != true)) {
                    this.RRField = value;
                    this.RaisePropertyChanged("RR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string S {
            get {
                return this.SField;
            }
            set {
                if ((object.ReferenceEquals(this.SField, value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SS {
            get {
                return this.SSField;
            }
            set {
                if ((object.ReferenceEquals(this.SSField, value) != true)) {
                    this.SSField = value;
                    this.RaisePropertyChanged("SS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string T {
            get {
                return this.TField;
            }
            set {
                if ((object.ReferenceEquals(this.TField, value) != true)) {
                    this.TField = value;
                    this.RaisePropertyChanged("T");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TT {
            get {
                return this.TTField;
            }
            set {
                if ((object.ReferenceEquals(this.TTField, value) != true)) {
                    this.TTField = value;
                    this.RaisePropertyChanged("TT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U {
            get {
                return this.UField;
            }
            set {
                if ((object.ReferenceEquals(this.UField, value) != true)) {
                    this.UField = value;
                    this.RaisePropertyChanged("U");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UU {
            get {
                return this.UUField;
            }
            set {
                if ((object.ReferenceEquals(this.UUField, value) != true)) {
                    this.UUField = value;
                    this.RaisePropertyChanged("UU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string V {
            get {
                return this.VField;
            }
            set {
                if ((object.ReferenceEquals(this.VField, value) != true)) {
                    this.VField = value;
                    this.RaisePropertyChanged("V");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VV {
            get {
                return this.VVField;
            }
            set {
                if ((object.ReferenceEquals(this.VVField, value) != true)) {
                    this.VVField = value;
                    this.RaisePropertyChanged("VV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string W {
            get {
                return this.WField;
            }
            set {
                if ((object.ReferenceEquals(this.WField, value) != true)) {
                    this.WField = value;
                    this.RaisePropertyChanged("W");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WW {
            get {
                return this.WWField;
            }
            set {
                if ((object.ReferenceEquals(this.WWField, value) != true)) {
                    this.WWField = value;
                    this.RaisePropertyChanged("WW");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X {
            get {
                return this.XField;
            }
            set {
                if ((object.ReferenceEquals(this.XField, value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XX {
            get {
                return this.XXField;
            }
            set {
                if ((object.ReferenceEquals(this.XXField, value) != true)) {
                    this.XXField = value;
                    this.RaisePropertyChanged("XX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Y {
            get {
                return this.YField;
            }
            set {
                if ((object.ReferenceEquals(this.YField, value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YY {
            get {
                return this.YYField;
            }
            set {
                if ((object.ReferenceEquals(this.YYField, value) != true)) {
                    this.YYField = value;
                    this.RaisePropertyChanged("YY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Z {
            get {
                return this.ZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZField, value) != true)) {
                    this.ZField = value;
                    this.RaisePropertyChanged("Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZZ {
            get {
                return this.ZZField;
            }
            set {
                if ((object.ReferenceEquals(this.ZZField, value) != true)) {
                    this.ZZField = value;
                    this.RaisePropertyChanged("ZZ");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightEmail", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightEmail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> POSignOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QASignOffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VersionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CI {
            get {
                return this.CIField;
            }
            set {
                if ((this.CIField.Equals(value) != true)) {
                    this.CIField = value;
                    this.RaisePropertyChanged("CI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> POSignOff {
            get {
                return this.POSignOffField;
            }
            set {
                if ((this.POSignOffField.Equals(value) != true)) {
                    this.POSignOffField = value;
                    this.RaisePropertyChanged("POSignOff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QA {
            get {
                return this.QAField;
            }
            set {
                if ((this.QAField.Equals(value) != true)) {
                    this.QAField = value;
                    this.RaisePropertyChanged("QA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QASignOff {
            get {
                return this.QASignOffField;
            }
            set {
                if ((this.QASignOffField.Equals(value) != true)) {
                    this.QASignOffField = value;
                    this.RaisePropertyChanged("QASignOff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightUser", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildMasterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ConfigManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastAccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseEngineerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildMaster {
            get {
                return this.BuildMasterField;
            }
            set {
                if ((this.BuildMasterField.Equals(value) != true)) {
                    this.BuildMasterField = value;
                    this.RaisePropertyChanged("BuildMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConfigManager {
            get {
                return this.ConfigManagerField;
            }
            set {
                if ((this.ConfigManagerField.Equals(value) != true)) {
                    this.ConfigManagerField = value;
                    this.RaisePropertyChanged("ConfigManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastAccess {
            get {
                return this.LastAccessField;
            }
            set {
                if ((this.LastAccessField.Equals(value) != true)) {
                    this.LastAccessField = value;
                    this.RaisePropertyChanged("LastAccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectManager {
            get {
                return this.ProjectManagerField;
            }
            set {
                if ((this.ProjectManagerField.Equals(value) != true)) {
                    this.ProjectManagerField = value;
                    this.RaisePropertyChanged("ProjectManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QA {
            get {
                return this.QAField;
            }
            set {
                if ((this.QAField.Equals(value) != true)) {
                    this.QAField = value;
                    this.RaisePropertyChanged("QA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseEngineer {
            get {
                return this.ReleaseEngineerField;
            }
            set {
                if ((this.ReleaseEngineerField.Equals(value) != true)) {
                    this.ReleaseEngineerField = value;
                    this.RaisePropertyChanged("ReleaseEngineer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightOrganization", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightOrganization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBrand", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBrand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DefaultDBServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultDBServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrgnizationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepoTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrunkUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildServerId {
            get {
                return this.BuildServerIdField;
            }
            set {
                if ((this.BuildServerIdField.Equals(value) != true)) {
                    this.BuildServerIdField = value;
                    this.RaisePropertyChanged("BuildServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildServerName {
            get {
                return this.BuildServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildServerNameField, value) != true)) {
                    this.BuildServerNameField = value;
                    this.RaisePropertyChanged("BuildServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultDBServerId {
            get {
                return this.DefaultDBServerIdField;
            }
            set {
                if ((this.DefaultDBServerIdField.Equals(value) != true)) {
                    this.DefaultDBServerIdField = value;
                    this.RaisePropertyChanged("DefaultDBServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultDBServerName {
            get {
                return this.DefaultDBServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultDBServerNameField, value) != true)) {
                    this.DefaultDBServerNameField = value;
                    this.RaisePropertyChanged("DefaultDBServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrgnizationId {
            get {
                return this.OrgnizationIdField;
            }
            set {
                if ((this.OrgnizationIdField.Equals(value) != true)) {
                    this.OrgnizationIdField = value;
                    this.RaisePropertyChanged("OrgnizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepoType {
            get {
                return this.RepoTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RepoTypeField, value) != true)) {
                    this.RepoTypeField = value;
                    this.RaisePropertyChanged("RepoType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrunkUrl {
            get {
                return this.TrunkUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.TrunkUrlField, value) != true)) {
                    this.TrunkUrlField = value;
                    this.RaisePropertyChanged("TrunkUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightEnvironment", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightEnvironment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailList {
            get {
                return this.EmailListField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailListField, value) != true)) {
                    this.EmailListField = value;
                    this.RaisePropertyChanged("EmailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBuild", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBuild : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BinaryVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullBuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceCodeVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BinaryVersion {
            get {
                return this.BinaryVersionField;
            }
            set {
                if ((this.BinaryVersionField.Equals(value) != true)) {
                    this.BinaryVersionField = value;
                    this.RaisePropertyChanged("BinaryVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((this.BuildNumberField.Equals(value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildTime {
            get {
                return this.BuildTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildTimeField, value) != true)) {
                    this.BuildTimeField = value;
                    this.RaisePropertyChanged("BuildTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildType {
            get {
                return this.BuildTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildTypeField, value) != true)) {
                    this.BuildTypeField = value;
                    this.RaisePropertyChanged("BuildType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullBuildNumber {
            get {
                return this.FullBuildNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FullBuildNumberField, value) != true)) {
                    this.FullBuildNumberField = value;
                    this.RaisePropertyChanged("FullBuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceCodeVersion {
            get {
                return this.SourceCodeVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceCodeVersionField, value) != true)) {
                    this.SourceCodeVersionField = value;
                    this.RaisePropertyChanged("SourceCodeVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionString {
            get {
                return this.VersionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionStringField, value) != true)) {
                    this.VersionStringField = value;
                    this.RaisePropertyChanged("VersionString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBuildLog", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBuildLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildId {
            get {
                return this.BuildIdField;
            }
            set {
                if ((this.BuildIdField.Equals(value) != true)) {
                    this.BuildIdField = value;
                    this.RaisePropertyChanged("BuildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBuildHash", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBuildHash : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LayerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildId {
            get {
                return this.BuildIdField;
            }
            set {
                if ((this.BuildIdField.Equals(value) != true)) {
                    this.BuildIdField = value;
                    this.RaisePropertyChanged("BuildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LayerId {
            get {
                return this.LayerIdField;
            }
            set {
                if ((this.LayerIdField.Equals(value) != true)) {
                    this.LayerIdField = value;
                    this.RaisePropertyChanged("LayerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightDeployHash", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightDeployHash : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeploymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MissingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServerCompIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeploymentId {
            get {
                return this.DeploymentIdField;
            }
            set {
                if ((this.DeploymentIdField.Equals(value) != true)) {
                    this.DeploymentIdField = value;
                    this.RaisePropertyChanged("DeploymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LayerId {
            get {
                return this.LayerIdField;
            }
            set {
                if ((this.LayerIdField.Equals(value) != true)) {
                    this.LayerIdField = value;
                    this.RaisePropertyChanged("LayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Missing {
            get {
                return this.MissingField;
            }
            set {
                if ((this.MissingField.Equals(value) != true)) {
                    this.MissingField = value;
                    this.RaisePropertyChanged("Missing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServerCompId {
            get {
                return this.ServerCompIdField;
            }
            set {
                if ((this.ServerCompIdField.Equals(value) != true)) {
                    this.ServerCompIdField = value;
                    this.RaisePropertyChanged("ServerCompId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightFramework", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightFramework : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightArchitecture", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightArchitecture : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightConfiguration", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBrandConfiguration", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBrandConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandName {
            get {
                return this.BrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandNameField, value) != true)) {
                    this.BrandNameField = value;
                    this.RaisePropertyChanged("BrandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightOrganizationConfiguration", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightOrganizationConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrgnizationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrgnizationId {
            get {
                return this.OrgnizationIdField;
            }
            set {
                if ((this.OrgnizationIdField.Equals(value) != true)) {
                    this.OrgnizationIdField = value;
                    this.RaisePropertyChanged("OrgnizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSiteComponent", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightSiteComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportedBuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReportedBuildIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompName {
            get {
                return this.CompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompNameField, value) != true)) {
                    this.CompNameField = value;
                    this.RaisePropertyChanged("CompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompServer {
            get {
                return this.CompServerField;
            }
            set {
                if ((object.ReferenceEquals(this.CompServerField, value) != true)) {
                    this.CompServerField = value;
                    this.RaisePropertyChanged("CompServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompType {
            get {
                return this.CompTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CompTypeField, value) != true)) {
                    this.CompTypeField = value;
                    this.RaisePropertyChanged("CompType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportedBuild {
            get {
                return this.ReportedBuildField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportedBuildField, value) != true)) {
                    this.ReportedBuildField = value;
                    this.RaisePropertyChanged("ReportedBuild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReportedBuildId {
            get {
                return this.ReportedBuildIdField;
            }
            set {
                if ((this.ReportedBuildIdField.Equals(value) != true)) {
                    this.ReportedBuildIdField = value;
                    this.RaisePropertyChanged("ReportedBuildId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightPrometheusServer", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightPrometheusServer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackupDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildEnvDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildsDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCheckedInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LoadBalancerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolsDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackupDir {
            get {
                return this.BackupDirField;
            }
            set {
                if ((object.ReferenceEquals(this.BackupDirField, value) != true)) {
                    this.BackupDirField = value;
                    this.RaisePropertyChanged("BackupDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildEnvDir {
            get {
                return this.BuildEnvDirField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildEnvDirField, value) != true)) {
                    this.BuildEnvDirField = value;
                    this.RaisePropertyChanged("BuildEnvDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildsDir {
            get {
                return this.BuildsDirField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildsDirField, value) != true)) {
                    this.BuildsDirField = value;
                    this.RaisePropertyChanged("BuildsDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastCheckedIn {
            get {
                return this.LastCheckedInField;
            }
            set {
                if ((this.LastCheckedInField.Equals(value) != true)) {
                    this.LastCheckedInField = value;
                    this.RaisePropertyChanged("LastCheckedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModifiedBy {
            get {
                return this.LastModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedByField, value) != true)) {
                    this.LastModifiedByField = value;
                    this.RaisePropertyChanged("LastModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LoadBalancerId {
            get {
                return this.LoadBalancerIdField;
            }
            set {
                if ((this.LoadBalancerIdField.Equals(value) != true)) {
                    this.LoadBalancerIdField = value;
                    this.RaisePropertyChanged("LoadBalancerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OS {
            get {
                return this.OSField;
            }
            set {
                if ((object.ReferenceEquals(this.OSField, value) != true)) {
                    this.OSField = value;
                    this.RaisePropertyChanged("OS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ServerId {
            get {
                return this.ServerIdField;
            }
            set {
                if ((this.ServerIdField.Equals(value) != true)) {
                    this.ServerIdField = value;
                    this.RaisePropertyChanged("ServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolsDir {
            get {
                return this.ToolsDirField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolsDirField, value) != true)) {
                    this.ToolsDirField = value;
                    this.RaisePropertyChanged("ToolsDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightBrandConfigurationHistory", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightBrandConfigurationHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightOrganizationConfigurationHistory", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightOrganizationConfigurationHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSiteConfigurationHistory", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightSiteConfigurationHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FeatureEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigValue {
            get {
                return this.ConfigValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigValueField, value) != true)) {
                    this.ConfigValueField = value;
                    this.RaisePropertyChanged("ConfigValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigVariable {
            get {
                return this.ConfigVariableField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigVariableField, value) != true)) {
                    this.ConfigVariableField = value;
                    this.RaisePropertyChanged("ConfigVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FeatureEnabled {
            get {
                return this.FeatureEnabledField;
            }
            set {
                if ((this.FeatureEnabledField.Equals(value) != true)) {
                    this.FeatureEnabledField = value;
                    this.RaisePropertyChanged("FeatureEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightConfigTemplate", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightConfigTemplate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuildIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BuildNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplatePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuildId {
            get {
                return this.BuildIdField;
            }
            set {
                if ((this.BuildIdField.Equals(value) != true)) {
                    this.BuildIdField = value;
                    this.RaisePropertyChanged("BuildId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BuildNumber {
            get {
                return this.BuildNumberField;
            }
            set {
                if ((this.BuildNumberField.Equals(value) != true)) {
                    this.BuildNumberField = value;
                    this.RaisePropertyChanged("BuildNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildVersion {
            get {
                return this.BuildVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildVersionField, value) != true)) {
                    this.BuildVersionField = value;
                    this.RaisePropertyChanged("BuildVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplatePath {
            get {
                return this.TemplatePathField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplatePathField, value) != true)) {
                    this.TemplatePathField = value;
                    this.RaisePropertyChanged("TemplatePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionString {
            get {
                return this.VersionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionStringField, value) != true)) {
                    this.VersionStringField = value;
                    this.RaisePropertyChanged("VersionString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightCodeMoveHistory", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightCodeMoveHistory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeMoveIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RolledBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduledByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduledStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerifiedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeMove {
            get {
                return this.CodeMoveField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeMoveField, value) != true)) {
                    this.CodeMoveField = value;
                    this.RaisePropertyChanged("CodeMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeMoveId {
            get {
                return this.CodeMoveIdField;
            }
            set {
                if ((this.CodeMoveIdField.Equals(value) != true)) {
                    this.CodeMoveIdField = value;
                    this.RaisePropertyChanged("CodeMoveId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Modified {
            get {
                return this.ModifiedField;
            }
            set {
                if ((this.ModifiedField.Equals(value) != true)) {
                    this.ModifiedField = value;
                    this.RaisePropertyChanged("Modified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RolledBack {
            get {
                return this.RolledBackField;
            }
            set {
                if ((this.RolledBackField.Equals(value) != true)) {
                    this.RolledBackField = value;
                    this.RaisePropertyChanged("RolledBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduledBy {
            get {
                return this.ScheduledByField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduledByField, value) != true)) {
                    this.ScheduledByField = value;
                    this.RaisePropertyChanged("ScheduledBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduledStart {
            get {
                return this.ScheduledStartField;
            }
            set {
                if ((this.ScheduledStartField.Equals(value) != true)) {
                    this.ScheduledStartField = value;
                    this.RaisePropertyChanged("ScheduledStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VerifiedBy {
            get {
                return this.VerifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.VerifiedByField, value) != true)) {
                    this.VerifiedByField = value;
                    this.RaisePropertyChanged("VerifiedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightCompositeBuildInfo", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightCompositeBuildInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildRevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompiledOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeploymentScheduledOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildRevision {
            get {
                return this.BuildRevisionField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildRevisionField, value) != true)) {
                    this.BuildRevisionField = value;
                    this.RaisePropertyChanged("BuildRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildVersion {
            get {
                return this.BuildVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildVersionField, value) != true)) {
                    this.BuildVersionField = value;
                    this.RaisePropertyChanged("BuildVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompiledOn {
            get {
                return this.CompiledOnField;
            }
            set {
                if ((this.CompiledOnField.Equals(value) != true)) {
                    this.CompiledOnField = value;
                    this.RaisePropertyChanged("CompiledOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeploymentScheduledOn {
            get {
                return this.DeploymentScheduledOnField;
            }
            set {
                if ((this.DeploymentScheduledOnField.Equals(value) != true)) {
                    this.DeploymentScheduledOnField = value;
                    this.RaisePropertyChanged("DeploymentScheduledOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightGroupPrincipal", Namespace="http://schemas.datacontract.org/2004/07/BuildAtlas.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightGroupPrincipal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BuildAtlasWCF.IBuildAtlasWCF")]
    public interface IBuildAtlasWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateCodeMoveStatus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateCodeMoveStatusResponse")]
        void UpdateCodeMoveStatus(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove lcm, string status, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateCodeMoveStatus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateCodeMoveStatusResponse")]
        System.Threading.Tasks.Task UpdateCodeMoveStatusAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove lcm, string status, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCodeMovesResponse")]
        int SaveCodeMoves(string codeMoveTitle, string status, string username, System.DateTime start, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, ManualDeploymentCheck.BuildAtlasWCF.LightLayer[] layers, int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCodeMovesResponse")]
        System.Threading.Tasks.Task<int> SaveCodeMovesAsync(string codeMoveTitle, string status, string username, System.DateTime start, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, ManualDeploymentCheck.BuildAtlasWCF.LightLayer[] layers, int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentStatus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentStatusResponse")]
        void UpdateDeploymentStatus(int id, string status, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentStatus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentStatusResponse")]
        System.Threading.Tasks.Task UpdateDeploymentStatusAsync(int id, string status, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeployment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeploymentResponse")]
        int SaveDeployment(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, string modifedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeployment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeploymentResponse")]
        System.Threading.Tasks.Task<int> SaveDeploymentAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, string modifedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeploymentLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeploymentLogResponse")]
        int SaveDeploymentLog(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, System.DateTime logTime, string destPath, string msg, string notes, bool useStartTimeAsFinishTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeploymentLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeploymentLogResponse")]
        System.Threading.Tasks.Task<int> SaveDeploymentLogAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, System.DateTime logTime, string destPath, string msg, string notes, bool useStartTimeAsFinishTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/AppendToLogMessage", ReplyAction="http://tempuri.org/IBuildAtlasWCF/AppendToLogMessageResponse")]
        void AppendToLogMessage(int logID, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/AppendToLogMessage", ReplyAction="http://tempuri.org/IBuildAtlasWCF/AppendToLogMessageResponse")]
        System.Threading.Tasks.Task AppendToLogMessageAsync(int logID, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentLogFinishTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentLogFinishTimeResponse")]
        void UpdateDeploymentLogFinishTime(int logID, System.DateTime finishTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentLogFinishTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateDeploymentLogFinishTimeResponse")]
        System.Threading.Tasks.Task UpdateDeploymentLogFinishTimeAsync(int logID, System.DateTime finishTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveTestResults", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveTestResultsResponse")]
        int SaveTestResults(int buildId, string test, System.Nullable<int> total, System.Nullable<int> pass, System.Nullable<int> fail, System.Nullable<int> error, System.Nullable<int> inconclusive, System.Nullable<int> ignored, System.Nullable<System.DateTime> ran);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveTestResults", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveTestResultsResponse")]
        System.Threading.Tasks.Task<int> SaveTestResultsAsync(int buildId, string test, System.Nullable<int> total, System.Nullable<int> pass, System.Nullable<int> fail, System.Nullable<int> error, System.Nullable<int> inconclusive, System.Nullable<int> ignored, System.Nullable<System.DateTime> ran);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CreateHelpDeskTicket", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CreateHelpDeskTicketResponse")]
        string CreateHelpDeskTicket(string title, string request, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string submittedBy, string notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CreateHelpDeskTicket", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CreateHelpDeskTicketResponse")]
        System.Threading.Tasks.Task<string> CreateHelpDeskTicketAsync(string title, string request, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string submittedBy, string notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateHelpDeskTicket", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateHelpDeskTicketResponse")]
        int UpdateHelpDeskTicket(int id, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string modifiedBy, string ownedBy, string notes, System.Nullable<int> totalMins, System.Nullable<int> rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateHelpDeskTicket", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateHelpDeskTicketResponse")]
        System.Threading.Tasks.Task<int> UpdateHelpDeskTicketAsync(int id, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string modifiedBy, string ownedBy, string notes, System.Nullable<int> totalMins, System.Nullable<int> rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveHelpDeskTicketMsg", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveHelpDeskTicketMsgResponse")]
        int SaveHelpDeskTicketMsg(int ticketId, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveHelpDeskTicketMsg", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveHelpDeskTicketMsgResponse")]
        System.Threading.Tasks.Task<int> SaveHelpDeskTicketMsgAsync(int ticketId, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveConfigTemplate", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveConfigTemplateResponse")]
        int SaveConfigTemplate(string path, string template, int versionId, int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveConfigTemplate", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveConfigTemplateResponse")]
        System.Threading.Tasks.Task<int> SaveConfigTemplateAsync(string path, string template, int versionId, int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSSHCommand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSSHCommandResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand SaveSSHCommand(string id, string command, string requestedBy, string output, string status, string server, System.Nullable<int> callingServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSSHCommand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSSHCommandResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand> SaveSSHCommandAsync(string id, string command, string requestedBy, string output, string status, string server, System.Nullable<int> callingServer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteUserResponse")]
        void DeleteUser(int _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEmailResponse")]
        void DeleteEmail(int _email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEmailResponse")]
        System.Threading.Tasks.Task DeleteEmailAsync(int _email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEmailByUserId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEmailByUserIdResponse")]
        void DeleteEmailByUserId(int _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEmailByUserId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEmailByUserIdResponse")]
        System.Threading.Tasks.Task DeleteEmailByUserIdAsync(int _user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEmailList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEmailListResponse")]
        void DeleteEmailList(int[] _emails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEmailList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEmailListResponse")]
        System.Threading.Tasks.Task DeleteEmailListAsync(int[] _emails, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeletePrometheusServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeletePrometheusServerResponse")]
        void DeletePrometheusServer(int _serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeletePrometheusServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeletePrometheusServerResponse")]
        System.Threading.Tasks.Task DeletePrometheusServerAsync(int _serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationResponse")]
        void DeleteOrganization(int _org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationResponse")]
        System.Threading.Tasks.Task DeleteOrganizationAsync(int _org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBrandResponse")]
        void DeleteBrand(int _brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBrandResponse")]
        System.Threading.Tasks.Task DeleteBrandAsync(int _brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteServerResponse")]
        void DeleteServer(int _server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteServerResponse")]
        System.Threading.Tasks.Task DeleteServerAsync(int _server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEnvironment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEnvironmentResponse")]
        void DeleteEnvironment(int _environment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteEnvironment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteEnvironmentResponse")]
        System.Threading.Tasks.Task DeleteEnvironmentAsync(int _environment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteVersionResponse")]
        void DeleteVersion(int _version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteVersionResponse")]
        System.Threading.Tasks.Task DeleteVersionAsync(int _version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteProjectResponse")]
        void DeleteProject(int _project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteProjectResponse")]
        System.Threading.Tasks.Task DeleteProjectAsync(int _project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteLayerResponse")]
        void DeleteLayer(int _layer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteLayerResponse")]
        System.Threading.Tasks.Task DeleteLayerAsync(int _layer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBuildTaskResponse")]
        void DeleteBuildTask(int _buildTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBuildTaskResponse")]
        System.Threading.Tasks.Task DeleteBuildTaskAsync(int _buildTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteRenameDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteRenameDirResponse")]
        void DeleteRenameDir(int _renameDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteRenameDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteRenameDirResponse")]
        System.Threading.Tasks.Task DeleteRenameDirAsync(int _renameDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteDeleteDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteDeleteDirResponse")]
        void DeleteDeleteDir(int _deleteDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteDeleteDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteDeleteDirResponse")]
        System.Threading.Tasks.Task DeleteDeleteDirAsync(int _deleteDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteFrameworkResponse")]
        void DeleteFramework(int _framework);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteFrameworkResponse")]
        System.Threading.Tasks.Task DeleteFrameworkAsync(int _framework);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteArchitectureResponse")]
        void DeleteArchitecture(int _architecture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteArchitectureResponse")]
        System.Threading.Tasks.Task DeleteArchitectureAsync(int _architecture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteConfigurationResponse")]
        void DeleteConfiguration(int _configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteConfigurationResponse")]
        System.Threading.Tasks.Task DeleteConfigurationAsync(int _configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteServerCompResponse")]
        void DeleteServerComp(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteServerCompResponse")]
        System.Threading.Tasks.Task DeleteServerCompAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteCompDefinition", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteCompDefinitionResponse")]
        void DeleteCompDefinition(int id, System.Nullable<int> replaceDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteCompDefinition", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteCompDefinitionResponse")]
        System.Threading.Tasks.Task DeleteCompDefinitionAsync(int id, System.Nullable<int> replaceDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSiteResponse")]
        void DeleteSite(int _site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSiteResponse")]
        System.Threading.Tasks.Task DeleteSiteAsync(int _site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfigurationResponse")]
        void DeleteBrandConfiguration(int _config, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfigurationResponse")]
        System.Threading.Tasks.Task DeleteBrandConfigurationAsync(int _config, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfigurationList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfigurationListResponse")]
        void DeleteBrandConfigurationList(int[] _configs, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfigurationList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBrandConfigurationListResponse")]
        System.Threading.Tasks.Task DeleteBrandConfigurationListAsync(int[] _configs, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfigurationResponse")]
        void DeleteOrganizationConfiguration(int _config, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfigurationResponse")]
        System.Threading.Tasks.Task DeleteOrganizationConfigurationAsync(int _config, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfigurationList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfigurationListResponse")]
        void DeleteOrganizationConfigurationList(int[] _configs, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfigurationList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteOrganizationConfigurationListResponse")]
        System.Threading.Tasks.Task DeleteOrganizationConfigurationListAsync(int[] _configs, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfigurationResponse")]
        void DeleteSiteConfiguration(int _config, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfigurationResponse")]
        System.Threading.Tasks.Task DeleteSiteConfigurationAsync(int _config, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfigurationList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfigurationListResponse")]
        void DeleteSiteConfigurationList(int[] _configs, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfigurationList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSiteConfigurationListResponse")]
        System.Threading.Tasks.Task DeleteSiteConfigurationListAsync(int[] _configs, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteServerConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteServerConfigurationResponse")]
        void DeleteServerConfiguration(int _config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteServerConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteServerConfigurationResponse")]
        System.Threading.Tasks.Task DeleteServerConfigurationAsync(int _config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteTool", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteToolResponse")]
        void DeleteTool(int _tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteTool", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteToolResponse")]
        System.Threading.Tasks.Task DeleteToolAsync(int _tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBuildResponse")]
        void DeleteBuild(int _build);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBuildResponse")]
        System.Threading.Tasks.Task DeleteBuildAsync(int _build);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteConfigTemplates", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteConfigTemplatesResponse")]
        void DeleteConfigTemplates(int _build);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteConfigTemplates", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteConfigTemplatesResponse")]
        System.Threading.Tasks.Task DeleteConfigTemplatesAsync(int _build);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBuildLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBuildLogResponse")]
        void DeleteBuildLog(int _buildLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteBuildLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteBuildLogResponse")]
        System.Threading.Tasks.Task DeleteBuildLogAsync(int _buildLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteCodeMoveResponse")]
        void DeleteCodeMove(int _codeMove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteCodeMoveResponse")]
        System.Threading.Tasks.Task DeleteCodeMoveAsync(int _codeMove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteDeployment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteDeploymentResponse")]
        void DeleteDeployment(int _deployment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteDeployment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteDeploymentResponse")]
        System.Threading.Tasks.Task DeleteDeploymentAsync(int _deployment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteDeploymentLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteDeploymentLogResponse")]
        void DeleteDeploymentLog(int _deploymentLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteDeploymentLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteDeploymentLogResponse")]
        System.Threading.Tasks.Task DeleteDeploymentLogAsync(int _deploymentLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSSHCommand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSSHCommandResponse")]
        void DeleteSSHCommand(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeleteSSHCommand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeleteSSHCommandResponse")]
        System.Threading.Tasks.Task DeleteSSHCommandAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneServerResponse")]
        int CloneServer(ManualDeploymentCheck.BuildAtlasWCF.LightServer toClone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneServerResponse")]
        System.Threading.Tasks.Task<int> CloneServerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServer toClone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneServerCompsToServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneServerCompsToServerResponse")]
        void CloneServerCompsToServer(int cloneTo, ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[] configs, ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] comps, ManualDeploymentCheck.BuildAtlasWCF.LightTool[] tool, bool keepAssociations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneServerCompsToServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneServerCompsToServerResponse")]
        System.Threading.Tasks.Task CloneServerCompsToServerAsync(int cloneTo, ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[] configs, ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] comps, ManualDeploymentCheck.BuildAtlasWCF.LightTool[] tool, bool keepAssociations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneServerCompToServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneServerCompToServerResponse")]
        void CloneServerCompToServer(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp toClone, int cloneTo, bool keepAssociations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneServerCompToServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneServerCompToServerResponse")]
        System.Threading.Tasks.Task CloneServerCompToServerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp toClone, int cloneTo, bool keepAssociations);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneVersionResponse")]
        int CloneVersion(ManualDeploymentCheck.BuildAtlasWCF.LightVersion toClone, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneVersionResponse")]
        System.Threading.Tasks.Task<int> CloneVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightVersion toClone, string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneLayerToVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneLayerToVersionResponse")]
        void CloneLayerToVersion(ManualDeploymentCheck.BuildAtlasWCF.LightLayer toClone, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneLayerToVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneLayerToVersionResponse")]
        System.Threading.Tasks.Task CloneLayerToVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayer toClone, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneBuildTaskToProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneBuildTaskToProjectResponse")]
        void CloneBuildTaskToProject(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask toClone, int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneBuildTaskToProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneBuildTaskToProjectResponse")]
        System.Threading.Tasks.Task CloneBuildTaskToProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask toClone, int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneProjectToVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneProjectToVersionResponse")]
        void CloneProjectToVersion(ManualDeploymentCheck.BuildAtlasWCF.LightProject toClone, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneProjectToVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneProjectToVersionResponse")]
        System.Threading.Tasks.Task CloneProjectToVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightProject toClone, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneDeleteDirToProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneDeleteDirToProjectResponse")]
        void CloneDeleteDirToProject(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir toClone, int projectid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneDeleteDirToProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneDeleteDirToProjectResponse")]
        System.Threading.Tasks.Task CloneDeleteDirToProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir toClone, int projectid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneRenameDirToProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneRenameDirToProjectResponse")]
        void CloneRenameDirToProject(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir toClone, int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneRenameDirToProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneRenameDirToProjectResponse")]
        System.Threading.Tasks.Task CloneRenameDirToProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir toClone, int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToVersionResponse")]
        void CloneSiteConfigurationToVersion(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToVersionResponse")]
        System.Threading.Tasks.Task CloneSiteConfigurationToVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToSiteAndVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToSiteAndVersionResponse")]
        void CloneSiteConfigurationToSiteAndVersion(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToSiteAndVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/CloneSiteConfigurationToSiteAndVersionResponse")]
        System.Threading.Tasks.Task CloneSiteConfigurationToSiteAndVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeployments", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeployments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeployments", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByServerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByServerIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeploymentsByServerId(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByServerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByServerIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsByServerIdAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByPrometheusId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByPrometheusIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeploymentsByPrometheusId(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByPrometheusId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsByPrometheusIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsByPrometheusIdAsync(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsByServerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsByServerIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetStagedDeploymentsByServerId(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsByServerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsByServerIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetStagedDeploymentsByServerIdAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsForServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsForServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeploymentsForServer(string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsForServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledDeploymentsForServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsForServerAsync(string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsForServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsForServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetStagedDeploymentsForServer(string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsForServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetStagedDeploymentsForServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetStagedDeploymentsForServerAsync(string serverName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndServerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndServerIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsByResultAndServerId(string result, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndServerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndServerIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsByResultAndServerIdAsync(string result, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndCodeMoveId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndCodeMoveIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsByResultAndCodeMoveId(string result, int codeMoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndCodeMoveId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultAndCodeMoveIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsByResultAndCodeMoveIdAsync(string result, int codeMoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResult", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsByResult(string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResult", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsByResultResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsByResultAsync(string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTodaysDeploymentsForPrometheus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTodaysDeploymentsForPrometheusResponse")]
        int[] GetTodaysDeploymentsForPrometheus(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTodaysDeploymentsForPrometheus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTodaysDeploymentsForPrometheusResponse")]
        System.Threading.Tasks.Task<int[]> GetTodaysDeploymentsForPrometheusAsync(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTodaysAvgDeployTimePrometheus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTodaysAvgDeployTimePrometheusResponse")]
        double GetTodaysAvgDeployTimePrometheus(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTodaysAvgDeployTimePrometheus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTodaysAvgDeployTimePrometheusResponse")]
        System.Threading.Tasks.Task<double> GetTodaysAvgDeployTimePrometheusAsync(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForServerResponse")]
        int[] GetDeploymentCountsForServer(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForServerResponse")]
        System.Threading.Tasks.Task<int[]> GetDeploymentCountsForServerAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForPrometheus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForPrometheusResponse")]
        int[] GetDeploymentCountsForPrometheus(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForPrometheus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentCountsForPrometheusResponse")]
        System.Threading.Tasks.Task<int[]> GetDeploymentCountsForPrometheusAsync(int promId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentLogResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeploymentLogEntry[] GetDeploymentLog(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentLogResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeploymentLogEntry[]> GetDeploymentLogAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleAssociationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetAllPossibleAssociations(int layerId, int regionId, int defId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleAssociationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetAllPossibleAssociationsAsync(int layerId, int regionId, int defId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleLayerAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleLayerAssociationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetAllPossibleLayerAssociations(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleLayerAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllPossibleLayerAssociationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetAllPossibleLayerAssociationsAsync(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllExistingLayerAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllExistingLayerAssociationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetAllExistingLayerAssociations(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllExistingLayerAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllExistingLayerAssociationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetAllExistingLayerAssociationsAsync(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndLayerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinationsForSiteAndLayer(int layerId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndLayerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsForSiteAndLayerAsync(int layerId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinations(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsAsync(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndVersionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinationsForSiteAndVersion(int siteId, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForSiteAndVersionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsForSiteAndVersionAsync(int siteId, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForRegionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinationsForRegion(int regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDestinationsForRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsForRegionAsync(int regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTestResults", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTestResultsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[] GetTestResults(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTestResults", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTestResultsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[]> GetTestResultsAsync(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTestResultsByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTestResultsByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[] GetTestResultsByName(int buildId, string test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTestResultsByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetTestResultsByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[]> GetTestResultsByNameAsync(int buildId, string test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatuses", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatusesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus[] GetHelpDeskTicketStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatuses", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatusesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus[]> GetHelpDeskTicketStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatusById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatusByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus GetHelpDeskTicketStatusById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatusById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketStatusByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus> GetHelpDeskTicketStatusByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTickets", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTickets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTickets", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicket", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket GetHelpDeskTicket(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicket", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket> GetHelpDeskTicketAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsForQueue", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsForQueueResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsForQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsForQueue", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsForQueueResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsForQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsByStatus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsByStatusResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsByStatus(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsByStatus", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsByStatusResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsByStatusAsync(int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsSubmittedBy", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsSubmittedByResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsSubmittedBy(string submittedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsSubmittedBy", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsSubmittedByResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsSubmittedByAsync(string submittedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSpecificHelpDeskTicketsSubmittedByWithStatus" +
            "", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSpecificHelpDeskTicketsSubmittedByWithStatus" +
            "Response")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetSpecificHelpDeskTicketsSubmittedByWithStatus(string type, string submittedBy, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSpecificHelpDeskTicketsSubmittedByWithStatus" +
            "", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSpecificHelpDeskTicketsSubmittedByWithStatus" +
            "Response")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetSpecificHelpDeskTicketsSubmittedByWithStatusAsync(string type, string submittedBy, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsOwnedBy", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsOwnedByResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsOwnedBy(string ownedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsOwnedBy", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketsOwnedByResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsOwnedByAsync(string ownedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketHistoryResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketHistory[] GetHelpDeskTicketHistory(int ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketHistoryResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketHistory[]> GetHelpDeskTicketHistoryAsync(int ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketMsgs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketMsgsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketMsg[] GetHelpDeskTicketMsgs(int ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketMsgs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHelpDeskTicketMsgsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketMsg[]> GetHelpDeskTicketMsgsAsync(int ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSSHCommand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand GetSSHCommand(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSSHCommand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand> GetSSHCommandAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommands", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommandsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetPendingSSHCommands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommands", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommandsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetPendingSSHCommandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSSHCommands", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetSSHCommands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSSHCommands", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetSSHCommandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandsDescending", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandsDescendingResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetSSHCommandsDescending();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandsDescending", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSSHCommandsDescendingResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetSSHCommandsDescendingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommandsByServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommandsByServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetPendingSSHCommandsByServer(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommandsByServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPendingSSHCommandsByServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetPendingSSHCommandsByServerAsync(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompletedSSHCommandsByServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompletedSSHCommandsByServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetCompletedSSHCommandsByServer(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompletedSSHCommandsByServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompletedSSHCommandsByServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetCompletedSSHCommandsByServerAsync(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerCompDeployInfo", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerCompDeployInfoResponse")]
        void SaveServerCompDeployInfo(int compId, System.Nullable<int> match, System.Nullable<System.DateTime> tested, System.Nullable<int> onServer, System.Nullable<int> deploymentId, string parasites);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerCompDeployInfo", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerCompDeployInfoResponse")]
        System.Threading.Tasks.Task SaveServerCompDeployInfoAsync(int compId, System.Nullable<int> match, System.Nullable<System.DateTime> tested, System.Nullable<int> onServer, System.Nullable<int> deploymentId, string parasites);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerComponent", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerComponentResponse")]
        int SaveServerComponent(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp _svrComp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerComponent", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerComponentResponse")]
        System.Threading.Tasks.Task<int> SaveServerComponentAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp _svrComp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServerResponse")]
        int SavePrometheusServer(int _serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServerResponse")]
        System.Threading.Tasks.Task<int> SavePrometheusServerAsync(int _serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServerCheckin", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServerCheckinResponse")]
        void SavePrometheusServerCheckin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServerCheckin", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SavePrometheusServerCheckinResponse")]
        System.Threading.Tasks.Task SavePrometheusServerCheckinAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEpimetheusReports", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEpimetheusReportsResponse")]
        void SaveEpimetheusReports(int[] cleanup, int[] reports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEpimetheusReports", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEpimetheusReportsResponse")]
        System.Threading.Tasks.Task SaveEpimetheusReportsAsync(int[] cleanup, int[] reports);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCompDefList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCompDefListResponse")]
        void SaveCompDefList(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] compList, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCompDefList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCompDefListResponse")]
        System.Threading.Tasks.Task SaveCompDefListAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] compList, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCompDefinition", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCompDefinitionResponse")]
        int SaveCompDefinition(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition _compDef, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCompDefinition", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCompDefinitionResponse")]
        System.Threading.Tasks.Task<int> SaveCompDefinitionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition _compDef, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateLayerAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateLayerAssociationsResponse")]
        string UpdateLayerAssociations(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] compList, bool clearAssociations, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateLayerAssociations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateLayerAssociationsResponse")]
        System.Threading.Tasks.Task<string> UpdateLayerAssociationsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] compList, bool clearAssociations, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveLayerAssociation", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveLayerAssociationResponse")]
        int SaveLayerAssociation(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation association, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveLayerAssociation", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveLayerAssociationResponse")]
        System.Threading.Tasks.Task<int> SaveLayerAssociationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation association, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEmailAddressForUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEmailAddressForUserResponse")]
        void SaveEmailAddressForUser(int user, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEmailAddressForUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEmailAddressForUserResponse")]
        System.Threading.Tasks.Task SaveEmailAddressForUserAsync(int user, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEmailResponse")]
        void SaveEmail(ManualDeploymentCheck.BuildAtlasWCF.LightEmail _email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEmailResponse")]
        System.Threading.Tasks.Task SaveEmailAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEmail _email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEmails", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEmailsResponse")]
        void SaveEmails(ManualDeploymentCheck.BuildAtlasWCF.LightEmail[] _emails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEmails", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEmailsResponse")]
        System.Threading.Tasks.Task SaveEmailsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEmail[] _emails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveUserList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveUserListResponse")]
        void SaveUserList(ManualDeploymentCheck.BuildAtlasWCF.LightUser[] userList, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveUserList", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveUserListResponse")]
        System.Threading.Tasks.Task SaveUserListAsync(ManualDeploymentCheck.BuildAtlasWCF.LightUser[] userList, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveUserResponse")]
        string SaveUser(ManualDeploymentCheck.BuildAtlasWCF.LightUser _user, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveUserResponse")]
        System.Threading.Tasks.Task<string> SaveUserAsync(ManualDeploymentCheck.BuildAtlasWCF.LightUser _user, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationResponse")]
        int SaveOrganization(ManualDeploymentCheck.BuildAtlasWCF.LightOrganization _org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationResponse")]
        System.Threading.Tasks.Task<int> SaveOrganizationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightOrganization _org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateBrandOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateBrandOrganizationResponse")]
        void UpdateBrandOrganization(ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] _brands, System.Nullable<int> orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateBrandOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateBrandOrganizationResponse")]
        System.Threading.Tasks.Task UpdateBrandOrganizationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] _brands, System.Nullable<int> orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBrandResponse")]
        int SaveBrand(ManualDeploymentCheck.BuildAtlasWCF.LightBrand _brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBrandResponse")]
        System.Threading.Tasks.Task<int> SaveBrandAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrand _brand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEnvironment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEnvironmentResponse")]
        int SaveEnvironment(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment _environment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveEnvironment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveEnvironmentResponse")]
        System.Threading.Tasks.Task<int> SaveEnvironmentAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment _environment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveVersionResponse")]
        int SaveVersion(ManualDeploymentCheck.BuildAtlasWCF.LightVersion _version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveVersionResponse")]
        System.Threading.Tasks.Task<int> SaveVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightVersion _version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildResponse")]
        int SaveBuild(ManualDeploymentCheck.BuildAtlasWCF.LightBuild _build);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildResponse")]
        System.Threading.Tasks.Task<int> SaveBuildAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuild _build);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuildLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildLogResponse")]
        int SaveBuildLog(ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog _buildLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuildLog", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildLogResponse")]
        System.Threading.Tasks.Task<int> SaveBuildLogAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog _buildLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuildHash", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildHashResponse")]
        int SaveBuildHash(ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuildHash", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildHashResponse")]
        System.Threading.Tasks.Task<int> SaveBuildHashAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeployHash", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeployHashResponse")]
        int SaveDeployHash(ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[] hashes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeployHash", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeployHashResponse")]
        System.Threading.Tasks.Task<int> SaveDeployHashAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[] hashes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateDeployHash", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateDeployHashResponse")]
        void UpdateDeployHash(int id, System.Nullable<int> missing, System.Nullable<int> modified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/UpdateDeployHash", ReplyAction="http://tempuri.org/IBuildAtlasWCF/UpdateDeployHashResponse")]
        System.Threading.Tasks.Task UpdateDeployHashAsync(int id, System.Nullable<int> missing, System.Nullable<int> modified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveProjectResponse")]
        int SaveProject(ManualDeploymentCheck.BuildAtlasWCF.LightProject _project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveProjectResponse")]
        System.Threading.Tasks.Task<int> SaveProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightProject _project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveLayerResponse")]
        int SaveLayer(ManualDeploymentCheck.BuildAtlasWCF.LightLayer _layer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveLayerResponse")]
        System.Threading.Tasks.Task<int> SaveLayerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayer _layer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildTaskResponse")]
        int SaveBuildTask(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask _buildTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBuildTaskResponse")]
        System.Threading.Tasks.Task<int> SaveBuildTaskAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask _buildTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveRenameDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveRenameDirResponse")]
        int SaveRenameDir(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir _renameDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveRenameDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveRenameDirResponse")]
        System.Threading.Tasks.Task<int> SaveRenameDirAsync(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir _renameDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeleteDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeleteDirResponse")]
        int SaveDeleteDir(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir _deleteDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveDeleteDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveDeleteDirResponse")]
        System.Threading.Tasks.Task<int> SaveDeleteDirAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir _deleteDir);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveFrameworkResponse")]
        int SaveFramework(ManualDeploymentCheck.BuildAtlasWCF.LightFramework _framework);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveFrameworkResponse")]
        System.Threading.Tasks.Task<int> SaveFrameworkAsync(ManualDeploymentCheck.BuildAtlasWCF.LightFramework _framework);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveArchitectureResponse")]
        int SaveArchitecture(ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture _architecture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveArchitectureResponse")]
        System.Threading.Tasks.Task<int> SaveArchitectureAsync(ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture _architecture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveConfigurationResponse")]
        int SaveConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration _configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration _configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerConnectionInfo", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerConnectionInfoResponse")]
        void SaveServerConnectionInfo(int serverId, System.Nullable<int> canConnect, System.Nullable<System.DateTime> conTested, string conTestException, string conError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerConnectionInfo", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerConnectionInfoResponse")]
        System.Threading.Tasks.Task SaveServerConnectionInfoAsync(int serverId, System.Nullable<int> canConnect, System.Nullable<System.DateTime> conTested, string conTestException, string conError);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerResponse")]
        int SaveServer(ManualDeploymentCheck.BuildAtlasWCF.LightServer _server, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerResponse")]
        System.Threading.Tasks.Task<int> SaveServerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServer _server, string modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteResponse")]
        int SaveSite(ManualDeploymentCheck.BuildAtlasWCF.LightSite _site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteResponse")]
        System.Threading.Tasks.Task<int> SaveSiteAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSite _site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfigurationsResponse")]
        void SaveBrandConfigurations(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] brandConfigs, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfigurationsResponse")]
        System.Threading.Tasks.Task SaveBrandConfigurationsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] brandConfigs, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfigurationResponse")]
        int SaveBrandConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveBrandConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveBrandConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfigurationsResponse")]
        void SaveOrganizationConfigurations(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] orgConfigs, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfigurationsResponse")]
        System.Threading.Tasks.Task SaveOrganizationConfigurationsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] orgConfigs, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfigurationResponse")]
        int SaveOrganizationConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveOrganizationConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveOrganizationConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationResponse")]
        int SaveSiteConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveSiteConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationForVersionCollection", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationForVersionCollectionRespon" +
            "se")]
        void SaveSiteConfigurationForVersionCollection(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationForVersionCollection", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationForVersionCollectionRespon" +
            "se")]
        System.Threading.Tasks.Task SaveSiteConfigurationForVersionCollectionAsync(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationCollectionForVersionCollec" +
            "tion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationCollectionForVersionCollec" +
            "tionResponse")]
        void SaveSiteConfigurationCollectionForVersionCollection(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] _configs, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationCollectionForVersionCollec" +
            "tion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveSiteConfigurationCollectionForVersionCollec" +
            "tionResponse")]
        System.Threading.Tasks.Task SaveSiteConfigurationCollectionForVersionCollectionAsync(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] _configs, string modifiedby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerConfigurationResponse")]
        int SaveServerConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration _config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveServerConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveServerConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveServerConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration _config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveTool", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveToolResponse")]
        int SaveTool(ManualDeploymentCheck.BuildAtlasWCF.LightTool _tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveTool", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveToolResponse")]
        System.Threading.Tasks.Task<int> SaveToolAsync(ManualDeploymentCheck.BuildAtlasWCF.LightTool _tool);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCodeMoveResponse")]
        int SaveCodeMove(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove _codeMove, string modifiedby, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SaveCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SaveCodeMoveResponse")]
        System.Threading.Tasks.Task<int> SaveCodeMoveAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove _codeMove, string modifiedby, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHashesForComponent", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHashesForComponentResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[] GetHashesForComponent(int serverCompId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetHashesForComponent", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetHashesForComponentResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[]> GetHashesForComponentAsync(int serverCompId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog[] GetBuildLogs(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog[]> GetBuildLogsAsync(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByStartTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByStartTimeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog GetBuildLogByStartTime(int buildId, System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByStartTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByStartTimeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog> GetBuildLogByStartTimeAsync(int buildId, System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByFinishTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByFinishTimeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog GetBuildLogByFinishTime(int buildId, System.DateTime finishTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByFinishTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByFinishTimeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog> GetBuildLogByFinishTimeAsync(int buildId, System.DateTime finishTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog GetBuildLogById(int buildLogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildLogById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildLogByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog> GetBuildLogByIdAsync(int buildLogId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironments", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[] GetEnvironments(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironments", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[]> GetEnvironmentsAsync(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentsByOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentsByOrganizationResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[] GetEnvironmentsByOrganization(int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentsByOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentsByOrganizationResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[]> GetEnvironmentsByOrganizationAsync(int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment GetEnvironmentByName(string brandName, string envName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment> GetEnvironmentByNameAsync(string brandName, string envName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment GetEnvironmentById(int envId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEnvironmentByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment> GetEnvironmentByIdAsync(int envId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllSites", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllSitesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetAllSites();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAllSites", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAllSitesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetAllSitesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSitesByBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSitesByBrandResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetSitesByBrand(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSitesByBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSitesByBrandResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetSitesByBrandAsync(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSites", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSitesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetSites(int envId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSites", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSitesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetSitesAsync(int envId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSite GetSiteById(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite> GetSiteByIdAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteByNameAndRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteByNameAndRegionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSite GetSiteByNameAndRegion(string site, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteByNameAndRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteByNameAndRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite> GetSiteByNameAndRegionAsync(string site, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteComponents", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteComponentsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteComponent[] GetSiteComponents(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteComponents", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteComponentsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteComponent[]> GetSiteComponentsAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByDefaultRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByDefaultRegionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByDefaultRegion(string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByDefaultRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByDefaultRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByDefaultRegionAsync(string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByFilterResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByFilter(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByFilterResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByFilterAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByLoadBalancer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByLoadBalancerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByLoadBalancer(int lbId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByLoadBalancer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByLoadBalancerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByLoadBalancerAsync(int lbId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer GetServerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer> GetServerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer GetServerByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer> GetServerByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerByIP", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerByIPResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer GetServerByIP(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerByIP", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerByIPResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer> GetServerByIPAsync(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByPrometheusId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByPrometheusIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByPrometheusId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServersByPrometheusId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServersByPrometheusIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByPrometheusIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPrometheusIdByServerName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPrometheusIdByServerNameResponse")]
        int GetPrometheusIdByServerName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPrometheusIdByServerName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPrometheusIdByServerNameResponse")]
        System.Threading.Tasks.Task<int> GetPrometheusIdByServerNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/IsPrometheusServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/IsPrometheusServerResponse")]
        int IsPrometheusServer(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/IsPrometheusServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/IsPrometheusServerResponse")]
        System.Threading.Tasks.Task<int> IsPrometheusServerAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer[] GetPrometheusServers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer[]> GetPrometheusServersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServerById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServerByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer GetPrometheusServerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServerById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPrometheusServerByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer> GetPrometheusServerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRenameDirs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRenameDirsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir[] GetRenameDirs(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRenameDirs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRenameDirsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir[]> GetRenameDirsAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeleteDirs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeleteDirsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir[] GetDeleteDirs(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeleteDirs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeleteDirsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir[]> GetDeleteDirsAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetFrameworks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetFrameworksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightFramework[] GetFrameworks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetFrameworks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetFrameworksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightFramework[]> GetFrameworksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetFrameworkResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightFramework GetFramework(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetFrameworkResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightFramework> GetFrameworkAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetArchitectures", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetArchitecturesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture[] GetArchitectures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetArchitectures", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetArchitecturesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture[]> GetArchitecturesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetArchitectureResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture GetArchitecture(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetArchitectureResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture> GetArchitectureAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigurationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration[] GetConfigurations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigurationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration[]> GetConfigurationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigurationResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration GetConfiguration(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigurationResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration> GetConfigurationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurations(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsAsync(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurationsForRegion(int brandId, int regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsForRegionAsync(int brandId, int regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsByFilterResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurationsByFilter(int brandId, string region, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsByFilterResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsByFilterAsync(int brandId, string region, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegionByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegionByFilterResponse" +
            "")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurationsForRegionByFilter(int brandId, int regionId, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegionByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationsForRegionByFilterResponse" +
            "")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsForRegionByFilterAsync(int brandId, int regionId, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration GetBrandConfigurationById(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration> GetBrandConfigurationByIdAsync(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] GetOrganizationConfigurations(int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[]> GetOrganizationConfigurationsAsync(int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsForRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsForRegionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] GetOrganizationConfigurationsForRegion(int orgId, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsForRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsForRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[]> GetOrganizationConfigurationsForRegionAsync(int orgId, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsByFilterResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] GetOrganizationConfigurationsByFilter(int orgId, string region, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationsByFilterResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[]> GetOrganizationConfigurationsByFilterAsync(int orgId, string region, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration GetOrganizationConfigurationById(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration> GetOrganizationConfigurationByIdAsync(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurations(int versionId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsAsync(int versionId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForVersionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurationsForVersion(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForVersionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsForVersionAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsByFilterResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurationsByFilter(int versionId, string region, string entityName, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsByFilterResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsByFilterAsync(int versionId, string region, string entityName, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForSiteByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForSiteByFilterResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurationsForSiteByFilter(int versionId, string region, int entity, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForSiteByFilter", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationsForSiteByFilterResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsForSiteByFilterAsync(int versionId, string region, int entity, string configVariable, string configValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration GetSiteConfigurationById(int siteConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration> GetSiteConfigurationByIdAsync(int siteConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationHistoryResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfigurationHistory[] GetBrandConfigurationHistory(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandConfigurationHistoryResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfigurationHistory[]> GetBrandConfigurationHistoryAsync(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationHistoryResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfigurationHistory[] GetOrganizationConfigurationHistory(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationConfigurationHistoryResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfigurationHistory[]> GetOrganizationConfigurationHistoryAsync(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationHistoryResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfigurationHistory[] GetSiteConfigurationHistory(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetSiteConfigurationHistoryResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfigurationHistory[]> GetSiteConfigurationHistoryAsync(int configId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForVersionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[] GetConfigTemplatesForVersion(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForVersionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[]> GetConfigTemplatesForVersionAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForBuildResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[] GetConfigTemplatesForBuild(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesForBuildResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[]> GetConfigTemplatesForBuildAsync(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesByPath", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesByPathResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[] GetConfigTemplatesByPath(string templatePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesByPath", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigTemplatesByPathResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[]> GetConfigTemplatesByPathAsync(string templatePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[] GetServerConfigurations(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[]> GetServerConfigurationsAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurationByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration GetServerConfigurationById(int serverConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurationById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerConfigurationByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration> GetServerConfigurationByIdAsync(int serverConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTools", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetToolsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightTool[] GetTools(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetTools", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetToolsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTool[]> GetToolsAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetToolById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetToolByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightTool GetToolById(int toolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetToolById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetToolByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTool> GetToolByIdAsync(int toolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetToolByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetToolByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightTool GetToolByName(int serverId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetToolByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetToolByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTool> GetToolByNameAsync(int serverId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitions", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] GetCompDefinitions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitions", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[]> GetCompDefinitionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompDefinition", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition GetCompDefinition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompDefinition", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition> GetCompDefinitionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionsByType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionsByTypeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] GetCompDefinitionsByType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionsByType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompDefinitionsByTypeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[]> GetCompDefinitionsByTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByServer(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByServerAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByLayerSiteAndServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByLayerSiteAndServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByLayerSiteAndServer(int layerId, int siteId, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByLayerSiteAndServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByLayerSiteAndServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByLayerSiteAndServerAsync(int layerId, int siteId, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndTypeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByServerAndType(int serverId, int compDefId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndTypeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByServerAndTypeAsync(int serverId, int compDefId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsBySite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsBySiteResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsBySite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsBySite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsBySiteResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsBySiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndSiteResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByServerAndSite(int serverId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByServerAndSiteResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByServerAndSiteAsync(int serverId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp GetServerComp(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp> GetServerCompAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByRegionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByRegion(int regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByRegion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetServerCompsByRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByRegionAsync(int regionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMoveHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMoveHistoryResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMoveHistory[] GetCodeMoveHistory(int codeMoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMoveHistory", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMoveHistoryResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMoveHistory[]> GetCodeMoveHistoryAsync(int codeMoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfo", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfoResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo GetCompositeBuildInfo(string brand, string env, string site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfo", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfoResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo> GetCompositeBuildInfoAsync(string brand, string env, string site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfoFromUrl", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfoFromUrlResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo GetCompositeBuildInfoFromUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfoFromUrl", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCompositeBuildInfoFromUrlResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo> GetCompositeBuildInfoFromUrlAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledCodeMovesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetScheduledCodeMoves();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledCodeMovesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetScheduledCodeMovesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledAndPendingCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledAndPendingCodeMovesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetScheduledAndPendingCodeMoves();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetScheduledAndPendingCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetScheduledAndPendingCodeMovesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetScheduledAndPendingCodeMovesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentCompletedCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentCompletedCodeMovesResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetRecentCompletedCodeMoves(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentCompletedCodeMoves", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentCompletedCodeMovesResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetRecentCompletedCodeMovesAsync(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByVersionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesByVersion(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByVersionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesByVersionAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByResult", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByResultResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesByResult(string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByResult", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByResultResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesByResultAsync(string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesBySite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesBySiteResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesBySite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesBySite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesBySiteResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesBySiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByBuildResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesByBuild(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMovesByBuildResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesByBuildAsync(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMoveResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove GetCodeMove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCodeMoveResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove> GetCodeMoveAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment GetDeploymentById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment> GetDeploymentByIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastDeploymentForServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastDeploymentForServerCompResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment GetLastDeploymentForServerComp(int siteId, int svrId, int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastDeploymentForServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastDeploymentForServerCompResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment> GetLastDeploymentForServerCompAsync(int siteId, int svrId, int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMoveResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsForCodeMove(int codeMoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMove", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMoveResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsForCodeMoveAsync(int codeMoveId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMoveAndServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMoveAndServerResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsForCodeMoveAndServer(int codeMoveId, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMoveAndServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeploymentsForCodeMoveAndServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsForCodeMoveAndServerAsync(int codeMoveId, int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SVNCompare", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SVNCompareResponse")]
        string SVNCompare(int buildLower, int buildHigher, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SVNCompare", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SVNCompareResponse")]
        System.Threading.Tasks.Task<string> SVNCompareAsync(int buildLower, int buildHigher, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendBuildReportEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendBuildReportEmailResponse")]
        void SendBuildReportEmail(ManualDeploymentCheck.BuildAtlasWCF.LightBuild build, string[] toList, string[] ccList, string from, string subject, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendBuildReportEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendBuildReportEmailResponse")]
        System.Threading.Tasks.Task SendBuildReportEmailAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuild build, string[] toList, string[] ccList, string from, string subject, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendEnvReportEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendEnvReportEmailResponse")]
        void SendEnvReportEmail(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string[] toList, string[] ccList, string from, string subject, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendEnvReportEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendEnvReportEmailResponse")]
        System.Threading.Tasks.Task SendEnvReportEmailAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string[] toList, string[] ccList, string from, string subject, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendConfigurationReport", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendConfigurationReportResponse")]
        void SendConfigurationReport(string toList, string ccList, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] configs, string msg, string versionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendConfigurationReport", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendConfigurationReportResponse")]
        System.Threading.Tasks.Task SendConfigurationReportAsync(string toList, string ccList, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] configs, string msg, string versionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GenEnvReport", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GenEnvReportResponse")]
        string GenEnvReport(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GenEnvReport", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GenEnvReportResponse")]
        System.Threading.Tasks.Task<string> GenEnvReportAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendEmailResponse")]
        void SendEmail(string body, string subject, string[] toList, string[] ccList, string from, bool isHtml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/SendEmail", ReplyAction="http://tempuri.org/IBuildAtlasWCF/SendEmailResponse")]
        System.Threading.Tasks.Task SendEmailAsync(string body, string subject, string[] toList, string[] ccList, string from, bool isHtml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetMinionName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetMinionNameResponse")]
        string GetMinionName(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetMinionName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetMinionNameResponse")]
        System.Threading.Tasks.Task<string> GetMinionNameAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GenerateConfigFile", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GenerateConfigFileResponse")]
        string[] GenerateConfigFile(string template, string server, System.Nullable<int> serverId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GenerateConfigFile", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GenerateConfigFileResponse")]
        System.Threading.Tasks.Task<string[]> GenerateConfigFileAsync(string template, string server, System.Nullable<int> serverId, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildUrl", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildUrlResponse")]
        string GetBuildUrl(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildUrl", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildUrlResponse")]
        System.Threading.Tasks.Task<string> GetBuildUrlAsync(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ValidateUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ValidateUserResponse")]
        bool ValidateUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ValidateUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingBrandResponse")]
        bool ExistingBrand(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingBrand", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingBrandResponse")]
        System.Threading.Tasks.Task<bool> ExistingBrandAsync(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingEnvironment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingEnvironmentResponse")]
        bool ExistingEnvironment(int environmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingEnvironment", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingEnvironmentResponse")]
        System.Threading.Tasks.Task<bool> ExistingEnvironmentAsync(int environmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingVersionResponse")]
        bool ExistingVersion(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingVersionResponse")]
        System.Threading.Tasks.Task<bool> ExistingVersionAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingProjectResponse")]
        bool ExistingProject(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingProject", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingProjectResponse")]
        System.Threading.Tasks.Task<bool> ExistingProjectAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingLayerResponse")]
        bool ExistingLayer(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingLayer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingLayerResponse")]
        System.Threading.Tasks.Task<bool> ExistingLayerAsync(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingBuildTaskResponse")]
        bool ExistingBuildTask(int buildTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingBuildTaskResponse")]
        System.Threading.Tasks.Task<bool> ExistingBuildTaskAsync(int buildTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingRenameDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingRenameDirResponse")]
        bool ExistingRenameDir(int renameDirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingRenameDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingRenameDirResponse")]
        System.Threading.Tasks.Task<bool> ExistingRenameDirAsync(int renameDirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingDeleteDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingDeleteDirResponse")]
        bool ExistingDeleteDir(int deleteDirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingDeleteDir", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingDeleteDirResponse")]
        System.Threading.Tasks.Task<bool> ExistingDeleteDirAsync(int deleteDirId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingFrameworkResponse")]
        bool ExistingFramework(int frameworkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingFramework", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingFrameworkResponse")]
        System.Threading.Tasks.Task<bool> ExistingFrameworkAsync(int frameworkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingArchitectureResponse")]
        bool ExistingArchitecture(int architectureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingArchitecture", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingArchitectureResponse")]
        System.Threading.Tasks.Task<bool> ExistingArchitectureAsync(int architectureId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingConfigurationResponse")]
        bool ExistingConfiguration(int configurationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingConfigurationResponse")]
        System.Threading.Tasks.Task<bool> ExistingConfigurationAsync(int configurationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingServerResponse")]
        bool ExistingServer(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingServer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingServerResponse")]
        System.Threading.Tasks.Task<bool> ExistingServerAsync(int serverId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingLoadBalancer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingLoadBalancerResponse")]
        bool ExistingLoadBalancer(int loadBalancerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingLoadBalancer", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingLoadBalancerResponse")]
        System.Threading.Tasks.Task<bool> ExistingLoadBalancerAsync(int loadBalancerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingSiteResponse")]
        bool ExistingSite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingSiteResponse")]
        System.Threading.Tasks.Task<bool> ExistingSiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingSiteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingSiteConfigurationResponse")]
        bool ExistingSiteConfiguration(int siteConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingSiteConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingSiteConfigurationResponse")]
        System.Threading.Tasks.Task<bool> ExistingSiteConfigurationAsync(int siteConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingServerConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingServerConfigurationResponse")]
        bool ExistingServerConfiguration(int serverConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingServerConfiguration", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingServerConfigurationResponse")]
        System.Threading.Tasks.Task<bool> ExistingServerConfigurationAsync(int serverConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingTool", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingToolResponse")]
        bool ExistingTool(int toolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/ExistingTool", ReplyAction="http://tempuri.org/IBuildAtlasWCF/ExistingToolResponse")]
        System.Threading.Tasks.Task<bool> ExistingToolAsync(int toolId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeploymentInProgress", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeploymentInProgressResponse")]
        bool DeploymentInProgress(string siteName, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/DeploymentInProgress", ReplyAction="http://tempuri.org/IBuildAtlasWCF/DeploymentInProgressResponse")]
        System.Threading.Tasks.Task<bool> DeploymentInProgressAsync(string siteName, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetUsers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetUsersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetUsers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetUsersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAdmins", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAdminsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetAdmins", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetAdminsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetAdminsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildMasters", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildMastersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetBuildMasters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildMasters", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildMastersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetBuildMastersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConigManagers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConigManagersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetConigManagers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConigManagers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConigManagersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetConigManagersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjectManagers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectManagersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetProjectManagers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjectManagers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectManagersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetProjectManagersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetQAs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetQAsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetQAs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetQAs", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetQAsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetQAsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetUserByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetUserByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser GetUserByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetUserByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetUserByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser> GetUserByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetUserById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetUserByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetUserById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetUserByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetGroups", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetGroupsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightGroupPrincipal[] GetGroups(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetGroups", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetGroupsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightGroupPrincipal[]> GetGroupsAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEmails", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEmailsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightEmail[] GetEmails(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEmails", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEmailsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEmail[]> GetEmailsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEmailsForUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEmailsForUserResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetEmailsForUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEmailsForUser", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEmailsForUserResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetEmailsForUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEmailsForSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEmailsForSiteResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetEmailsForSite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetEmailsForSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetEmailsForSiteResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetEmailsForSiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrands", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] GetBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrands", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand[]> GetBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrand GetBrandByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand> GetBrandByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrand GetBrandById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand> GetBrandByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandsByOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandsByOrganizationResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] GetBrandsByOrganization(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBrandsByOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBrandsByOrganizationResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand[]> GetBrandsByOrganizationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganization[] GetOrganizations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizations", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganization[]> GetOrganizationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganization GetOrganization(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganization", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganization> GetOrganizationAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationByNameResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightOrganization GetOrganizationByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetOrganizationByName", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetOrganizationByNameResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganization> GetOrganizationByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersions", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightVersion[] GetVersions(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersions", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion[]> GetVersionsAsync(int brandId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersionsByMinor", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionsByMinorResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightVersion[] GetVersionsByMinor(string minor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersionsByMinor", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionsByMinorResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion[]> GetVersionsByMinorAsync(string minor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersionById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightVersion GetVersionById(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersionById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion> GetVersionByIdAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersionByVersionString", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionByVersionStringResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightVersion GetVersionByVersionString(string brandName, string versionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetVersionByVersionString", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetVersionByVersionStringResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion> GetVersionByVersionStringAsync(string brandName, string versionString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjects", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightProject[] GetProjects(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjects", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightProject[]> GetProjectsAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjectsByLayerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectsByLayerIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightProject[] GetProjectsByLayerId(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjectsByLayerId", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectsByLayerIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightProject[]> GetProjectsByLayerIdAsync(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjectById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightProject GetProjectById(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetProjectById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetProjectByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightProject> GetProjectByIdAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLayers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLayersResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayer[] GetLayers(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLayers", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLayersResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayer[]> GetLayersAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLayerById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLayerByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightLayer GetLayerById(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLayerById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLayerByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayer> GetLayerByIdAsync(int layerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetBuildTasks(int projectId, System.Nullable<int> compileCI, System.Nullable<int> compileQA, System.Nullable<System.DateTime> lastMod, string lastModBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetBuildTasksAsync(int projectId, System.Nullable<int> compileCI, System.Nullable<int> compileQA, System.Nullable<System.DateTime> lastMod, string lastModBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigArgsBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigArgsBuildTaskResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetConfigArgsBuildTask(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetConfigArgsBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetConfigArgsBuildTaskResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetConfigArgsBuildTaskAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPreBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPreBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetPreBuildTasks(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPreBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPreBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetPreBuildTasksAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCIPreBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCIPreBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetCIPreBuildTasks(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCIPreBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCIPreBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetCIPreBuildTasksAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetQAPreBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetQAPreBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetQAPreBuildTasks(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetQAPreBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetQAPreBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetQAPreBuildTasksAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPostBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPostBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetPostBuildTasks(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetPostBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetPostBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetPostBuildTasksAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCIPostBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCIPostBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetCIPostBuildTasks(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetCIPostBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetCIPostBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetCIPostBuildTasksAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetQAPostBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetQAPostBuildTasksResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetQAPostBuildTasks(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetQAPostBuildTasks", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetQAPostBuildTasksResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetQAPostBuildTasksAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildTaskResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask GetBuildTask(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildTask", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildTaskResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask> GetBuildTaskAsync(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuilds(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeployableBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeployableBuildsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetDeployableBuilds(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeployableBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeployableBuildsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetDeployableBuildsAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetActiveBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetActiveBuildsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetActiveBuilds(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetActiveBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetActiveBuildsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetActiveBuildsAsync(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByVersionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuildsByVersion(int hours, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByVersionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsByVersionAsync(int hours, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByTypeAndVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByTypeAndVersionResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuildsByTypeAndVersion(int hours, string buildType, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByTypeAndVersion", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByTypeAndVersionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsByTypeAndVersionAsync(int hours, string buildType, int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuilds(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsAsync(int hours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByTypeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuildsByType(int hours, string buildType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetRecentBuildsByTypeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsByTypeAsync(int hours, string buildType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulBuildResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetLastSuccessfulBuild(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulBuildResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetLastSuccessfulBuildAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulQABuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulQABuildResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetLastSuccessfulQABuild(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulQABuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastSuccessfulQABuildResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetLastSuccessfulQABuildAsync(int versionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastQtyBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastQtyBuildsResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetLastQtyBuilds(int versionId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetLastQtyBuilds", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetLastQtyBuildsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetLastQtyBuildsAsync(int versionId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByTypeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByType(int versionId, string buildType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByTypeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByTypeAsync(int versionId, string buildType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResult", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResultResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByResult(int versionId, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResult", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResultResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByResultAsync(int versionId, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResultAndType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResultAndTypeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByResultAndType(int versionId, string buildType, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResultAndType", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByResultAndTypeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByResultAndTypeAsync(int versionId, string buildType, string result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildByIdResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetBuildById(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildById", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildByIdResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetBuildByIdAsync(int buildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildByStartTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildByStartTimeResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetBuildByStartTime(int versionId, System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildByStartTime", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildByStartTimeResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetBuildByStartTimeAsync(int versionId, System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByBuildNumber", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByBuildNumberResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByBuildNumber(int versionId, int buildNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildsByBuildNumber", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildsByBuildNumberResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByBuildNumberAsync(int versionId, int buildNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildVersionForSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildVersionForSiteResponse")]
        string GetBuildVersionForSite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildVersionForSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildVersionForSiteResponse")]
        System.Threading.Tasks.Task<string> GetBuildVersionForSiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildForSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildForSiteResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetBuildForSite(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildForSite", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildForSiteResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetBuildForSiteAsync(int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildHashByLayerAndBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildHashByLayerAndBuildResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash GetBuildHashByLayerAndBuild(int LayerId, int BuildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetBuildHashByLayerAndBuild", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetBuildHashByLayerAndBuildResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash> GetBuildHashByLayerAndBuildAsync(int LayerId, int BuildId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeployHashByLayerAndServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeployHashByLayerAndServerCompResponse")]
        ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash GetDeployHashByLayerAndServerComp(int layerId, int serverCompId, string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBuildAtlasWCF/GetDeployHashByLayerAndServerComp", ReplyAction="http://tempuri.org/IBuildAtlasWCF/GetDeployHashByLayerAndServerCompResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash> GetDeployHashByLayerAndServerCompAsync(int layerId, int serverCompId, string filePath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBuildAtlasWCFChannel : ManualDeploymentCheck.BuildAtlasWCF.IBuildAtlasWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuildAtlasWCFClient : System.ServiceModel.ClientBase<ManualDeploymentCheck.BuildAtlasWCF.IBuildAtlasWCF>, ManualDeploymentCheck.BuildAtlasWCF.IBuildAtlasWCF {
        
        public BuildAtlasWCFClient() {
        }
        
        public BuildAtlasWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BuildAtlasWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuildAtlasWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuildAtlasWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateCodeMoveStatus(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove lcm, string status, string modifiedBy) {
            base.Channel.UpdateCodeMoveStatus(lcm, status, modifiedBy);
        }
        
        public System.Threading.Tasks.Task UpdateCodeMoveStatusAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove lcm, string status, string modifiedBy) {
            return base.Channel.UpdateCodeMoveStatusAsync(lcm, status, modifiedBy);
        }
        
        public int SaveCodeMoves(string codeMoveTitle, string status, string username, System.DateTime start, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, ManualDeploymentCheck.BuildAtlasWCF.LightLayer[] layers, int buildId) {
            return base.Channel.SaveCodeMoves(codeMoveTitle, status, username, start, sites, layers, buildId);
        }
        
        public System.Threading.Tasks.Task<int> SaveCodeMovesAsync(string codeMoveTitle, string status, string username, System.DateTime start, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, ManualDeploymentCheck.BuildAtlasWCF.LightLayer[] layers, int buildId) {
            return base.Channel.SaveCodeMovesAsync(codeMoveTitle, status, username, start, sites, layers, buildId);
        }
        
        public void UpdateDeploymentStatus(int id, string status, string modifiedBy) {
            base.Channel.UpdateDeploymentStatus(id, status, modifiedBy);
        }
        
        public System.Threading.Tasks.Task UpdateDeploymentStatusAsync(int id, string status, string modifiedBy) {
            return base.Channel.UpdateDeploymentStatusAsync(id, status, modifiedBy);
        }
        
        public int SaveDeployment(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, string modifedBy) {
            return base.Channel.SaveDeployment(_deployment, modifedBy);
        }
        
        public System.Threading.Tasks.Task<int> SaveDeploymentAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, string modifedBy) {
            return base.Channel.SaveDeploymentAsync(_deployment, modifedBy);
        }
        
        public int SaveDeploymentLog(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, System.DateTime logTime, string destPath, string msg, string notes, bool useStartTimeAsFinishTime) {
            return base.Channel.SaveDeploymentLog(_deployment, logTime, destPath, msg, notes, useStartTimeAsFinishTime);
        }
        
        public System.Threading.Tasks.Task<int> SaveDeploymentLogAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeployment _deployment, System.DateTime logTime, string destPath, string msg, string notes, bool useStartTimeAsFinishTime) {
            return base.Channel.SaveDeploymentLogAsync(_deployment, logTime, destPath, msg, notes, useStartTimeAsFinishTime);
        }
        
        public void AppendToLogMessage(int logID, string msg) {
            base.Channel.AppendToLogMessage(logID, msg);
        }
        
        public System.Threading.Tasks.Task AppendToLogMessageAsync(int logID, string msg) {
            return base.Channel.AppendToLogMessageAsync(logID, msg);
        }
        
        public void UpdateDeploymentLogFinishTime(int logID, System.DateTime finishTime) {
            base.Channel.UpdateDeploymentLogFinishTime(logID, finishTime);
        }
        
        public System.Threading.Tasks.Task UpdateDeploymentLogFinishTimeAsync(int logID, System.DateTime finishTime) {
            return base.Channel.UpdateDeploymentLogFinishTimeAsync(logID, finishTime);
        }
        
        public int SaveTestResults(int buildId, string test, System.Nullable<int> total, System.Nullable<int> pass, System.Nullable<int> fail, System.Nullable<int> error, System.Nullable<int> inconclusive, System.Nullable<int> ignored, System.Nullable<System.DateTime> ran) {
            return base.Channel.SaveTestResults(buildId, test, total, pass, fail, error, inconclusive, ignored, ran);
        }
        
        public System.Threading.Tasks.Task<int> SaveTestResultsAsync(int buildId, string test, System.Nullable<int> total, System.Nullable<int> pass, System.Nullable<int> fail, System.Nullable<int> error, System.Nullable<int> inconclusive, System.Nullable<int> ignored, System.Nullable<System.DateTime> ran) {
            return base.Channel.SaveTestResultsAsync(buildId, test, total, pass, fail, error, inconclusive, ignored, ran);
        }
        
        public string CreateHelpDeskTicket(string title, string request, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string submittedBy, string notes) {
            return base.Channel.CreateHelpDeskTicket(title, request, priority, emailList, status, submittedBy, notes);
        }
        
        public System.Threading.Tasks.Task<string> CreateHelpDeskTicketAsync(string title, string request, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string submittedBy, string notes) {
            return base.Channel.CreateHelpDeskTicketAsync(title, request, priority, emailList, status, submittedBy, notes);
        }
        
        public int UpdateHelpDeskTicket(int id, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string modifiedBy, string ownedBy, string notes, System.Nullable<int> totalMins, System.Nullable<int> rating) {
            return base.Channel.UpdateHelpDeskTicket(id, priority, emailList, status, modifiedBy, ownedBy, notes, totalMins, rating);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHelpDeskTicketAsync(int id, System.Nullable<int> priority, string emailList, System.Nullable<int> status, string modifiedBy, string ownedBy, string notes, System.Nullable<int> totalMins, System.Nullable<int> rating) {
            return base.Channel.UpdateHelpDeskTicketAsync(id, priority, emailList, status, modifiedBy, ownedBy, notes, totalMins, rating);
        }
        
        public int SaveHelpDeskTicketMsg(int ticketId, string msg) {
            return base.Channel.SaveHelpDeskTicketMsg(ticketId, msg);
        }
        
        public System.Threading.Tasks.Task<int> SaveHelpDeskTicketMsgAsync(int ticketId, string msg) {
            return base.Channel.SaveHelpDeskTicketMsgAsync(ticketId, msg);
        }
        
        public int SaveConfigTemplate(string path, string template, int versionId, int buildId) {
            return base.Channel.SaveConfigTemplate(path, template, versionId, buildId);
        }
        
        public System.Threading.Tasks.Task<int> SaveConfigTemplateAsync(string path, string template, int versionId, int buildId) {
            return base.Channel.SaveConfigTemplateAsync(path, template, versionId, buildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand SaveSSHCommand(string id, string command, string requestedBy, string output, string status, string server, System.Nullable<int> callingServer) {
            return base.Channel.SaveSSHCommand(id, command, requestedBy, output, status, server, callingServer);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand> SaveSSHCommandAsync(string id, string command, string requestedBy, string output, string status, string server, System.Nullable<int> callingServer) {
            return base.Channel.SaveSSHCommandAsync(id, command, requestedBy, output, status, server, callingServer);
        }
        
        public void DeleteUser(int _user) {
            base.Channel.DeleteUser(_user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int _user) {
            return base.Channel.DeleteUserAsync(_user);
        }
        
        public void DeleteEmail(int _email) {
            base.Channel.DeleteEmail(_email);
        }
        
        public System.Threading.Tasks.Task DeleteEmailAsync(int _email) {
            return base.Channel.DeleteEmailAsync(_email);
        }
        
        public void DeleteEmailByUserId(int _user) {
            base.Channel.DeleteEmailByUserId(_user);
        }
        
        public System.Threading.Tasks.Task DeleteEmailByUserIdAsync(int _user) {
            return base.Channel.DeleteEmailByUserIdAsync(_user);
        }
        
        public void DeleteEmailList(int[] _emails, int userId) {
            base.Channel.DeleteEmailList(_emails, userId);
        }
        
        public System.Threading.Tasks.Task DeleteEmailListAsync(int[] _emails, int userId) {
            return base.Channel.DeleteEmailListAsync(_emails, userId);
        }
        
        public void DeletePrometheusServer(int _serverId) {
            base.Channel.DeletePrometheusServer(_serverId);
        }
        
        public System.Threading.Tasks.Task DeletePrometheusServerAsync(int _serverId) {
            return base.Channel.DeletePrometheusServerAsync(_serverId);
        }
        
        public void DeleteOrganization(int _org) {
            base.Channel.DeleteOrganization(_org);
        }
        
        public System.Threading.Tasks.Task DeleteOrganizationAsync(int _org) {
            return base.Channel.DeleteOrganizationAsync(_org);
        }
        
        public void DeleteBrand(int _brand) {
            base.Channel.DeleteBrand(_brand);
        }
        
        public System.Threading.Tasks.Task DeleteBrandAsync(int _brand) {
            return base.Channel.DeleteBrandAsync(_brand);
        }
        
        public void DeleteServer(int _server) {
            base.Channel.DeleteServer(_server);
        }
        
        public System.Threading.Tasks.Task DeleteServerAsync(int _server) {
            return base.Channel.DeleteServerAsync(_server);
        }
        
        public void DeleteEnvironment(int _environment) {
            base.Channel.DeleteEnvironment(_environment);
        }
        
        public System.Threading.Tasks.Task DeleteEnvironmentAsync(int _environment) {
            return base.Channel.DeleteEnvironmentAsync(_environment);
        }
        
        public void DeleteVersion(int _version) {
            base.Channel.DeleteVersion(_version);
        }
        
        public System.Threading.Tasks.Task DeleteVersionAsync(int _version) {
            return base.Channel.DeleteVersionAsync(_version);
        }
        
        public void DeleteProject(int _project) {
            base.Channel.DeleteProject(_project);
        }
        
        public System.Threading.Tasks.Task DeleteProjectAsync(int _project) {
            return base.Channel.DeleteProjectAsync(_project);
        }
        
        public void DeleteLayer(int _layer) {
            base.Channel.DeleteLayer(_layer);
        }
        
        public System.Threading.Tasks.Task DeleteLayerAsync(int _layer) {
            return base.Channel.DeleteLayerAsync(_layer);
        }
        
        public void DeleteBuildTask(int _buildTask) {
            base.Channel.DeleteBuildTask(_buildTask);
        }
        
        public System.Threading.Tasks.Task DeleteBuildTaskAsync(int _buildTask) {
            return base.Channel.DeleteBuildTaskAsync(_buildTask);
        }
        
        public void DeleteRenameDir(int _renameDir) {
            base.Channel.DeleteRenameDir(_renameDir);
        }
        
        public System.Threading.Tasks.Task DeleteRenameDirAsync(int _renameDir) {
            return base.Channel.DeleteRenameDirAsync(_renameDir);
        }
        
        public void DeleteDeleteDir(int _deleteDir) {
            base.Channel.DeleteDeleteDir(_deleteDir);
        }
        
        public System.Threading.Tasks.Task DeleteDeleteDirAsync(int _deleteDir) {
            return base.Channel.DeleteDeleteDirAsync(_deleteDir);
        }
        
        public void DeleteFramework(int _framework) {
            base.Channel.DeleteFramework(_framework);
        }
        
        public System.Threading.Tasks.Task DeleteFrameworkAsync(int _framework) {
            return base.Channel.DeleteFrameworkAsync(_framework);
        }
        
        public void DeleteArchitecture(int _architecture) {
            base.Channel.DeleteArchitecture(_architecture);
        }
        
        public System.Threading.Tasks.Task DeleteArchitectureAsync(int _architecture) {
            return base.Channel.DeleteArchitectureAsync(_architecture);
        }
        
        public void DeleteConfiguration(int _configuration) {
            base.Channel.DeleteConfiguration(_configuration);
        }
        
        public System.Threading.Tasks.Task DeleteConfigurationAsync(int _configuration) {
            return base.Channel.DeleteConfigurationAsync(_configuration);
        }
        
        public void DeleteServerComp(int id) {
            base.Channel.DeleteServerComp(id);
        }
        
        public System.Threading.Tasks.Task DeleteServerCompAsync(int id) {
            return base.Channel.DeleteServerCompAsync(id);
        }
        
        public void DeleteCompDefinition(int id, System.Nullable<int> replaceDef) {
            base.Channel.DeleteCompDefinition(id, replaceDef);
        }
        
        public System.Threading.Tasks.Task DeleteCompDefinitionAsync(int id, System.Nullable<int> replaceDef) {
            return base.Channel.DeleteCompDefinitionAsync(id, replaceDef);
        }
        
        public void DeleteSite(int _site) {
            base.Channel.DeleteSite(_site);
        }
        
        public System.Threading.Tasks.Task DeleteSiteAsync(int _site) {
            return base.Channel.DeleteSiteAsync(_site);
        }
        
        public void DeleteBrandConfiguration(int _config, string modifiedBy) {
            base.Channel.DeleteBrandConfiguration(_config, modifiedBy);
        }
        
        public System.Threading.Tasks.Task DeleteBrandConfigurationAsync(int _config, string modifiedBy) {
            return base.Channel.DeleteBrandConfigurationAsync(_config, modifiedBy);
        }
        
        public void DeleteBrandConfigurationList(int[] _configs, string modifiedBy) {
            base.Channel.DeleteBrandConfigurationList(_configs, modifiedBy);
        }
        
        public System.Threading.Tasks.Task DeleteBrandConfigurationListAsync(int[] _configs, string modifiedBy) {
            return base.Channel.DeleteBrandConfigurationListAsync(_configs, modifiedBy);
        }
        
        public void DeleteOrganizationConfiguration(int _config, string modifiedBy) {
            base.Channel.DeleteOrganizationConfiguration(_config, modifiedBy);
        }
        
        public System.Threading.Tasks.Task DeleteOrganizationConfigurationAsync(int _config, string modifiedBy) {
            return base.Channel.DeleteOrganizationConfigurationAsync(_config, modifiedBy);
        }
        
        public void DeleteOrganizationConfigurationList(int[] _configs, string modifiedBy) {
            base.Channel.DeleteOrganizationConfigurationList(_configs, modifiedBy);
        }
        
        public System.Threading.Tasks.Task DeleteOrganizationConfigurationListAsync(int[] _configs, string modifiedBy) {
            return base.Channel.DeleteOrganizationConfigurationListAsync(_configs, modifiedBy);
        }
        
        public void DeleteSiteConfiguration(int _config, string modifiedBy) {
            base.Channel.DeleteSiteConfiguration(_config, modifiedBy);
        }
        
        public System.Threading.Tasks.Task DeleteSiteConfigurationAsync(int _config, string modifiedBy) {
            return base.Channel.DeleteSiteConfigurationAsync(_config, modifiedBy);
        }
        
        public void DeleteSiteConfigurationList(int[] _configs, string modifiedBy) {
            base.Channel.DeleteSiteConfigurationList(_configs, modifiedBy);
        }
        
        public System.Threading.Tasks.Task DeleteSiteConfigurationListAsync(int[] _configs, string modifiedBy) {
            return base.Channel.DeleteSiteConfigurationListAsync(_configs, modifiedBy);
        }
        
        public void DeleteServerConfiguration(int _config) {
            base.Channel.DeleteServerConfiguration(_config);
        }
        
        public System.Threading.Tasks.Task DeleteServerConfigurationAsync(int _config) {
            return base.Channel.DeleteServerConfigurationAsync(_config);
        }
        
        public void DeleteTool(int _tool) {
            base.Channel.DeleteTool(_tool);
        }
        
        public System.Threading.Tasks.Task DeleteToolAsync(int _tool) {
            return base.Channel.DeleteToolAsync(_tool);
        }
        
        public void DeleteBuild(int _build) {
            base.Channel.DeleteBuild(_build);
        }
        
        public System.Threading.Tasks.Task DeleteBuildAsync(int _build) {
            return base.Channel.DeleteBuildAsync(_build);
        }
        
        public void DeleteConfigTemplates(int _build) {
            base.Channel.DeleteConfigTemplates(_build);
        }
        
        public System.Threading.Tasks.Task DeleteConfigTemplatesAsync(int _build) {
            return base.Channel.DeleteConfigTemplatesAsync(_build);
        }
        
        public void DeleteBuildLog(int _buildLog) {
            base.Channel.DeleteBuildLog(_buildLog);
        }
        
        public System.Threading.Tasks.Task DeleteBuildLogAsync(int _buildLog) {
            return base.Channel.DeleteBuildLogAsync(_buildLog);
        }
        
        public void DeleteCodeMove(int _codeMove) {
            base.Channel.DeleteCodeMove(_codeMove);
        }
        
        public System.Threading.Tasks.Task DeleteCodeMoveAsync(int _codeMove) {
            return base.Channel.DeleteCodeMoveAsync(_codeMove);
        }
        
        public void DeleteDeployment(int _deployment) {
            base.Channel.DeleteDeployment(_deployment);
        }
        
        public System.Threading.Tasks.Task DeleteDeploymentAsync(int _deployment) {
            return base.Channel.DeleteDeploymentAsync(_deployment);
        }
        
        public void DeleteDeploymentLog(int _deploymentLog) {
            base.Channel.DeleteDeploymentLog(_deploymentLog);
        }
        
        public System.Threading.Tasks.Task DeleteDeploymentLogAsync(int _deploymentLog) {
            return base.Channel.DeleteDeploymentLogAsync(_deploymentLog);
        }
        
        public void DeleteSSHCommand(int id) {
            base.Channel.DeleteSSHCommand(id);
        }
        
        public System.Threading.Tasks.Task DeleteSSHCommandAsync(int id) {
            return base.Channel.DeleteSSHCommandAsync(id);
        }
        
        public int CloneServer(ManualDeploymentCheck.BuildAtlasWCF.LightServer toClone) {
            return base.Channel.CloneServer(toClone);
        }
        
        public System.Threading.Tasks.Task<int> CloneServerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServer toClone) {
            return base.Channel.CloneServerAsync(toClone);
        }
        
        public void CloneServerCompsToServer(int cloneTo, ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[] configs, ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] comps, ManualDeploymentCheck.BuildAtlasWCF.LightTool[] tool, bool keepAssociations) {
            base.Channel.CloneServerCompsToServer(cloneTo, configs, comps, tool, keepAssociations);
        }
        
        public System.Threading.Tasks.Task CloneServerCompsToServerAsync(int cloneTo, ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[] configs, ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] comps, ManualDeploymentCheck.BuildAtlasWCF.LightTool[] tool, bool keepAssociations) {
            return base.Channel.CloneServerCompsToServerAsync(cloneTo, configs, comps, tool, keepAssociations);
        }
        
        public void CloneServerCompToServer(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp toClone, int cloneTo, bool keepAssociations) {
            base.Channel.CloneServerCompToServer(toClone, cloneTo, keepAssociations);
        }
        
        public System.Threading.Tasks.Task CloneServerCompToServerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp toClone, int cloneTo, bool keepAssociations) {
            return base.Channel.CloneServerCompToServerAsync(toClone, cloneTo, keepAssociations);
        }
        
        public int CloneVersion(ManualDeploymentCheck.BuildAtlasWCF.LightVersion toClone, string user) {
            return base.Channel.CloneVersion(toClone, user);
        }
        
        public System.Threading.Tasks.Task<int> CloneVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightVersion toClone, string user) {
            return base.Channel.CloneVersionAsync(toClone, user);
        }
        
        public void CloneLayerToVersion(ManualDeploymentCheck.BuildAtlasWCF.LightLayer toClone, int versionId) {
            base.Channel.CloneLayerToVersion(toClone, versionId);
        }
        
        public System.Threading.Tasks.Task CloneLayerToVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayer toClone, int versionId) {
            return base.Channel.CloneLayerToVersionAsync(toClone, versionId);
        }
        
        public void CloneBuildTaskToProject(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask toClone, int projectId) {
            base.Channel.CloneBuildTaskToProject(toClone, projectId);
        }
        
        public System.Threading.Tasks.Task CloneBuildTaskToProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask toClone, int projectId) {
            return base.Channel.CloneBuildTaskToProjectAsync(toClone, projectId);
        }
        
        public void CloneProjectToVersion(ManualDeploymentCheck.BuildAtlasWCF.LightProject toClone, int versionId) {
            base.Channel.CloneProjectToVersion(toClone, versionId);
        }
        
        public System.Threading.Tasks.Task CloneProjectToVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightProject toClone, int versionId) {
            return base.Channel.CloneProjectToVersionAsync(toClone, versionId);
        }
        
        public void CloneDeleteDirToProject(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir toClone, int projectid) {
            base.Channel.CloneDeleteDirToProject(toClone, projectid);
        }
        
        public System.Threading.Tasks.Task CloneDeleteDirToProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir toClone, int projectid) {
            return base.Channel.CloneDeleteDirToProjectAsync(toClone, projectid);
        }
        
        public void CloneRenameDirToProject(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir toClone, int projectId) {
            base.Channel.CloneRenameDirToProject(toClone, projectId);
        }
        
        public System.Threading.Tasks.Task CloneRenameDirToProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir toClone, int projectId) {
            return base.Channel.CloneRenameDirToProjectAsync(toClone, projectId);
        }
        
        public void CloneSiteConfigurationToVersion(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId) {
            base.Channel.CloneSiteConfigurationToVersion(toClone, versionId);
        }
        
        public System.Threading.Tasks.Task CloneSiteConfigurationToVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId) {
            return base.Channel.CloneSiteConfigurationToVersionAsync(toClone, versionId);
        }
        
        public void CloneSiteConfigurationToSiteAndVersion(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId, int siteId) {
            base.Channel.CloneSiteConfigurationToSiteAndVersion(toClone, versionId, siteId);
        }
        
        public System.Threading.Tasks.Task CloneSiteConfigurationToSiteAndVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration toClone, int versionId, int siteId) {
            return base.Channel.CloneSiteConfigurationToSiteAndVersionAsync(toClone, versionId, siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeployments() {
            return base.Channel.GetScheduledDeployments();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsAsync() {
            return base.Channel.GetScheduledDeploymentsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeploymentsByServerId(int serverId) {
            return base.Channel.GetScheduledDeploymentsByServerId(serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsByServerIdAsync(int serverId) {
            return base.Channel.GetScheduledDeploymentsByServerIdAsync(serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeploymentsByPrometheusId(int promId) {
            return base.Channel.GetScheduledDeploymentsByPrometheusId(promId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsByPrometheusIdAsync(int promId) {
            return base.Channel.GetScheduledDeploymentsByPrometheusIdAsync(promId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetStagedDeploymentsByServerId(int serverId) {
            return base.Channel.GetStagedDeploymentsByServerId(serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetStagedDeploymentsByServerIdAsync(int serverId) {
            return base.Channel.GetStagedDeploymentsByServerIdAsync(serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetScheduledDeploymentsForServer(string serverName) {
            return base.Channel.GetScheduledDeploymentsForServer(serverName);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetScheduledDeploymentsForServerAsync(string serverName) {
            return base.Channel.GetScheduledDeploymentsForServerAsync(serverName);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetStagedDeploymentsForServer(string serverName) {
            return base.Channel.GetStagedDeploymentsForServer(serverName);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetStagedDeploymentsForServerAsync(string serverName) {
            return base.Channel.GetStagedDeploymentsForServerAsync(serverName);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsByResultAndServerId(string result, int serverId) {
            return base.Channel.GetDeploymentsByResultAndServerId(result, serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsByResultAndServerIdAsync(string result, int serverId) {
            return base.Channel.GetDeploymentsByResultAndServerIdAsync(result, serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsByResultAndCodeMoveId(string result, int codeMoveId) {
            return base.Channel.GetDeploymentsByResultAndCodeMoveId(result, codeMoveId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsByResultAndCodeMoveIdAsync(string result, int codeMoveId) {
            return base.Channel.GetDeploymentsByResultAndCodeMoveIdAsync(result, codeMoveId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsByResult(string result) {
            return base.Channel.GetDeploymentsByResult(result);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsByResultAsync(string result) {
            return base.Channel.GetDeploymentsByResultAsync(result);
        }
        
        public int[] GetTodaysDeploymentsForPrometheus(int promId) {
            return base.Channel.GetTodaysDeploymentsForPrometheus(promId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetTodaysDeploymentsForPrometheusAsync(int promId) {
            return base.Channel.GetTodaysDeploymentsForPrometheusAsync(promId);
        }
        
        public double GetTodaysAvgDeployTimePrometheus(int promId) {
            return base.Channel.GetTodaysAvgDeployTimePrometheus(promId);
        }
        
        public System.Threading.Tasks.Task<double> GetTodaysAvgDeployTimePrometheusAsync(int promId) {
            return base.Channel.GetTodaysAvgDeployTimePrometheusAsync(promId);
        }
        
        public int[] GetDeploymentCountsForServer(int serverId) {
            return base.Channel.GetDeploymentCountsForServer(serverId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetDeploymentCountsForServerAsync(int serverId) {
            return base.Channel.GetDeploymentCountsForServerAsync(serverId);
        }
        
        public int[] GetDeploymentCountsForPrometheus(int promId) {
            return base.Channel.GetDeploymentCountsForPrometheus(promId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetDeploymentCountsForPrometheusAsync(int promId) {
            return base.Channel.GetDeploymentCountsForPrometheusAsync(promId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeploymentLogEntry[] GetDeploymentLog(int Id) {
            return base.Channel.GetDeploymentLog(Id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeploymentLogEntry[]> GetDeploymentLogAsync(int Id) {
            return base.Channel.GetDeploymentLogAsync(Id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetAllPossibleAssociations(int layerId, int regionId, int defId) {
            return base.Channel.GetAllPossibleAssociations(layerId, regionId, defId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetAllPossibleAssociationsAsync(int layerId, int regionId, int defId) {
            return base.Channel.GetAllPossibleAssociationsAsync(layerId, regionId, defId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetAllPossibleLayerAssociations(int layerId) {
            return base.Channel.GetAllPossibleLayerAssociations(layerId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetAllPossibleLayerAssociationsAsync(int layerId) {
            return base.Channel.GetAllPossibleLayerAssociationsAsync(layerId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetAllExistingLayerAssociations(int layerId) {
            return base.Channel.GetAllExistingLayerAssociations(layerId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetAllExistingLayerAssociationsAsync(int layerId) {
            return base.Channel.GetAllExistingLayerAssociationsAsync(layerId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinationsForSiteAndLayer(int layerId, int siteId) {
            return base.Channel.GetDestinationsForSiteAndLayer(layerId, siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsForSiteAndLayerAsync(int layerId, int siteId) {
            return base.Channel.GetDestinationsForSiteAndLayerAsync(layerId, siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinations(int layerId) {
            return base.Channel.GetDestinations(layerId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsAsync(int layerId) {
            return base.Channel.GetDestinationsAsync(layerId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinationsForSiteAndVersion(int siteId, int versionId) {
            return base.Channel.GetDestinationsForSiteAndVersion(siteId, versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsForSiteAndVersionAsync(int siteId, int versionId) {
            return base.Channel.GetDestinationsForSiteAndVersionAsync(siteId, versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] GetDestinationsForRegion(int regionId) {
            return base.Channel.GetDestinationsForRegion(regionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[]> GetDestinationsForRegionAsync(int regionId) {
            return base.Channel.GetDestinationsForRegionAsync(regionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[] GetTestResults(int buildId) {
            return base.Channel.GetTestResults(buildId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[]> GetTestResultsAsync(int buildId) {
            return base.Channel.GetTestResultsAsync(buildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[] GetTestResultsByName(int buildId, string test) {
            return base.Channel.GetTestResultsByName(buildId, test);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTestResult[]> GetTestResultsByNameAsync(int buildId, string test) {
            return base.Channel.GetTestResultsByNameAsync(buildId, test);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus[] GetHelpDeskTicketStatuses() {
            return base.Channel.GetHelpDeskTicketStatuses();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus[]> GetHelpDeskTicketStatusesAsync() {
            return base.Channel.GetHelpDeskTicketStatusesAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus GetHelpDeskTicketStatusById(int id) {
            return base.Channel.GetHelpDeskTicketStatusById(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketStatus> GetHelpDeskTicketStatusByIdAsync(int id) {
            return base.Channel.GetHelpDeskTicketStatusByIdAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTickets() {
            return base.Channel.GetHelpDeskTickets();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsAsync() {
            return base.Channel.GetHelpDeskTicketsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket GetHelpDeskTicket(int id) {
            return base.Channel.GetHelpDeskTicket(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket> GetHelpDeskTicketAsync(int id) {
            return base.Channel.GetHelpDeskTicketAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsForQueue() {
            return base.Channel.GetHelpDeskTicketsForQueue();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsForQueueAsync() {
            return base.Channel.GetHelpDeskTicketsForQueueAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsByStatus(int status) {
            return base.Channel.GetHelpDeskTicketsByStatus(status);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsByStatusAsync(int status) {
            return base.Channel.GetHelpDeskTicketsByStatusAsync(status);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsSubmittedBy(string submittedBy) {
            return base.Channel.GetHelpDeskTicketsSubmittedBy(submittedBy);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsSubmittedByAsync(string submittedBy) {
            return base.Channel.GetHelpDeskTicketsSubmittedByAsync(submittedBy);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetSpecificHelpDeskTicketsSubmittedByWithStatus(string type, string submittedBy, int status) {
            return base.Channel.GetSpecificHelpDeskTicketsSubmittedByWithStatus(type, submittedBy, status);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetSpecificHelpDeskTicketsSubmittedByWithStatusAsync(string type, string submittedBy, int status) {
            return base.Channel.GetSpecificHelpDeskTicketsSubmittedByWithStatusAsync(type, submittedBy, status);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[] GetHelpDeskTicketsOwnedBy(string ownedBy) {
            return base.Channel.GetHelpDeskTicketsOwnedBy(ownedBy);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicket[]> GetHelpDeskTicketsOwnedByAsync(string ownedBy) {
            return base.Channel.GetHelpDeskTicketsOwnedByAsync(ownedBy);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketHistory[] GetHelpDeskTicketHistory(int ticketId) {
            return base.Channel.GetHelpDeskTicketHistory(ticketId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketHistory[]> GetHelpDeskTicketHistoryAsync(int ticketId) {
            return base.Channel.GetHelpDeskTicketHistoryAsync(ticketId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketMsg[] GetHelpDeskTicketMsgs(int ticketId) {
            return base.Channel.GetHelpDeskTicketMsgs(ticketId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightHelpDeskTicketMsg[]> GetHelpDeskTicketMsgsAsync(int ticketId) {
            return base.Channel.GetHelpDeskTicketMsgsAsync(ticketId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand GetSSHCommand(int id) {
            return base.Channel.GetSSHCommand(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand> GetSSHCommandAsync(int id) {
            return base.Channel.GetSSHCommandAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetPendingSSHCommands() {
            return base.Channel.GetPendingSSHCommands();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetPendingSSHCommandsAsync() {
            return base.Channel.GetPendingSSHCommandsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetSSHCommands() {
            return base.Channel.GetSSHCommands();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetSSHCommandsAsync() {
            return base.Channel.GetSSHCommandsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetSSHCommandsDescending() {
            return base.Channel.GetSSHCommandsDescending();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetSSHCommandsDescendingAsync() {
            return base.Channel.GetSSHCommandsDescendingAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetPendingSSHCommandsByServer(string server) {
            return base.Channel.GetPendingSSHCommandsByServer(server);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetPendingSSHCommandsByServerAsync(string server) {
            return base.Channel.GetPendingSSHCommandsByServerAsync(server);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[] GetCompletedSSHCommandsByServer(string server) {
            return base.Channel.GetCompletedSSHCommandsByServer(server);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSSHCommand[]> GetCompletedSSHCommandsByServerAsync(string server) {
            return base.Channel.GetCompletedSSHCommandsByServerAsync(server);
        }
        
        public void SaveServerCompDeployInfo(int compId, System.Nullable<int> match, System.Nullable<System.DateTime> tested, System.Nullable<int> onServer, System.Nullable<int> deploymentId, string parasites) {
            base.Channel.SaveServerCompDeployInfo(compId, match, tested, onServer, deploymentId, parasites);
        }
        
        public System.Threading.Tasks.Task SaveServerCompDeployInfoAsync(int compId, System.Nullable<int> match, System.Nullable<System.DateTime> tested, System.Nullable<int> onServer, System.Nullable<int> deploymentId, string parasites) {
            return base.Channel.SaveServerCompDeployInfoAsync(compId, match, tested, onServer, deploymentId, parasites);
        }
        
        public int SaveServerComponent(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp _svrComp) {
            return base.Channel.SaveServerComponent(_svrComp);
        }
        
        public System.Threading.Tasks.Task<int> SaveServerComponentAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServerComp _svrComp) {
            return base.Channel.SaveServerComponentAsync(_svrComp);
        }
        
        public int SavePrometheusServer(int _serverId) {
            return base.Channel.SavePrometheusServer(_serverId);
        }
        
        public System.Threading.Tasks.Task<int> SavePrometheusServerAsync(int _serverId) {
            return base.Channel.SavePrometheusServerAsync(_serverId);
        }
        
        public void SavePrometheusServerCheckin(int id) {
            base.Channel.SavePrometheusServerCheckin(id);
        }
        
        public System.Threading.Tasks.Task SavePrometheusServerCheckinAsync(int id) {
            return base.Channel.SavePrometheusServerCheckinAsync(id);
        }
        
        public void SaveEpimetheusReports(int[] cleanup, int[] reports) {
            base.Channel.SaveEpimetheusReports(cleanup, reports);
        }
        
        public System.Threading.Tasks.Task SaveEpimetheusReportsAsync(int[] cleanup, int[] reports) {
            return base.Channel.SaveEpimetheusReportsAsync(cleanup, reports);
        }
        
        public void SaveCompDefList(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] compList, string modifiedBy) {
            base.Channel.SaveCompDefList(compList, modifiedBy);
        }
        
        public System.Threading.Tasks.Task SaveCompDefListAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] compList, string modifiedBy) {
            return base.Channel.SaveCompDefListAsync(compList, modifiedBy);
        }
        
        public int SaveCompDefinition(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition _compDef, string modifiedBy) {
            return base.Channel.SaveCompDefinition(_compDef, modifiedBy);
        }
        
        public System.Threading.Tasks.Task<int> SaveCompDefinitionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition _compDef, string modifiedBy) {
            return base.Channel.SaveCompDefinitionAsync(_compDef, modifiedBy);
        }
        
        public string UpdateLayerAssociations(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] compList, bool clearAssociations, string modifiedBy) {
            return base.Channel.UpdateLayerAssociations(compList, clearAssociations, modifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> UpdateLayerAssociationsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation[] compList, bool clearAssociations, string modifiedBy) {
            return base.Channel.UpdateLayerAssociationsAsync(compList, clearAssociations, modifiedBy);
        }
        
        public int SaveLayerAssociation(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation association, string modifiedBy) {
            return base.Channel.SaveLayerAssociation(association, modifiedBy);
        }
        
        public System.Threading.Tasks.Task<int> SaveLayerAssociationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayerAssociation association, string modifiedBy) {
            return base.Channel.SaveLayerAssociationAsync(association, modifiedBy);
        }
        
        public void SaveEmailAddressForUser(int user, string address) {
            base.Channel.SaveEmailAddressForUser(user, address);
        }
        
        public System.Threading.Tasks.Task SaveEmailAddressForUserAsync(int user, string address) {
            return base.Channel.SaveEmailAddressForUserAsync(user, address);
        }
        
        public void SaveEmail(ManualDeploymentCheck.BuildAtlasWCF.LightEmail _email) {
            base.Channel.SaveEmail(_email);
        }
        
        public System.Threading.Tasks.Task SaveEmailAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEmail _email) {
            return base.Channel.SaveEmailAsync(_email);
        }
        
        public void SaveEmails(ManualDeploymentCheck.BuildAtlasWCF.LightEmail[] _emails) {
            base.Channel.SaveEmails(_emails);
        }
        
        public System.Threading.Tasks.Task SaveEmailsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEmail[] _emails) {
            return base.Channel.SaveEmailsAsync(_emails);
        }
        
        public void SaveUserList(ManualDeploymentCheck.BuildAtlasWCF.LightUser[] userList, string modifiedBy) {
            base.Channel.SaveUserList(userList, modifiedBy);
        }
        
        public System.Threading.Tasks.Task SaveUserListAsync(ManualDeploymentCheck.BuildAtlasWCF.LightUser[] userList, string modifiedBy) {
            return base.Channel.SaveUserListAsync(userList, modifiedBy);
        }
        
        public string SaveUser(ManualDeploymentCheck.BuildAtlasWCF.LightUser _user, string modifiedBy) {
            return base.Channel.SaveUser(_user, modifiedBy);
        }
        
        public System.Threading.Tasks.Task<string> SaveUserAsync(ManualDeploymentCheck.BuildAtlasWCF.LightUser _user, string modifiedBy) {
            return base.Channel.SaveUserAsync(_user, modifiedBy);
        }
        
        public int SaveOrganization(ManualDeploymentCheck.BuildAtlasWCF.LightOrganization _org) {
            return base.Channel.SaveOrganization(_org);
        }
        
        public System.Threading.Tasks.Task<int> SaveOrganizationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightOrganization _org) {
            return base.Channel.SaveOrganizationAsync(_org);
        }
        
        public void UpdateBrandOrganization(ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] _brands, System.Nullable<int> orgId) {
            base.Channel.UpdateBrandOrganization(_brands, orgId);
        }
        
        public System.Threading.Tasks.Task UpdateBrandOrganizationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] _brands, System.Nullable<int> orgId) {
            return base.Channel.UpdateBrandOrganizationAsync(_brands, orgId);
        }
        
        public int SaveBrand(ManualDeploymentCheck.BuildAtlasWCF.LightBrand _brand) {
            return base.Channel.SaveBrand(_brand);
        }
        
        public System.Threading.Tasks.Task<int> SaveBrandAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrand _brand) {
            return base.Channel.SaveBrandAsync(_brand);
        }
        
        public int SaveEnvironment(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment _environment) {
            return base.Channel.SaveEnvironment(_environment);
        }
        
        public System.Threading.Tasks.Task<int> SaveEnvironmentAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment _environment) {
            return base.Channel.SaveEnvironmentAsync(_environment);
        }
        
        public int SaveVersion(ManualDeploymentCheck.BuildAtlasWCF.LightVersion _version) {
            return base.Channel.SaveVersion(_version);
        }
        
        public System.Threading.Tasks.Task<int> SaveVersionAsync(ManualDeploymentCheck.BuildAtlasWCF.LightVersion _version) {
            return base.Channel.SaveVersionAsync(_version);
        }
        
        public int SaveBuild(ManualDeploymentCheck.BuildAtlasWCF.LightBuild _build) {
            return base.Channel.SaveBuild(_build);
        }
        
        public System.Threading.Tasks.Task<int> SaveBuildAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuild _build) {
            return base.Channel.SaveBuildAsync(_build);
        }
        
        public int SaveBuildLog(ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog _buildLog) {
            return base.Channel.SaveBuildLog(_buildLog);
        }
        
        public System.Threading.Tasks.Task<int> SaveBuildLogAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog _buildLog) {
            return base.Channel.SaveBuildLogAsync(_buildLog);
        }
        
        public int SaveBuildHash(ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash hash) {
            return base.Channel.SaveBuildHash(hash);
        }
        
        public System.Threading.Tasks.Task<int> SaveBuildHashAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash hash) {
            return base.Channel.SaveBuildHashAsync(hash);
        }
        
        public int SaveDeployHash(ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[] hashes) {
            return base.Channel.SaveDeployHash(hashes);
        }
        
        public System.Threading.Tasks.Task<int> SaveDeployHashAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[] hashes) {
            return base.Channel.SaveDeployHashAsync(hashes);
        }
        
        public void UpdateDeployHash(int id, System.Nullable<int> missing, System.Nullable<int> modified) {
            base.Channel.UpdateDeployHash(id, missing, modified);
        }
        
        public System.Threading.Tasks.Task UpdateDeployHashAsync(int id, System.Nullable<int> missing, System.Nullable<int> modified) {
            return base.Channel.UpdateDeployHashAsync(id, missing, modified);
        }
        
        public int SaveProject(ManualDeploymentCheck.BuildAtlasWCF.LightProject _project) {
            return base.Channel.SaveProject(_project);
        }
        
        public System.Threading.Tasks.Task<int> SaveProjectAsync(ManualDeploymentCheck.BuildAtlasWCF.LightProject _project) {
            return base.Channel.SaveProjectAsync(_project);
        }
        
        public int SaveLayer(ManualDeploymentCheck.BuildAtlasWCF.LightLayer _layer) {
            return base.Channel.SaveLayer(_layer);
        }
        
        public System.Threading.Tasks.Task<int> SaveLayerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightLayer _layer) {
            return base.Channel.SaveLayerAsync(_layer);
        }
        
        public int SaveBuildTask(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask _buildTask) {
            return base.Channel.SaveBuildTask(_buildTask);
        }
        
        public System.Threading.Tasks.Task<int> SaveBuildTaskAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask _buildTask) {
            return base.Channel.SaveBuildTaskAsync(_buildTask);
        }
        
        public int SaveRenameDir(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir _renameDir) {
            return base.Channel.SaveRenameDir(_renameDir);
        }
        
        public System.Threading.Tasks.Task<int> SaveRenameDirAsync(ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir _renameDir) {
            return base.Channel.SaveRenameDirAsync(_renameDir);
        }
        
        public int SaveDeleteDir(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir _deleteDir) {
            return base.Channel.SaveDeleteDir(_deleteDir);
        }
        
        public System.Threading.Tasks.Task<int> SaveDeleteDirAsync(ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir _deleteDir) {
            return base.Channel.SaveDeleteDirAsync(_deleteDir);
        }
        
        public int SaveFramework(ManualDeploymentCheck.BuildAtlasWCF.LightFramework _framework) {
            return base.Channel.SaveFramework(_framework);
        }
        
        public System.Threading.Tasks.Task<int> SaveFrameworkAsync(ManualDeploymentCheck.BuildAtlasWCF.LightFramework _framework) {
            return base.Channel.SaveFrameworkAsync(_framework);
        }
        
        public int SaveArchitecture(ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture _architecture) {
            return base.Channel.SaveArchitecture(_architecture);
        }
        
        public System.Threading.Tasks.Task<int> SaveArchitectureAsync(ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture _architecture) {
            return base.Channel.SaveArchitectureAsync(_architecture);
        }
        
        public int SaveConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration _configuration) {
            return base.Channel.SaveConfiguration(_configuration);
        }
        
        public System.Threading.Tasks.Task<int> SaveConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration _configuration) {
            return base.Channel.SaveConfigurationAsync(_configuration);
        }
        
        public void SaveServerConnectionInfo(int serverId, System.Nullable<int> canConnect, System.Nullable<System.DateTime> conTested, string conTestException, string conError) {
            base.Channel.SaveServerConnectionInfo(serverId, canConnect, conTested, conTestException, conError);
        }
        
        public System.Threading.Tasks.Task SaveServerConnectionInfoAsync(int serverId, System.Nullable<int> canConnect, System.Nullable<System.DateTime> conTested, string conTestException, string conError) {
            return base.Channel.SaveServerConnectionInfoAsync(serverId, canConnect, conTested, conTestException, conError);
        }
        
        public int SaveServer(ManualDeploymentCheck.BuildAtlasWCF.LightServer _server, string modifiedBy) {
            return base.Channel.SaveServer(_server, modifiedBy);
        }
        
        public System.Threading.Tasks.Task<int> SaveServerAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServer _server, string modifiedBy) {
            return base.Channel.SaveServerAsync(_server, modifiedBy);
        }
        
        public int SaveSite(ManualDeploymentCheck.BuildAtlasWCF.LightSite _site) {
            return base.Channel.SaveSite(_site);
        }
        
        public System.Threading.Tasks.Task<int> SaveSiteAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSite _site) {
            return base.Channel.SaveSiteAsync(_site);
        }
        
        public void SaveBrandConfigurations(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] brandConfigs, string modifiedby) {
            base.Channel.SaveBrandConfigurations(brandConfigs, modifiedby);
        }
        
        public System.Threading.Tasks.Task SaveBrandConfigurationsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] brandConfigs, string modifiedby) {
            return base.Channel.SaveBrandConfigurationsAsync(brandConfigs, modifiedby);
        }
        
        public int SaveBrandConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration _config, string modifiedby) {
            return base.Channel.SaveBrandConfiguration(_config, modifiedby);
        }
        
        public System.Threading.Tasks.Task<int> SaveBrandConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration _config, string modifiedby) {
            return base.Channel.SaveBrandConfigurationAsync(_config, modifiedby);
        }
        
        public void SaveOrganizationConfigurations(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] orgConfigs, string modifiedby) {
            base.Channel.SaveOrganizationConfigurations(orgConfigs, modifiedby);
        }
        
        public System.Threading.Tasks.Task SaveOrganizationConfigurationsAsync(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] orgConfigs, string modifiedby) {
            return base.Channel.SaveOrganizationConfigurationsAsync(orgConfigs, modifiedby);
        }
        
        public int SaveOrganizationConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration _config, string modifiedby) {
            return base.Channel.SaveOrganizationConfiguration(_config, modifiedby);
        }
        
        public System.Threading.Tasks.Task<int> SaveOrganizationConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration _config, string modifiedby) {
            return base.Channel.SaveOrganizationConfigurationAsync(_config, modifiedby);
        }
        
        public int SaveSiteConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby) {
            return base.Channel.SaveSiteConfiguration(_config, modifiedby);
        }
        
        public System.Threading.Tasks.Task<int> SaveSiteConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby) {
            return base.Channel.SaveSiteConfigurationAsync(_config, modifiedby);
        }
        
        public void SaveSiteConfigurationForVersionCollection(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby) {
            base.Channel.SaveSiteConfigurationForVersionCollection(versions, _config, modifiedby);
        }
        
        public System.Threading.Tasks.Task SaveSiteConfigurationForVersionCollectionAsync(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration _config, string modifiedby) {
            return base.Channel.SaveSiteConfigurationForVersionCollectionAsync(versions, _config, modifiedby);
        }
        
        public void SaveSiteConfigurationCollectionForVersionCollection(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] _configs, string modifiedby) {
            base.Channel.SaveSiteConfigurationCollectionForVersionCollection(versions, _configs, modifiedby);
        }
        
        public System.Threading.Tasks.Task SaveSiteConfigurationCollectionForVersionCollectionAsync(int[] versions, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] _configs, string modifiedby) {
            return base.Channel.SaveSiteConfigurationCollectionForVersionCollectionAsync(versions, _configs, modifiedby);
        }
        
        public int SaveServerConfiguration(ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration _config) {
            return base.Channel.SaveServerConfiguration(_config);
        }
        
        public System.Threading.Tasks.Task<int> SaveServerConfigurationAsync(ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration _config) {
            return base.Channel.SaveServerConfigurationAsync(_config);
        }
        
        public int SaveTool(ManualDeploymentCheck.BuildAtlasWCF.LightTool _tool) {
            return base.Channel.SaveTool(_tool);
        }
        
        public System.Threading.Tasks.Task<int> SaveToolAsync(ManualDeploymentCheck.BuildAtlasWCF.LightTool _tool) {
            return base.Channel.SaveToolAsync(_tool);
        }
        
        public int SaveCodeMove(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove _codeMove, string modifiedby, string reason) {
            return base.Channel.SaveCodeMove(_codeMove, modifiedby, reason);
        }
        
        public System.Threading.Tasks.Task<int> SaveCodeMoveAsync(ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove _codeMove, string modifiedby, string reason) {
            return base.Channel.SaveCodeMoveAsync(_codeMove, modifiedby, reason);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[] GetHashesForComponent(int serverCompId) {
            return base.Channel.GetHashesForComponent(serverCompId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash[]> GetHashesForComponentAsync(int serverCompId) {
            return base.Channel.GetHashesForComponentAsync(serverCompId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog[] GetBuildLogs(int buildId) {
            return base.Channel.GetBuildLogs(buildId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog[]> GetBuildLogsAsync(int buildId) {
            return base.Channel.GetBuildLogsAsync(buildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog GetBuildLogByStartTime(int buildId, System.DateTime startTime) {
            return base.Channel.GetBuildLogByStartTime(buildId, startTime);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog> GetBuildLogByStartTimeAsync(int buildId, System.DateTime startTime) {
            return base.Channel.GetBuildLogByStartTimeAsync(buildId, startTime);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog GetBuildLogByFinishTime(int buildId, System.DateTime finishTime) {
            return base.Channel.GetBuildLogByFinishTime(buildId, finishTime);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog> GetBuildLogByFinishTimeAsync(int buildId, System.DateTime finishTime) {
            return base.Channel.GetBuildLogByFinishTimeAsync(buildId, finishTime);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog GetBuildLogById(int buildLogId) {
            return base.Channel.GetBuildLogById(buildLogId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildLog> GetBuildLogByIdAsync(int buildLogId) {
            return base.Channel.GetBuildLogByIdAsync(buildLogId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[] GetEnvironments(int brandId) {
            return base.Channel.GetEnvironments(brandId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[]> GetEnvironmentsAsync(int brandId) {
            return base.Channel.GetEnvironmentsAsync(brandId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[] GetEnvironmentsByOrganization(int orgId) {
            return base.Channel.GetEnvironmentsByOrganization(orgId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment[]> GetEnvironmentsByOrganizationAsync(int orgId) {
            return base.Channel.GetEnvironmentsByOrganizationAsync(orgId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment GetEnvironmentByName(string brandName, string envName) {
            return base.Channel.GetEnvironmentByName(brandName, envName);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment> GetEnvironmentByNameAsync(string brandName, string envName) {
            return base.Channel.GetEnvironmentByNameAsync(brandName, envName);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment GetEnvironmentById(int envId) {
            return base.Channel.GetEnvironmentById(envId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment> GetEnvironmentByIdAsync(int envId) {
            return base.Channel.GetEnvironmentByIdAsync(envId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetAllSites() {
            return base.Channel.GetAllSites();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetAllSitesAsync() {
            return base.Channel.GetAllSitesAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetSitesByBrand(int brandId) {
            return base.Channel.GetSitesByBrand(brandId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetSitesByBrandAsync(int brandId) {
            return base.Channel.GetSitesByBrandAsync(brandId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetSites(int envId) {
            return base.Channel.GetSites(envId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetSitesAsync(int envId) {
            return base.Channel.GetSitesAsync(envId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSite GetSiteById(int siteId) {
            return base.Channel.GetSiteById(siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite> GetSiteByIdAsync(int siteId) {
            return base.Channel.GetSiteByIdAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSite GetSiteByNameAndRegion(string site, string region) {
            return base.Channel.GetSiteByNameAndRegion(site, region);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite> GetSiteByNameAndRegionAsync(string site, string region) {
            return base.Channel.GetSiteByNameAndRegionAsync(site, region);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteComponent[] GetSiteComponents(int siteId) {
            return base.Channel.GetSiteComponents(siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteComponent[]> GetSiteComponentsAsync(int siteId) {
            return base.Channel.GetSiteComponentsAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServers() {
            return base.Channel.GetServers();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersAsync() {
            return base.Channel.GetServersAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByDefaultRegion(string region) {
            return base.Channel.GetServersByDefaultRegion(region);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByDefaultRegionAsync(string region) {
            return base.Channel.GetServersByDefaultRegionAsync(region);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByFilter(string filter) {
            return base.Channel.GetServersByFilter(filter);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByFilterAsync(string filter) {
            return base.Channel.GetServersByFilterAsync(filter);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByLoadBalancer(int lbId) {
            return base.Channel.GetServersByLoadBalancer(lbId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByLoadBalancerAsync(int lbId) {
            return base.Channel.GetServersByLoadBalancerAsync(lbId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer GetServerById(int id) {
            return base.Channel.GetServerById(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer> GetServerByIdAsync(int id) {
            return base.Channel.GetServerByIdAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer GetServerByName(string name) {
            return base.Channel.GetServerByName(name);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer> GetServerByNameAsync(string name) {
            return base.Channel.GetServerByNameAsync(name);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer GetServerByIP(string ip) {
            return base.Channel.GetServerByIP(ip);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer> GetServerByIPAsync(string ip) {
            return base.Channel.GetServerByIPAsync(ip);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServer[] GetServersByPrometheusId(int id) {
            return base.Channel.GetServersByPrometheusId(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServer[]> GetServersByPrometheusIdAsync(int id) {
            return base.Channel.GetServersByPrometheusIdAsync(id);
        }
        
        public int GetPrometheusIdByServerName(string name) {
            return base.Channel.GetPrometheusIdByServerName(name);
        }
        
        public System.Threading.Tasks.Task<int> GetPrometheusIdByServerNameAsync(string name) {
            return base.Channel.GetPrometheusIdByServerNameAsync(name);
        }
        
        public int IsPrometheusServer(int serverId) {
            return base.Channel.IsPrometheusServer(serverId);
        }
        
        public System.Threading.Tasks.Task<int> IsPrometheusServerAsync(int serverId) {
            return base.Channel.IsPrometheusServerAsync(serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer[] GetPrometheusServers() {
            return base.Channel.GetPrometheusServers();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer[]> GetPrometheusServersAsync() {
            return base.Channel.GetPrometheusServersAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer GetPrometheusServerById(int id) {
            return base.Channel.GetPrometheusServerById(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightPrometheusServer> GetPrometheusServerByIdAsync(int id) {
            return base.Channel.GetPrometheusServerByIdAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir[] GetRenameDirs(int projectId) {
            return base.Channel.GetRenameDirs(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightRenameDir[]> GetRenameDirsAsync(int projectId) {
            return base.Channel.GetRenameDirsAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir[] GetDeleteDirs(int projectId) {
            return base.Channel.GetDeleteDirs(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeleteDir[]> GetDeleteDirsAsync(int projectId) {
            return base.Channel.GetDeleteDirsAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightFramework[] GetFrameworks() {
            return base.Channel.GetFrameworks();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightFramework[]> GetFrameworksAsync() {
            return base.Channel.GetFrameworksAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightFramework GetFramework(int id) {
            return base.Channel.GetFramework(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightFramework> GetFrameworkAsync(int id) {
            return base.Channel.GetFrameworkAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture[] GetArchitectures() {
            return base.Channel.GetArchitectures();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture[]> GetArchitecturesAsync() {
            return base.Channel.GetArchitecturesAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture GetArchitecture(int id) {
            return base.Channel.GetArchitecture(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightArchitecture> GetArchitectureAsync(int id) {
            return base.Channel.GetArchitectureAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration[] GetConfigurations() {
            return base.Channel.GetConfigurations();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration[]> GetConfigurationsAsync() {
            return base.Channel.GetConfigurationsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration GetConfiguration(int id) {
            return base.Channel.GetConfiguration(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfiguration> GetConfigurationAsync(int id) {
            return base.Channel.GetConfigurationAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurations(int brandId) {
            return base.Channel.GetBrandConfigurations(brandId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsAsync(int brandId) {
            return base.Channel.GetBrandConfigurationsAsync(brandId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurationsForRegion(int brandId, int regionId) {
            return base.Channel.GetBrandConfigurationsForRegion(brandId, regionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsForRegionAsync(int brandId, int regionId) {
            return base.Channel.GetBrandConfigurationsForRegionAsync(brandId, regionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurationsByFilter(int brandId, string region, string configVariable, string configValue) {
            return base.Channel.GetBrandConfigurationsByFilter(brandId, region, configVariable, configValue);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsByFilterAsync(int brandId, string region, string configVariable, string configValue) {
            return base.Channel.GetBrandConfigurationsByFilterAsync(brandId, region, configVariable, configValue);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[] GetBrandConfigurationsForRegionByFilter(int brandId, int regionId, string configVariable, string configValue) {
            return base.Channel.GetBrandConfigurationsForRegionByFilter(brandId, regionId, configVariable, configValue);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration[]> GetBrandConfigurationsForRegionByFilterAsync(int brandId, int regionId, string configVariable, string configValue) {
            return base.Channel.GetBrandConfigurationsForRegionByFilterAsync(brandId, regionId, configVariable, configValue);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration GetBrandConfigurationById(int configId) {
            return base.Channel.GetBrandConfigurationById(configId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfiguration> GetBrandConfigurationByIdAsync(int configId) {
            return base.Channel.GetBrandConfigurationByIdAsync(configId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] GetOrganizationConfigurations(int orgId) {
            return base.Channel.GetOrganizationConfigurations(orgId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[]> GetOrganizationConfigurationsAsync(int orgId) {
            return base.Channel.GetOrganizationConfigurationsAsync(orgId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] GetOrganizationConfigurationsForRegion(int orgId, string region) {
            return base.Channel.GetOrganizationConfigurationsForRegion(orgId, region);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[]> GetOrganizationConfigurationsForRegionAsync(int orgId, string region) {
            return base.Channel.GetOrganizationConfigurationsForRegionAsync(orgId, region);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[] GetOrganizationConfigurationsByFilter(int orgId, string region, string configVariable, string configValue) {
            return base.Channel.GetOrganizationConfigurationsByFilter(orgId, region, configVariable, configValue);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration[]> GetOrganizationConfigurationsByFilterAsync(int orgId, string region, string configVariable, string configValue) {
            return base.Channel.GetOrganizationConfigurationsByFilterAsync(orgId, region, configVariable, configValue);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration GetOrganizationConfigurationById(int configId) {
            return base.Channel.GetOrganizationConfigurationById(configId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfiguration> GetOrganizationConfigurationByIdAsync(int configId) {
            return base.Channel.GetOrganizationConfigurationByIdAsync(configId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurations(int versionId, int siteId) {
            return base.Channel.GetSiteConfigurations(versionId, siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsAsync(int versionId, int siteId) {
            return base.Channel.GetSiteConfigurationsAsync(versionId, siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurationsForVersion(int versionId) {
            return base.Channel.GetSiteConfigurationsForVersion(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsForVersionAsync(int versionId) {
            return base.Channel.GetSiteConfigurationsForVersionAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurationsByFilter(int versionId, string region, string entityName, string configVariable, string configValue) {
            return base.Channel.GetSiteConfigurationsByFilter(versionId, region, entityName, configVariable, configValue);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsByFilterAsync(int versionId, string region, string entityName, string configVariable, string configValue) {
            return base.Channel.GetSiteConfigurationsByFilterAsync(versionId, region, entityName, configVariable, configValue);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] GetSiteConfigurationsForSiteByFilter(int versionId, string region, int entity, string configVariable, string configValue) {
            return base.Channel.GetSiteConfigurationsForSiteByFilter(versionId, region, entity, configVariable, configValue);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[]> GetSiteConfigurationsForSiteByFilterAsync(int versionId, string region, int entity, string configVariable, string configValue) {
            return base.Channel.GetSiteConfigurationsForSiteByFilterAsync(versionId, region, entity, configVariable, configValue);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration GetSiteConfigurationById(int siteConfigId) {
            return base.Channel.GetSiteConfigurationById(siteConfigId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration> GetSiteConfigurationByIdAsync(int siteConfigId) {
            return base.Channel.GetSiteConfigurationByIdAsync(siteConfigId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfigurationHistory[] GetBrandConfigurationHistory(int configId) {
            return base.Channel.GetBrandConfigurationHistory(configId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrandConfigurationHistory[]> GetBrandConfigurationHistoryAsync(int configId) {
            return base.Channel.GetBrandConfigurationHistoryAsync(configId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfigurationHistory[] GetOrganizationConfigurationHistory(int configId) {
            return base.Channel.GetOrganizationConfigurationHistory(configId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganizationConfigurationHistory[]> GetOrganizationConfigurationHistoryAsync(int configId) {
            return base.Channel.GetOrganizationConfigurationHistoryAsync(configId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfigurationHistory[] GetSiteConfigurationHistory(int configId) {
            return base.Channel.GetSiteConfigurationHistory(configId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfigurationHistory[]> GetSiteConfigurationHistoryAsync(int configId) {
            return base.Channel.GetSiteConfigurationHistoryAsync(configId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[] GetConfigTemplatesForVersion(int versionId) {
            return base.Channel.GetConfigTemplatesForVersion(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[]> GetConfigTemplatesForVersionAsync(int versionId) {
            return base.Channel.GetConfigTemplatesForVersionAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[] GetConfigTemplatesForBuild(int buildId) {
            return base.Channel.GetConfigTemplatesForBuild(buildId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[]> GetConfigTemplatesForBuildAsync(int buildId) {
            return base.Channel.GetConfigTemplatesForBuildAsync(buildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[] GetConfigTemplatesByPath(string templatePath) {
            return base.Channel.GetConfigTemplatesByPath(templatePath);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightConfigTemplate[]> GetConfigTemplatesByPathAsync(string templatePath) {
            return base.Channel.GetConfigTemplatesByPathAsync(templatePath);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[] GetServerConfigurations(int serverId) {
            return base.Channel.GetServerConfigurations(serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration[]> GetServerConfigurationsAsync(int serverId) {
            return base.Channel.GetServerConfigurationsAsync(serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration GetServerConfigurationById(int serverConfigId) {
            return base.Channel.GetServerConfigurationById(serverConfigId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerConfiguration> GetServerConfigurationByIdAsync(int serverConfigId) {
            return base.Channel.GetServerConfigurationByIdAsync(serverConfigId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightTool[] GetTools(int serverId) {
            return base.Channel.GetTools(serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTool[]> GetToolsAsync(int serverId) {
            return base.Channel.GetToolsAsync(serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightTool GetToolById(int toolId) {
            return base.Channel.GetToolById(toolId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTool> GetToolByIdAsync(int toolId) {
            return base.Channel.GetToolByIdAsync(toolId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightTool GetToolByName(int serverId, string name) {
            return base.Channel.GetToolByName(serverId, name);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightTool> GetToolByNameAsync(int serverId, string name) {
            return base.Channel.GetToolByNameAsync(serverId, name);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] GetCompDefinitions() {
            return base.Channel.GetCompDefinitions();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[]> GetCompDefinitionsAsync() {
            return base.Channel.GetCompDefinitionsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition GetCompDefinition(int id) {
            return base.Channel.GetCompDefinition(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition> GetCompDefinitionAsync(int id) {
            return base.Channel.GetCompDefinitionAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[] GetCompDefinitionsByType(string type) {
            return base.Channel.GetCompDefinitionsByType(type);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompDefinition[]> GetCompDefinitionsByTypeAsync(string type) {
            return base.Channel.GetCompDefinitionsByTypeAsync(type);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByServer(int serverId) {
            return base.Channel.GetServerCompsByServer(serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByServerAsync(int serverId) {
            return base.Channel.GetServerCompsByServerAsync(serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByLayerSiteAndServer(int layerId, int siteId, int serverId) {
            return base.Channel.GetServerCompsByLayerSiteAndServer(layerId, siteId, serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByLayerSiteAndServerAsync(int layerId, int siteId, int serverId) {
            return base.Channel.GetServerCompsByLayerSiteAndServerAsync(layerId, siteId, serverId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByServerAndType(int serverId, int compDefId) {
            return base.Channel.GetServerCompsByServerAndType(serverId, compDefId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByServerAndTypeAsync(int serverId, int compDefId) {
            return base.Channel.GetServerCompsByServerAndTypeAsync(serverId, compDefId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsBySite(int siteId) {
            return base.Channel.GetServerCompsBySite(siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsBySiteAsync(int siteId) {
            return base.Channel.GetServerCompsBySiteAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByServerAndSite(int serverId, int siteId) {
            return base.Channel.GetServerCompsByServerAndSite(serverId, siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByServerAndSiteAsync(int serverId, int siteId) {
            return base.Channel.GetServerCompsByServerAndSiteAsync(serverId, siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp GetServerComp(int id) {
            return base.Channel.GetServerComp(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp> GetServerCompAsync(int id) {
            return base.Channel.GetServerCompAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[] GetServerCompsByRegion(int regionId) {
            return base.Channel.GetServerCompsByRegion(regionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightServerComp[]> GetServerCompsByRegionAsync(int regionId) {
            return base.Channel.GetServerCompsByRegionAsync(regionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMoveHistory[] GetCodeMoveHistory(int codeMoveId) {
            return base.Channel.GetCodeMoveHistory(codeMoveId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMoveHistory[]> GetCodeMoveHistoryAsync(int codeMoveId) {
            return base.Channel.GetCodeMoveHistoryAsync(codeMoveId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo GetCompositeBuildInfo(string brand, string env, string site) {
            return base.Channel.GetCompositeBuildInfo(brand, env, site);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo> GetCompositeBuildInfoAsync(string brand, string env, string site) {
            return base.Channel.GetCompositeBuildInfoAsync(brand, env, site);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo GetCompositeBuildInfoFromUrl(string url) {
            return base.Channel.GetCompositeBuildInfoFromUrl(url);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCompositeBuildInfo> GetCompositeBuildInfoFromUrlAsync(string url) {
            return base.Channel.GetCompositeBuildInfoFromUrlAsync(url);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetScheduledCodeMoves() {
            return base.Channel.GetScheduledCodeMoves();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetScheduledCodeMovesAsync() {
            return base.Channel.GetScheduledCodeMovesAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetScheduledAndPendingCodeMoves() {
            return base.Channel.GetScheduledAndPendingCodeMoves();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetScheduledAndPendingCodeMovesAsync() {
            return base.Channel.GetScheduledAndPendingCodeMovesAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetRecentCompletedCodeMoves(int hours) {
            return base.Channel.GetRecentCompletedCodeMoves(hours);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetRecentCompletedCodeMovesAsync(int hours) {
            return base.Channel.GetRecentCompletedCodeMovesAsync(hours);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesByVersion(int versionId) {
            return base.Channel.GetCodeMovesByVersion(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesByVersionAsync(int versionId) {
            return base.Channel.GetCodeMovesByVersionAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesByResult(string result) {
            return base.Channel.GetCodeMovesByResult(result);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesByResultAsync(string result) {
            return base.Channel.GetCodeMovesByResultAsync(result);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesBySite(int siteId) {
            return base.Channel.GetCodeMovesBySite(siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesBySiteAsync(int siteId) {
            return base.Channel.GetCodeMovesBySiteAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[] GetCodeMovesByBuild(int buildId) {
            return base.Channel.GetCodeMovesByBuild(buildId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove[]> GetCodeMovesByBuildAsync(int buildId) {
            return base.Channel.GetCodeMovesByBuildAsync(buildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove GetCodeMove(int id) {
            return base.Channel.GetCodeMove(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightCodeMove> GetCodeMoveAsync(int id) {
            return base.Channel.GetCodeMoveAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment GetDeploymentById(int Id) {
            return base.Channel.GetDeploymentById(Id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment> GetDeploymentByIdAsync(int Id) {
            return base.Channel.GetDeploymentByIdAsync(Id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment GetLastDeploymentForServerComp(int siteId, int svrId, int layerId) {
            return base.Channel.GetLastDeploymentForServerComp(siteId, svrId, layerId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment> GetLastDeploymentForServerCompAsync(int siteId, int svrId, int layerId) {
            return base.Channel.GetLastDeploymentForServerCompAsync(siteId, svrId, layerId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsForCodeMove(int codeMoveId) {
            return base.Channel.GetDeploymentsForCodeMove(codeMoveId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsForCodeMoveAsync(int codeMoveId) {
            return base.Channel.GetDeploymentsForCodeMoveAsync(codeMoveId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[] GetDeploymentsForCodeMoveAndServer(int codeMoveId, int serverId) {
            return base.Channel.GetDeploymentsForCodeMoveAndServer(codeMoveId, serverId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployment[]> GetDeploymentsForCodeMoveAndServerAsync(int codeMoveId, int serverId) {
            return base.Channel.GetDeploymentsForCodeMoveAndServerAsync(codeMoveId, serverId);
        }
        
        public string SVNCompare(int buildLower, int buildHigher, int versionId) {
            return base.Channel.SVNCompare(buildLower, buildHigher, versionId);
        }
        
        public System.Threading.Tasks.Task<string> SVNCompareAsync(int buildLower, int buildHigher, int versionId) {
            return base.Channel.SVNCompareAsync(buildLower, buildHigher, versionId);
        }
        
        public void SendBuildReportEmail(ManualDeploymentCheck.BuildAtlasWCF.LightBuild build, string[] toList, string[] ccList, string from, string subject, string info) {
            base.Channel.SendBuildReportEmail(build, toList, ccList, from, subject, info);
        }
        
        public System.Threading.Tasks.Task SendBuildReportEmailAsync(ManualDeploymentCheck.BuildAtlasWCF.LightBuild build, string[] toList, string[] ccList, string from, string subject, string info) {
            return base.Channel.SendBuildReportEmailAsync(build, toList, ccList, from, subject, info);
        }
        
        public void SendEnvReportEmail(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string[] toList, string[] ccList, string from, string subject, string info) {
            base.Channel.SendEnvReportEmail(env, sites, toList, ccList, from, subject, info);
        }
        
        public System.Threading.Tasks.Task SendEnvReportEmailAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string[] toList, string[] ccList, string from, string subject, string info) {
            return base.Channel.SendEnvReportEmailAsync(env, sites, toList, ccList, from, subject, info);
        }
        
        public void SendConfigurationReport(string toList, string ccList, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] configs, string msg, string versionString) {
            base.Channel.SendConfigurationReport(toList, ccList, configs, msg, versionString);
        }
        
        public System.Threading.Tasks.Task SendConfigurationReportAsync(string toList, string ccList, ManualDeploymentCheck.BuildAtlasWCF.LightSiteConfiguration[] configs, string msg, string versionString) {
            return base.Channel.SendConfigurationReportAsync(toList, ccList, configs, msg, versionString);
        }
        
        public string GenEnvReport(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string info) {
            return base.Channel.GenEnvReport(env, sites, info);
        }
        
        public System.Threading.Tasks.Task<string> GenEnvReportAsync(ManualDeploymentCheck.BuildAtlasWCF.LightEnvironment env, ManualDeploymentCheck.BuildAtlasWCF.LightSite[] sites, string info) {
            return base.Channel.GenEnvReportAsync(env, sites, info);
        }
        
        public void SendEmail(string body, string subject, string[] toList, string[] ccList, string from, bool isHtml) {
            base.Channel.SendEmail(body, subject, toList, ccList, from, isHtml);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(string body, string subject, string[] toList, string[] ccList, string from, bool isHtml) {
            return base.Channel.SendEmailAsync(body, subject, toList, ccList, from, isHtml);
        }
        
        public string GetMinionName(int serverId) {
            return base.Channel.GetMinionName(serverId);
        }
        
        public System.Threading.Tasks.Task<string> GetMinionNameAsync(int serverId) {
            return base.Channel.GetMinionNameAsync(serverId);
        }
        
        public string[] GenerateConfigFile(string template, string server, System.Nullable<int> serverId, int siteId) {
            return base.Channel.GenerateConfigFile(template, server, serverId, siteId);
        }
        
        public System.Threading.Tasks.Task<string[]> GenerateConfigFileAsync(string template, string server, System.Nullable<int> serverId, int siteId) {
            return base.Channel.GenerateConfigFileAsync(template, server, serverId, siteId);
        }
        
        public string GetBuildUrl(int buildId) {
            return base.Channel.GetBuildUrl(buildId);
        }
        
        public System.Threading.Tasks.Task<string> GetBuildUrlAsync(int buildId) {
            return base.Channel.GetBuildUrlAsync(buildId);
        }
        
        public bool ValidateUser(string userName, string password) {
            return base.Channel.ValidateUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string userName, string password) {
            return base.Channel.ValidateUserAsync(userName, password);
        }
        
        public bool ExistingBrand(int brandId) {
            return base.Channel.ExistingBrand(brandId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingBrandAsync(int brandId) {
            return base.Channel.ExistingBrandAsync(brandId);
        }
        
        public bool ExistingEnvironment(int environmentId) {
            return base.Channel.ExistingEnvironment(environmentId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingEnvironmentAsync(int environmentId) {
            return base.Channel.ExistingEnvironmentAsync(environmentId);
        }
        
        public bool ExistingVersion(int versionId) {
            return base.Channel.ExistingVersion(versionId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingVersionAsync(int versionId) {
            return base.Channel.ExistingVersionAsync(versionId);
        }
        
        public bool ExistingProject(int projectId) {
            return base.Channel.ExistingProject(projectId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingProjectAsync(int projectId) {
            return base.Channel.ExistingProjectAsync(projectId);
        }
        
        public bool ExistingLayer(int layerId) {
            return base.Channel.ExistingLayer(layerId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingLayerAsync(int layerId) {
            return base.Channel.ExistingLayerAsync(layerId);
        }
        
        public bool ExistingBuildTask(int buildTaskId) {
            return base.Channel.ExistingBuildTask(buildTaskId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingBuildTaskAsync(int buildTaskId) {
            return base.Channel.ExistingBuildTaskAsync(buildTaskId);
        }
        
        public bool ExistingRenameDir(int renameDirId) {
            return base.Channel.ExistingRenameDir(renameDirId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingRenameDirAsync(int renameDirId) {
            return base.Channel.ExistingRenameDirAsync(renameDirId);
        }
        
        public bool ExistingDeleteDir(int deleteDirId) {
            return base.Channel.ExistingDeleteDir(deleteDirId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingDeleteDirAsync(int deleteDirId) {
            return base.Channel.ExistingDeleteDirAsync(deleteDirId);
        }
        
        public bool ExistingFramework(int frameworkId) {
            return base.Channel.ExistingFramework(frameworkId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingFrameworkAsync(int frameworkId) {
            return base.Channel.ExistingFrameworkAsync(frameworkId);
        }
        
        public bool ExistingArchitecture(int architectureId) {
            return base.Channel.ExistingArchitecture(architectureId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingArchitectureAsync(int architectureId) {
            return base.Channel.ExistingArchitectureAsync(architectureId);
        }
        
        public bool ExistingConfiguration(int configurationId) {
            return base.Channel.ExistingConfiguration(configurationId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingConfigurationAsync(int configurationId) {
            return base.Channel.ExistingConfigurationAsync(configurationId);
        }
        
        public bool ExistingServer(int serverId) {
            return base.Channel.ExistingServer(serverId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingServerAsync(int serverId) {
            return base.Channel.ExistingServerAsync(serverId);
        }
        
        public bool ExistingLoadBalancer(int loadBalancerId) {
            return base.Channel.ExistingLoadBalancer(loadBalancerId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingLoadBalancerAsync(int loadBalancerId) {
            return base.Channel.ExistingLoadBalancerAsync(loadBalancerId);
        }
        
        public bool ExistingSite(int siteId) {
            return base.Channel.ExistingSite(siteId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingSiteAsync(int siteId) {
            return base.Channel.ExistingSiteAsync(siteId);
        }
        
        public bool ExistingSiteConfiguration(int siteConfigId) {
            return base.Channel.ExistingSiteConfiguration(siteConfigId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingSiteConfigurationAsync(int siteConfigId) {
            return base.Channel.ExistingSiteConfigurationAsync(siteConfigId);
        }
        
        public bool ExistingServerConfiguration(int serverConfigId) {
            return base.Channel.ExistingServerConfiguration(serverConfigId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingServerConfigurationAsync(int serverConfigId) {
            return base.Channel.ExistingServerConfigurationAsync(serverConfigId);
        }
        
        public bool ExistingTool(int toolId) {
            return base.Channel.ExistingTool(toolId);
        }
        
        public System.Threading.Tasks.Task<bool> ExistingToolAsync(int toolId) {
            return base.Channel.ExistingToolAsync(toolId);
        }
        
        public bool DeploymentInProgress(string siteName, string region) {
            return base.Channel.DeploymentInProgress(siteName, region);
        }
        
        public System.Threading.Tasks.Task<bool> DeploymentInProgressAsync(string siteName, string region) {
            return base.Channel.DeploymentInProgressAsync(siteName, region);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetAdmins() {
            return base.Channel.GetAdmins();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetAdminsAsync() {
            return base.Channel.GetAdminsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetBuildMasters() {
            return base.Channel.GetBuildMasters();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetBuildMastersAsync() {
            return base.Channel.GetBuildMastersAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetConigManagers() {
            return base.Channel.GetConigManagers();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetConigManagersAsync() {
            return base.Channel.GetConigManagersAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetProjectManagers() {
            return base.Channel.GetProjectManagers();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetProjectManagersAsync() {
            return base.Channel.GetProjectManagersAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetQAs() {
            return base.Channel.GetQAs();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetQAsAsync() {
            return base.Channel.GetQAsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser GetUserByName(string name) {
            return base.Channel.GetUserByName(name);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser> GetUserByNameAsync(string name) {
            return base.Channel.GetUserByNameAsync(name);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightGroupPrincipal[] GetGroups(string userName) {
            return base.Channel.GetGroups(userName);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightGroupPrincipal[]> GetGroupsAsync(string userName) {
            return base.Channel.GetGroupsAsync(userName);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightEmail[] GetEmails(int userId) {
            return base.Channel.GetEmails(userId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightEmail[]> GetEmailsAsync(int userId) {
            return base.Channel.GetEmailsAsync(userId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightSite[] GetEmailsForUser(int userId) {
            return base.Channel.GetEmailsForUser(userId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightSite[]> GetEmailsForUserAsync(int userId) {
            return base.Channel.GetEmailsForUserAsync(userId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightUser[] GetEmailsForSite(int siteId) {
            return base.Channel.GetEmailsForSite(siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightUser[]> GetEmailsForSiteAsync(int siteId) {
            return base.Channel.GetEmailsForSiteAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] GetBrands() {
            return base.Channel.GetBrands();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand[]> GetBrandsAsync() {
            return base.Channel.GetBrandsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrand GetBrandByName(string name) {
            return base.Channel.GetBrandByName(name);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand> GetBrandByNameAsync(string name) {
            return base.Channel.GetBrandByNameAsync(name);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrand GetBrandById(int id) {
            return base.Channel.GetBrandById(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand> GetBrandByIdAsync(int id) {
            return base.Channel.GetBrandByIdAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBrand[] GetBrandsByOrganization(int id) {
            return base.Channel.GetBrandsByOrganization(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBrand[]> GetBrandsByOrganizationAsync(int id) {
            return base.Channel.GetBrandsByOrganizationAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganization[] GetOrganizations() {
            return base.Channel.GetOrganizations();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganization[]> GetOrganizationsAsync() {
            return base.Channel.GetOrganizationsAsync();
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganization GetOrganization(int id) {
            return base.Channel.GetOrganization(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganization> GetOrganizationAsync(int id) {
            return base.Channel.GetOrganizationAsync(id);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightOrganization GetOrganizationByName(string name) {
            return base.Channel.GetOrganizationByName(name);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightOrganization> GetOrganizationByNameAsync(string name) {
            return base.Channel.GetOrganizationByNameAsync(name);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightVersion[] GetVersions(int brandId) {
            return base.Channel.GetVersions(brandId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion[]> GetVersionsAsync(int brandId) {
            return base.Channel.GetVersionsAsync(brandId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightVersion[] GetVersionsByMinor(string minor) {
            return base.Channel.GetVersionsByMinor(minor);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion[]> GetVersionsByMinorAsync(string minor) {
            return base.Channel.GetVersionsByMinorAsync(minor);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightVersion GetVersionById(int versionId) {
            return base.Channel.GetVersionById(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion> GetVersionByIdAsync(int versionId) {
            return base.Channel.GetVersionByIdAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightVersion GetVersionByVersionString(string brandName, string versionString) {
            return base.Channel.GetVersionByVersionString(brandName, versionString);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightVersion> GetVersionByVersionStringAsync(string brandName, string versionString) {
            return base.Channel.GetVersionByVersionStringAsync(brandName, versionString);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightProject[] GetProjects(int versionId) {
            return base.Channel.GetProjects(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightProject[]> GetProjectsAsync(int versionId) {
            return base.Channel.GetProjectsAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightProject[] GetProjectsByLayerId(int layerId) {
            return base.Channel.GetProjectsByLayerId(layerId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightProject[]> GetProjectsByLayerIdAsync(int layerId) {
            return base.Channel.GetProjectsByLayerIdAsync(layerId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightProject GetProjectById(int projectId) {
            return base.Channel.GetProjectById(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightProject> GetProjectByIdAsync(int projectId) {
            return base.Channel.GetProjectByIdAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayer[] GetLayers(int versionId) {
            return base.Channel.GetLayers(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayer[]> GetLayersAsync(int versionId) {
            return base.Channel.GetLayersAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightLayer GetLayerById(int layerId) {
            return base.Channel.GetLayerById(layerId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightLayer> GetLayerByIdAsync(int layerId) {
            return base.Channel.GetLayerByIdAsync(layerId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetBuildTasks(int projectId, System.Nullable<int> compileCI, System.Nullable<int> compileQA, System.Nullable<System.DateTime> lastMod, string lastModBy) {
            return base.Channel.GetBuildTasks(projectId, compileCI, compileQA, lastMod, lastModBy);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetBuildTasksAsync(int projectId, System.Nullable<int> compileCI, System.Nullable<int> compileQA, System.Nullable<System.DateTime> lastMod, string lastModBy) {
            return base.Channel.GetBuildTasksAsync(projectId, compileCI, compileQA, lastMod, lastModBy);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetConfigArgsBuildTask(int projectId) {
            return base.Channel.GetConfigArgsBuildTask(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetConfigArgsBuildTaskAsync(int projectId) {
            return base.Channel.GetConfigArgsBuildTaskAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetPreBuildTasks(int projectId) {
            return base.Channel.GetPreBuildTasks(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetPreBuildTasksAsync(int projectId) {
            return base.Channel.GetPreBuildTasksAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetCIPreBuildTasks(int projectId) {
            return base.Channel.GetCIPreBuildTasks(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetCIPreBuildTasksAsync(int projectId) {
            return base.Channel.GetCIPreBuildTasksAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetQAPreBuildTasks(int projectId) {
            return base.Channel.GetQAPreBuildTasks(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetQAPreBuildTasksAsync(int projectId) {
            return base.Channel.GetQAPreBuildTasksAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetPostBuildTasks(int projectId) {
            return base.Channel.GetPostBuildTasks(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetPostBuildTasksAsync(int projectId) {
            return base.Channel.GetPostBuildTasksAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetCIPostBuildTasks(int projectId) {
            return base.Channel.GetCIPostBuildTasks(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetCIPostBuildTasksAsync(int projectId) {
            return base.Channel.GetCIPostBuildTasksAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[] GetQAPostBuildTasks(int projectId) {
            return base.Channel.GetQAPostBuildTasks(projectId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask[]> GetQAPostBuildTasksAsync(int projectId) {
            return base.Channel.GetQAPostBuildTasksAsync(projectId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask GetBuildTask(int taskId) {
            return base.Channel.GetBuildTask(taskId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildTask> GetBuildTaskAsync(int taskId) {
            return base.Channel.GetBuildTaskAsync(taskId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuilds(int versionId) {
            return base.Channel.GetBuilds(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsAsync(int versionId) {
            return base.Channel.GetBuildsAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetDeployableBuilds(int versionId) {
            return base.Channel.GetDeployableBuilds(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetDeployableBuildsAsync(int versionId) {
            return base.Channel.GetDeployableBuildsAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetActiveBuilds(int hours) {
            return base.Channel.GetActiveBuilds(hours);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetActiveBuildsAsync(int hours) {
            return base.Channel.GetActiveBuildsAsync(hours);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuildsByVersion(int hours, int versionId) {
            return base.Channel.GetRecentBuildsByVersion(hours, versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsByVersionAsync(int hours, int versionId) {
            return base.Channel.GetRecentBuildsByVersionAsync(hours, versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuildsByTypeAndVersion(int hours, string buildType, int versionId) {
            return base.Channel.GetRecentBuildsByTypeAndVersion(hours, buildType, versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsByTypeAndVersionAsync(int hours, string buildType, int versionId) {
            return base.Channel.GetRecentBuildsByTypeAndVersionAsync(hours, buildType, versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuilds(int hours) {
            return base.Channel.GetRecentBuilds(hours);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsAsync(int hours) {
            return base.Channel.GetRecentBuildsAsync(hours);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetRecentBuildsByType(int hours, string buildType) {
            return base.Channel.GetRecentBuildsByType(hours, buildType);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetRecentBuildsByTypeAsync(int hours, string buildType) {
            return base.Channel.GetRecentBuildsByTypeAsync(hours, buildType);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetLastSuccessfulBuild(int versionId) {
            return base.Channel.GetLastSuccessfulBuild(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetLastSuccessfulBuildAsync(int versionId) {
            return base.Channel.GetLastSuccessfulBuildAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetLastSuccessfulQABuild(int versionId) {
            return base.Channel.GetLastSuccessfulQABuild(versionId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetLastSuccessfulQABuildAsync(int versionId) {
            return base.Channel.GetLastSuccessfulQABuildAsync(versionId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetLastQtyBuilds(int versionId, int qty) {
            return base.Channel.GetLastQtyBuilds(versionId, qty);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetLastQtyBuildsAsync(int versionId, int qty) {
            return base.Channel.GetLastQtyBuildsAsync(versionId, qty);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByType(int versionId, string buildType) {
            return base.Channel.GetBuildsByType(versionId, buildType);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByTypeAsync(int versionId, string buildType) {
            return base.Channel.GetBuildsByTypeAsync(versionId, buildType);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByResult(int versionId, string result) {
            return base.Channel.GetBuildsByResult(versionId, result);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByResultAsync(int versionId, string result) {
            return base.Channel.GetBuildsByResultAsync(versionId, result);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByResultAndType(int versionId, string buildType, string result) {
            return base.Channel.GetBuildsByResultAndType(versionId, buildType, result);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByResultAndTypeAsync(int versionId, string buildType, string result) {
            return base.Channel.GetBuildsByResultAndTypeAsync(versionId, buildType, result);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetBuildById(int buildId) {
            return base.Channel.GetBuildById(buildId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetBuildByIdAsync(int buildId) {
            return base.Channel.GetBuildByIdAsync(buildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetBuildByStartTime(int versionId, System.DateTime startTime) {
            return base.Channel.GetBuildByStartTime(versionId, startTime);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetBuildByStartTimeAsync(int versionId, System.DateTime startTime) {
            return base.Channel.GetBuildByStartTimeAsync(versionId, startTime);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild[] GetBuildsByBuildNumber(int versionId, int buildNumber) {
            return base.Channel.GetBuildsByBuildNumber(versionId, buildNumber);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild[]> GetBuildsByBuildNumberAsync(int versionId, int buildNumber) {
            return base.Channel.GetBuildsByBuildNumberAsync(versionId, buildNumber);
        }
        
        public string GetBuildVersionForSite(int siteId) {
            return base.Channel.GetBuildVersionForSite(siteId);
        }
        
        public System.Threading.Tasks.Task<string> GetBuildVersionForSiteAsync(int siteId) {
            return base.Channel.GetBuildVersionForSiteAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuild GetBuildForSite(int siteId) {
            return base.Channel.GetBuildForSite(siteId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuild> GetBuildForSiteAsync(int siteId) {
            return base.Channel.GetBuildForSiteAsync(siteId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash GetBuildHashByLayerAndBuild(int LayerId, int BuildId) {
            return base.Channel.GetBuildHashByLayerAndBuild(LayerId, BuildId);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightBuildHash> GetBuildHashByLayerAndBuildAsync(int LayerId, int BuildId) {
            return base.Channel.GetBuildHashByLayerAndBuildAsync(LayerId, BuildId);
        }
        
        public ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash GetDeployHashByLayerAndServerComp(int layerId, int serverCompId, string filePath) {
            return base.Channel.GetDeployHashByLayerAndServerComp(layerId, serverCompId, filePath);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.BuildAtlasWCF.LightDeployHash> GetDeployHashByLayerAndServerCompAsync(int layerId, int serverCompId, string filePath) {
            return base.Channel.GetDeployHashByLayerAndServerCompAsync(layerId, serverCompId, filePath);
        }
    }
}
