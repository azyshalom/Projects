//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManualDeploymentCheck.CherwellWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Change", Namespace="http://schemas.datacontract.org/2004/07/CherwellWCF")]
    [System.SerializableAttribute()]
    public partial class Change : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AcceptanceCriteriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ActualCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ActualEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalBlockIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalCommentTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovalIDTempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApprovedByIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApprovedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArchitectApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizationLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BackOutPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BuildApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CABApprovalByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CABApprovalDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CABApprovalDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CABApprovalNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CABApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CABApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CABReviewByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CABReviewDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CABReviewDoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CCBExceptionEmergencySentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CICalendarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeCriticalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChangeDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ChgCriticalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ChgFastTrackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ChgNotDuringMaintenanceWindowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ChgRequiresServiceOutageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAffectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostBenefitAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CostCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerImpactedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevImplementationResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevManagersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DevMgtApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DevMgtApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DirApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DirectorNotificationSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DurationInDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EmergencyChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExecApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ExecApprovalNeededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ExecOverriddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeasibilityAssessmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalDispositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinancialReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GlobalIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HasChangeBeenTestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImpactAssesmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KnownErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModByIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] LastModTimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LibraryControlSheetCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagerRecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MgtApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MgtApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NecessityAssessmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationsImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnedByEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnedByTeamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerTeamIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PercentCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostChangeTestPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostImplementationReviewNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryCIDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryCIRecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ProposedStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QAReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RallyNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RejectionReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceAssesmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReviewDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskApplicationScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskBackoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskBackoutScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskCompletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RiskCompletedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskExternalImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskExternalImpactScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskInstallationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskInstallationScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskInternalImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskInternalImpactScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskTestingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskTestingScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskTimeOfDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskTimeOfDayScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RiskTotalScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RollOutPlanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduledEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelfServiceEmergencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCalendarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceCatalogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceblackoutendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServiceblackoutstartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowApprovalTabsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowAttachedItemsTabField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowDetailsTabsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusHasChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupportReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemImpactedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TabVisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskManagerNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TeamApprovalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TechnicalAnalysisCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechnicalReviewerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeNeedToCompleteTestingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeNeededToExecuteBackOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalChangeTimeNeededIncludingTestingAndBackoutPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrgencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> VisableToSelfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> WorkAroundExistsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptanceCriteria {
            get {
                return this.AcceptanceCriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptanceCriteriaField, value) != true)) {
                    this.AcceptanceCriteriaField = value;
                    this.RaisePropertyChanged("AcceptanceCriteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ActualCost {
            get {
                return this.ActualCostField;
            }
            set {
                if ((this.ActualCostField.Equals(value) != true)) {
                    this.ActualCostField = value;
                    this.RaisePropertyChanged("ActualCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActualEndDate {
            get {
                return this.ActualEndDateField;
            }
            set {
                if ((this.ActualEndDateField.Equals(value) != true)) {
                    this.ActualEndDateField = value;
                    this.RaisePropertyChanged("ActualEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalBlockId {
            get {
                return this.ApprovalBlockIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalBlockIdField, value) != true)) {
                    this.ApprovalBlockIdField = value;
                    this.RaisePropertyChanged("ApprovalBlockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalCommentTemp {
            get {
                return this.ApprovalCommentTempField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalCommentTempField, value) != true)) {
                    this.ApprovalCommentTempField = value;
                    this.RaisePropertyChanged("ApprovalCommentTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovalIDTemp {
            get {
                return this.ApprovalIDTempField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovalIDTempField, value) != true)) {
                    this.ApprovalIDTempField = value;
                    this.RaisePropertyChanged("ApprovalIDTemp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedBy {
            get {
                return this.ApprovedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByField, value) != true)) {
                    this.ApprovedByField = value;
                    this.RaisePropertyChanged("ApprovedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApprovedByID {
            get {
                return this.ApprovedByIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApprovedByIDField, value) != true)) {
                    this.ApprovedByIDField = value;
                    this.RaisePropertyChanged("ApprovedByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApprovedDateTime {
            get {
                return this.ApprovedDateTimeField;
            }
            set {
                if ((this.ApprovedDateTimeField.Equals(value) != true)) {
                    this.ApprovedDateTimeField = value;
                    this.RaisePropertyChanged("ApprovedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArchitectApproval {
            get {
                return this.ArchitectApprovalField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchitectApprovalField, value) != true)) {
                    this.ArchitectApprovalField = value;
                    this.RaisePropertyChanged("ArchitectApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthDescription {
            get {
                return this.AuthDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthDescriptionField, value) != true)) {
                    this.AuthDescriptionField = value;
                    this.RaisePropertyChanged("AuthDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationLevel {
            get {
                return this.AuthorizationLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationLevelField, value) != true)) {
                    this.AuthorizationLevelField = value;
                    this.RaisePropertyChanged("AuthorizationLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BackOutPlan {
            get {
                return this.BackOutPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.BackOutPlanField, value) != true)) {
                    this.BackOutPlanField = value;
                    this.RaisePropertyChanged("BackOutPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BuildApprovalDate {
            get {
                return this.BuildApprovalDateField;
            }
            set {
                if ((this.BuildApprovalDateField.Equals(value) != true)) {
                    this.BuildApprovalDateField = value;
                    this.RaisePropertyChanged("BuildApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildApprovalStatus {
            get {
                return this.BuildApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildApprovalStatusField, value) != true)) {
                    this.BuildApprovalStatusField = value;
                    this.RaisePropertyChanged("BuildApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CABApprovalBy {
            get {
                return this.CABApprovalByField;
            }
            set {
                if ((object.ReferenceEquals(this.CABApprovalByField, value) != true)) {
                    this.CABApprovalByField = value;
                    this.RaisePropertyChanged("CABApprovalBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CABApprovalDateTime {
            get {
                return this.CABApprovalDateTimeField;
            }
            set {
                if ((this.CABApprovalDateTimeField.Equals(value) != true)) {
                    this.CABApprovalDateTimeField = value;
                    this.RaisePropertyChanged("CABApprovalDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CABApprovalDone {
            get {
                return this.CABApprovalDoneField;
            }
            set {
                if ((this.CABApprovalDoneField.Equals(value) != true)) {
                    this.CABApprovalDoneField = value;
                    this.RaisePropertyChanged("CABApprovalDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CABApprovalNeeded {
            get {
                return this.CABApprovalNeededField;
            }
            set {
                if ((this.CABApprovalNeededField.Equals(value) != true)) {
                    this.CABApprovalNeededField = value;
                    this.RaisePropertyChanged("CABApprovalNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CABApprovalStatus {
            get {
                return this.CABApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CABApprovalStatusField, value) != true)) {
                    this.CABApprovalStatusField = value;
                    this.RaisePropertyChanged("CABApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CABApproved {
            get {
                return this.CABApprovedField;
            }
            set {
                if ((this.CABApprovedField.Equals(value) != true)) {
                    this.CABApprovedField = value;
                    this.RaisePropertyChanged("CABApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CABReviewBy {
            get {
                return this.CABReviewByField;
            }
            set {
                if ((object.ReferenceEquals(this.CABReviewByField, value) != true)) {
                    this.CABReviewByField = value;
                    this.RaisePropertyChanged("CABReviewBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CABReviewDateTime {
            get {
                return this.CABReviewDateTimeField;
            }
            set {
                if ((this.CABReviewDateTimeField.Equals(value) != true)) {
                    this.CABReviewDateTimeField = value;
                    this.RaisePropertyChanged("CABReviewDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CABReviewDone {
            get {
                return this.CABReviewDoneField;
            }
            set {
                if ((this.CABReviewDoneField.Equals(value) != true)) {
                    this.CABReviewDoneField = value;
                    this.RaisePropertyChanged("CABReviewDone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CCBExceptionEmergencySent {
            get {
                return this.CCBExceptionEmergencySentField;
            }
            set {
                if ((this.CCBExceptionEmergencySentField.Equals(value) != true)) {
                    this.CCBExceptionEmergencySentField = value;
                    this.RaisePropertyChanged("CCBExceptionEmergencySent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CICalendarName {
            get {
                return this.CICalendarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CICalendarNameField, value) != true)) {
                    this.CICalendarNameField = value;
                    this.RaisePropertyChanged("CICalendarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeCriticality {
            get {
                return this.ChangeCriticalityField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeCriticalityField, value) != true)) {
                    this.ChangeCriticalityField = value;
                    this.RaisePropertyChanged("ChangeCriticality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChangeDuration {
            get {
                return this.ChangeDurationField;
            }
            set {
                if ((this.ChangeDurationField.Equals(value) != true)) {
                    this.ChangeDurationField = value;
                    this.RaisePropertyChanged("ChangeDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeID {
            get {
                return this.ChangeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeIDField, value) != true)) {
                    this.ChangeIDField = value;
                    this.RaisePropertyChanged("ChangeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeType {
            get {
                return this.ChangeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTypeField, value) != true)) {
                    this.ChangeTypeField = value;
                    this.RaisePropertyChanged("ChangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ChgCritical {
            get {
                return this.ChgCriticalField;
            }
            set {
                if ((this.ChgCriticalField.Equals(value) != true)) {
                    this.ChgCriticalField = value;
                    this.RaisePropertyChanged("ChgCritical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ChgFastTrack {
            get {
                return this.ChgFastTrackField;
            }
            set {
                if ((this.ChgFastTrackField.Equals(value) != true)) {
                    this.ChgFastTrackField = value;
                    this.RaisePropertyChanged("ChgFastTrack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ChgNotDuringMaintenanceWindow {
            get {
                return this.ChgNotDuringMaintenanceWindowField;
            }
            set {
                if ((this.ChgNotDuringMaintenanceWindowField.Equals(value) != true)) {
                    this.ChgNotDuringMaintenanceWindowField = value;
                    this.RaisePropertyChanged("ChgNotDuringMaintenanceWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ChgRequiresServiceOutage {
            get {
                return this.ChgRequiresServiceOutageField;
            }
            set {
                if ((this.ChgRequiresServiceOutageField.Equals(value) != true)) {
                    this.ChgRequiresServiceOutageField = value;
                    this.RaisePropertyChanged("ChgRequiresServiceOutage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAffected {
            get {
                return this.ClientAffectedField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAffectedField, value) != true)) {
                    this.ClientAffectedField = value;
                    this.RaisePropertyChanged("ClientAffected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostBenefitAnalysis {
            get {
                return this.CostBenefitAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.CostBenefitAnalysisField, value) != true)) {
                    this.CostBenefitAnalysisField = value;
                    this.RaisePropertyChanged("CostBenefitAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CostComplete {
            get {
                return this.CostCompleteField;
            }
            set {
                if ((this.CostCompleteField.Equals(value) != true)) {
                    this.CostCompleteField = value;
                    this.RaisePropertyChanged("CostComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByID {
            get {
                return this.CreatedByIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByIDField, value) != true)) {
                    this.CreatedByIDField = value;
                    this.RaisePropertyChanged("CreatedByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerImpacted {
            get {
                return this.CustomerImpactedField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerImpactedField, value) != true)) {
                    this.CustomerImpactedField = value;
                    this.RaisePropertyChanged("CustomerImpacted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevImplementationResource {
            get {
                return this.DevImplementationResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.DevImplementationResourceField, value) != true)) {
                    this.DevImplementationResourceField = value;
                    this.RaisePropertyChanged("DevImplementationResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevManagers {
            get {
                return this.DevManagersField;
            }
            set {
                if ((object.ReferenceEquals(this.DevManagersField, value) != true)) {
                    this.DevManagersField = value;
                    this.RaisePropertyChanged("DevManagers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DevMgtApprovalDate {
            get {
                return this.DevMgtApprovalDateField;
            }
            set {
                if ((this.DevMgtApprovalDateField.Equals(value) != true)) {
                    this.DevMgtApprovalDateField = value;
                    this.RaisePropertyChanged("DevMgtApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DevMgtApprovalStatus {
            get {
                return this.DevMgtApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DevMgtApprovalStatusField, value) != true)) {
                    this.DevMgtApprovalStatusField = value;
                    this.RaisePropertyChanged("DevMgtApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DirApprovalDate {
            get {
                return this.DirApprovalDateField;
            }
            set {
                if ((this.DirApprovalDateField.Equals(value) != true)) {
                    this.DirApprovalDateField = value;
                    this.RaisePropertyChanged("DirApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirApprovalStatus {
            get {
                return this.DirApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DirApprovalStatusField, value) != true)) {
                    this.DirApprovalStatusField = value;
                    this.RaisePropertyChanged("DirApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DirectorNotificationSent {
            get {
                return this.DirectorNotificationSentField;
            }
            set {
                if ((this.DirectorNotificationSentField.Equals(value) != true)) {
                    this.DirectorNotificationSentField = value;
                    this.RaisePropertyChanged("DirectorNotificationSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DurationInDays {
            get {
                return this.DurationInDaysField;
            }
            set {
                if ((this.DurationInDaysField.Equals(value) != true)) {
                    this.DurationInDaysField = value;
                    this.RaisePropertyChanged("DurationInDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EmergencyChange {
            get {
                return this.EmergencyChangeField;
            }
            set {
                if ((this.EmergencyChangeField.Equals(value) != true)) {
                    this.EmergencyChangeField = value;
                    this.RaisePropertyChanged("EmergencyChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExecApprovalDate {
            get {
                return this.ExecApprovalDateField;
            }
            set {
                if ((this.ExecApprovalDateField.Equals(value) != true)) {
                    this.ExecApprovalDateField = value;
                    this.RaisePropertyChanged("ExecApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ExecApprovalNeeded {
            get {
                return this.ExecApprovalNeededField;
            }
            set {
                if ((this.ExecApprovalNeededField.Equals(value) != true)) {
                    this.ExecApprovalNeededField = value;
                    this.RaisePropertyChanged("ExecApprovalNeeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecApprovalStatus {
            get {
                return this.ExecApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecApprovalStatusField, value) != true)) {
                    this.ExecApprovalStatusField = value;
                    this.RaisePropertyChanged("ExecApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ExecOverridden {
            get {
                return this.ExecOverriddenField;
            }
            set {
                if ((this.ExecOverriddenField.Equals(value) != true)) {
                    this.ExecOverriddenField = value;
                    this.RaisePropertyChanged("ExecOverridden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeasibilityAssessment {
            get {
                return this.FeasibilityAssessmentField;
            }
            set {
                if ((object.ReferenceEquals(this.FeasibilityAssessmentField, value) != true)) {
                    this.FeasibilityAssessmentField = value;
                    this.RaisePropertyChanged("FeasibilityAssessment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinalDisposition {
            get {
                return this.FinalDispositionField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalDispositionField, value) != true)) {
                    this.FinalDispositionField = value;
                    this.RaisePropertyChanged("FinalDisposition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FinancialReviewer {
            get {
                return this.FinancialReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.FinancialReviewerField, value) != true)) {
                    this.FinancialReviewerField = value;
                    this.RaisePropertyChanged("FinancialReviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GlobalIssue {
            get {
                return this.GlobalIssueField;
            }
            set {
                if ((this.GlobalIssueField.Equals(value) != true)) {
                    this.GlobalIssueField = value;
                    this.RaisePropertyChanged("GlobalIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HasChangeBeenTested {
            get {
                return this.HasChangeBeenTestedField;
            }
            set {
                if ((object.ReferenceEquals(this.HasChangeBeenTestedField, value) != true)) {
                    this.HasChangeBeenTestedField = value;
                    this.RaisePropertyChanged("HasChangeBeenTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Impact {
            get {
                return this.ImpactField;
            }
            set {
                if ((object.ReferenceEquals(this.ImpactField, value) != true)) {
                    this.ImpactField = value;
                    this.RaisePropertyChanged("Impact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImpactAssesment {
            get {
                return this.ImpactAssesmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ImpactAssesmentField, value) != true)) {
                    this.ImpactAssesmentField = value;
                    this.RaisePropertyChanged("ImpactAssesment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KnownError {
            get {
                return this.KnownErrorField;
            }
            set {
                if ((this.KnownErrorField.Equals(value) != true)) {
                    this.KnownErrorField = value;
                    this.RaisePropertyChanged("KnownError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModBy {
            get {
                return this.LastModByField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModByField, value) != true)) {
                    this.LastModByField = value;
                    this.RaisePropertyChanged("LastModBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModByID {
            get {
                return this.LastModByIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModByIDField, value) != true)) {
                    this.LastModByIDField = value;
                    this.RaisePropertyChanged("LastModByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModDateTime {
            get {
                return this.LastModDateTimeField;
            }
            set {
                if ((this.LastModDateTimeField.Equals(value) != true)) {
                    this.LastModDateTimeField = value;
                    this.RaisePropertyChanged("LastModDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] LastModTimeStamp {
            get {
                return this.LastModTimeStampField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModTimeStampField, value) != true)) {
                    this.LastModTimeStampField = value;
                    this.RaisePropertyChanged("LastModTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LibraryControlSheetCount {
            get {
                return this.LibraryControlSheetCountField;
            }
            set {
                if ((this.LibraryControlSheetCountField.Equals(value) != true)) {
                    this.LibraryControlSheetCountField = value;
                    this.RaisePropertyChanged("LibraryControlSheetCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkedID {
            get {
                return this.LinkedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedIDField, value) != true)) {
                    this.LinkedIDField = value;
                    this.RaisePropertyChanged("LinkedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerEmail {
            get {
                return this.ManagerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerEmailField, value) != true)) {
                    this.ManagerEmailField = value;
                    this.RaisePropertyChanged("ManagerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerName {
            get {
                return this.ManagerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerNameField, value) != true)) {
                    this.ManagerNameField = value;
                    this.RaisePropertyChanged("ManagerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerRecID {
            get {
                return this.ManagerRecIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerRecIDField, value) != true)) {
                    this.ManagerRecIDField = value;
                    this.RaisePropertyChanged("ManagerRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MgtApprovalDate {
            get {
                return this.MgtApprovalDateField;
            }
            set {
                if ((this.MgtApprovalDateField.Equals(value) != true)) {
                    this.MgtApprovalDateField = value;
                    this.RaisePropertyChanged("MgtApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MgtApprovalStatus {
            get {
                return this.MgtApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MgtApprovalStatusField, value) != true)) {
                    this.MgtApprovalStatusField = value;
                    this.RaisePropertyChanged("MgtApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NecessityAssessment {
            get {
                return this.NecessityAssessmentField;
            }
            set {
                if ((object.ReferenceEquals(this.NecessityAssessmentField, value) != true)) {
                    this.NecessityAssessmentField = value;
                    this.RaisePropertyChanged("NecessityAssessment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationsImpact {
            get {
                return this.OperationsImpactField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationsImpactField, value) != true)) {
                    this.OperationsImpactField = value;
                    this.RaisePropertyChanged("OperationsImpact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnedBy {
            get {
                return this.OwnedByField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnedByField, value) != true)) {
                    this.OwnedByField = value;
                    this.RaisePropertyChanged("OwnedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnedByEmail {
            get {
                return this.OwnedByEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnedByEmailField, value) != true)) {
                    this.OwnedByEmailField = value;
                    this.RaisePropertyChanged("OwnedByEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnedByTeam {
            get {
                return this.OwnedByTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnedByTeamField, value) != true)) {
                    this.OwnedByTeamField = value;
                    this.RaisePropertyChanged("OwnedByTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerID {
            get {
                return this.OwnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIDField, value) != true)) {
                    this.OwnerIDField = value;
                    this.RaisePropertyChanged("OwnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerTeamID {
            get {
                return this.OwnerTeamIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerTeamIDField, value) != true)) {
                    this.OwnerTeamIDField = value;
                    this.RaisePropertyChanged("OwnerTeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PercentComplete {
            get {
                return this.PercentCompleteField;
            }
            set {
                if ((object.ReferenceEquals(this.PercentCompleteField, value) != true)) {
                    this.PercentCompleteField = value;
                    this.RaisePropertyChanged("PercentComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostChangeTestPlan {
            get {
                return this.PostChangeTestPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.PostChangeTestPlanField, value) != true)) {
                    this.PostChangeTestPlanField = value;
                    this.RaisePropertyChanged("PostChangeTestPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostImplementationReviewNotes {
            get {
                return this.PostImplementationReviewNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.PostImplementationReviewNotesField, value) != true)) {
                    this.PostImplementationReviewNotesField = value;
                    this.RaisePropertyChanged("PostImplementationReviewNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryCIDisplayName {
            get {
                return this.PrimaryCIDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryCIDisplayNameField, value) != true)) {
                    this.PrimaryCIDisplayNameField = value;
                    this.RaisePropertyChanged("PrimaryCIDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryCIRecID {
            get {
                return this.PrimaryCIRecIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryCIRecIDField, value) != true)) {
                    this.PrimaryCIRecIDField = value;
                    this.RaisePropertyChanged("PrimaryCIRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProposedStartDate {
            get {
                return this.ProposedStartDateField;
            }
            set {
                if ((this.ProposedStartDateField.Equals(value) != true)) {
                    this.ProposedStartDateField = value;
                    this.RaisePropertyChanged("ProposedStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QAReviewer {
            get {
                return this.QAReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.QAReviewerField, value) != true)) {
                    this.QAReviewerField = value;
                    this.RaisePropertyChanged("QAReviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RallyNumbers {
            get {
                return this.RallyNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.RallyNumbersField, value) != true)) {
                    this.RallyNumbersField = value;
                    this.RaisePropertyChanged("RallyNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecID {
            get {
                return this.RecIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RecIDField, value) != true)) {
                    this.RecIDField = value;
                    this.RaisePropertyChanged("RecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectionReason {
            get {
                return this.RejectionReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RejectionReasonField, value) != true)) {
                    this.RejectionReasonField = value;
                    this.RaisePropertyChanged("RejectionReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedBy {
            get {
                return this.RequestedByField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByField, value) != true)) {
                    this.RequestedByField = value;
                    this.RaisePropertyChanged("RequestedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedByID {
            get {
                return this.RequestedByIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByIDField, value) != true)) {
                    this.RequestedByIDField = value;
                    this.RaisePropertyChanged("RequestedByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedByManager {
            get {
                return this.RequestedByManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByManagerField, value) != true)) {
                    this.RequestedByManagerField = value;
                    this.RaisePropertyChanged("RequestedByManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedByType {
            get {
                return this.RequestedByTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByTypeField, value) != true)) {
                    this.RequestedByTypeField = value;
                    this.RaisePropertyChanged("RequestedByType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestedDateTime {
            get {
                return this.RequestedDateTimeField;
            }
            set {
                if ((this.RequestedDateTimeField.Equals(value) != true)) {
                    this.RequestedDateTimeField = value;
                    this.RaisePropertyChanged("RequestedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceAssesment {
            get {
                return this.ResourceAssesmentField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceAssesmentField, value) != true)) {
                    this.ResourceAssesmentField = value;
                    this.RaisePropertyChanged("ResourceAssesment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReviewDate {
            get {
                return this.ReviewDateField;
            }
            set {
                if ((this.ReviewDateField.Equals(value) != true)) {
                    this.ReviewDateField = value;
                    this.RaisePropertyChanged("ReviewDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Risk {
            get {
                return this.RiskField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskField, value) != true)) {
                    this.RiskField = value;
                    this.RaisePropertyChanged("Risk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskApplication {
            get {
                return this.RiskApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskApplicationField, value) != true)) {
                    this.RiskApplicationField = value;
                    this.RaisePropertyChanged("RiskApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskApplicationScore {
            get {
                return this.RiskApplicationScoreField;
            }
            set {
                if ((this.RiskApplicationScoreField.Equals(value) != true)) {
                    this.RiskApplicationScoreField = value;
                    this.RaisePropertyChanged("RiskApplicationScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskBackout {
            get {
                return this.RiskBackoutField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskBackoutField, value) != true)) {
                    this.RiskBackoutField = value;
                    this.RaisePropertyChanged("RiskBackout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskBackoutScore {
            get {
                return this.RiskBackoutScoreField;
            }
            set {
                if ((this.RiskBackoutScoreField.Equals(value) != true)) {
                    this.RiskBackoutScoreField = value;
                    this.RaisePropertyChanged("RiskBackoutScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskCompletedBy {
            get {
                return this.RiskCompletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskCompletedByField, value) != true)) {
                    this.RiskCompletedByField = value;
                    this.RaisePropertyChanged("RiskCompletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RiskCompletedDateTime {
            get {
                return this.RiskCompletedDateTimeField;
            }
            set {
                if ((this.RiskCompletedDateTimeField.Equals(value) != true)) {
                    this.RiskCompletedDateTimeField = value;
                    this.RaisePropertyChanged("RiskCompletedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskExternalImpact {
            get {
                return this.RiskExternalImpactField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskExternalImpactField, value) != true)) {
                    this.RiskExternalImpactField = value;
                    this.RaisePropertyChanged("RiskExternalImpact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskExternalImpactScore {
            get {
                return this.RiskExternalImpactScoreField;
            }
            set {
                if ((this.RiskExternalImpactScoreField.Equals(value) != true)) {
                    this.RiskExternalImpactScoreField = value;
                    this.RaisePropertyChanged("RiskExternalImpactScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskIcon {
            get {
                return this.RiskIconField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskIconField, value) != true)) {
                    this.RiskIconField = value;
                    this.RaisePropertyChanged("RiskIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskInstallation {
            get {
                return this.RiskInstallationField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskInstallationField, value) != true)) {
                    this.RiskInstallationField = value;
                    this.RaisePropertyChanged("RiskInstallation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskInstallationScore {
            get {
                return this.RiskInstallationScoreField;
            }
            set {
                if ((this.RiskInstallationScoreField.Equals(value) != true)) {
                    this.RiskInstallationScoreField = value;
                    this.RaisePropertyChanged("RiskInstallationScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskInternalImpact {
            get {
                return this.RiskInternalImpactField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskInternalImpactField, value) != true)) {
                    this.RiskInternalImpactField = value;
                    this.RaisePropertyChanged("RiskInternalImpact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskInternalImpactScore {
            get {
                return this.RiskInternalImpactScoreField;
            }
            set {
                if ((this.RiskInternalImpactScoreField.Equals(value) != true)) {
                    this.RiskInternalImpactScoreField = value;
                    this.RaisePropertyChanged("RiskInternalImpactScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskNumber {
            get {
                return this.RiskNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskNumberField, value) != true)) {
                    this.RiskNumberField = value;
                    this.RaisePropertyChanged("RiskNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskTesting {
            get {
                return this.RiskTestingField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskTestingField, value) != true)) {
                    this.RiskTestingField = value;
                    this.RaisePropertyChanged("RiskTesting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskTestingScore {
            get {
                return this.RiskTestingScoreField;
            }
            set {
                if ((this.RiskTestingScoreField.Equals(value) != true)) {
                    this.RiskTestingScoreField = value;
                    this.RaisePropertyChanged("RiskTestingScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskText {
            get {
                return this.RiskTextField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskTextField, value) != true)) {
                    this.RiskTextField = value;
                    this.RaisePropertyChanged("RiskText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskTimeOfDay {
            get {
                return this.RiskTimeOfDayField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskTimeOfDayField, value) != true)) {
                    this.RiskTimeOfDayField = value;
                    this.RaisePropertyChanged("RiskTimeOfDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskTimeOfDayScore {
            get {
                return this.RiskTimeOfDayScoreField;
            }
            set {
                if ((this.RiskTimeOfDayScoreField.Equals(value) != true)) {
                    this.RiskTimeOfDayScoreField = value;
                    this.RaisePropertyChanged("RiskTimeOfDayScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RiskTotalScore {
            get {
                return this.RiskTotalScoreField;
            }
            set {
                if ((this.RiskTotalScoreField.Equals(value) != true)) {
                    this.RiskTotalScoreField = value;
                    this.RaisePropertyChanged("RiskTotalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RollOutPlan {
            get {
                return this.RollOutPlanField;
            }
            set {
                if ((object.ReferenceEquals(this.RollOutPlanField, value) != true)) {
                    this.RollOutPlanField = value;
                    this.RaisePropertyChanged("RollOutPlan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduledEndDate {
            get {
                return this.ScheduledEndDateField;
            }
            set {
                if ((this.ScheduledEndDateField.Equals(value) != true)) {
                    this.ScheduledEndDateField = value;
                    this.RaisePropertyChanged("ScheduledEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityImpact {
            get {
                return this.SecurityImpactField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityImpactField, value) != true)) {
                    this.SecurityImpactField = value;
                    this.RaisePropertyChanged("SecurityImpact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityReviewer {
            get {
                return this.SecurityReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityReviewerField, value) != true)) {
                    this.SecurityReviewerField = value;
                    this.RaisePropertyChanged("SecurityReviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelfServiceEmergency {
            get {
                return this.SelfServiceEmergencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SelfServiceEmergencyField, value) != true)) {
                    this.SelfServiceEmergencyField = value;
                    this.RaisePropertyChanged("SelfServiceEmergency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCalendarName {
            get {
                return this.ServiceCalendarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCalendarNameField, value) != true)) {
                    this.ServiceCalendarNameField = value;
                    this.RaisePropertyChanged("ServiceCalendarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceCatalogID {
            get {
                return this.ServiceCatalogIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceCatalogIDField, value) != true)) {
                    this.ServiceCatalogIDField = value;
                    this.RaisePropertyChanged("ServiceCatalogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Serviceblackoutend {
            get {
                return this.ServiceblackoutendField;
            }
            set {
                if ((this.ServiceblackoutendField.Equals(value) != true)) {
                    this.ServiceblackoutendField = value;
                    this.RaisePropertyChanged("Serviceblackoutend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Serviceblackoutstart {
            get {
                return this.ServiceblackoutstartField;
            }
            set {
                if ((this.ServiceblackoutstartField.Equals(value) != true)) {
                    this.ServiceblackoutstartField = value;
                    this.RaisePropertyChanged("Serviceblackoutstart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowApprovalTabs {
            get {
                return this.ShowApprovalTabsField;
            }
            set {
                if ((this.ShowApprovalTabsField.Equals(value) != true)) {
                    this.ShowApprovalTabsField = value;
                    this.RaisePropertyChanged("ShowApprovalTabs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowAttachedItemsTab {
            get {
                return this.ShowAttachedItemsTabField;
            }
            set {
                if ((this.ShowAttachedItemsTabField.Equals(value) != true)) {
                    this.ShowAttachedItemsTabField = value;
                    this.RaisePropertyChanged("ShowAttachedItemsTab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowDetailsTabs {
            get {
                return this.ShowDetailsTabsField;
            }
            set {
                if ((this.ShowDetailsTabsField.Equals(value) != true)) {
                    this.ShowDetailsTabsField = value;
                    this.RaisePropertyChanged("ShowDetailsTabs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> StatusHasChanged {
            get {
                return this.StatusHasChangedField;
            }
            set {
                if ((this.StatusHasChangedField.Equals(value) != true)) {
                    this.StatusHasChangedField = value;
                    this.RaisePropertyChanged("StatusHasChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportReviewer {
            get {
                return this.SupportReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportReviewerField, value) != true)) {
                    this.SupportReviewerField = value;
                    this.RaisePropertyChanged("SupportReviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemImpacted {
            get {
                return this.SystemImpactedField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemImpactedField, value) != true)) {
                    this.SystemImpactedField = value;
                    this.RaisePropertyChanged("SystemImpacted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TabVisibility {
            get {
                return this.TabVisibilityField;
            }
            set {
                if ((object.ReferenceEquals(this.TabVisibilityField, value) != true)) {
                    this.TabVisibilityField = value;
                    this.RaisePropertyChanged("TabVisibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskManagerNumbers {
            get {
                return this.TaskManagerNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskManagerNumbersField, value) != true)) {
                    this.TaskManagerNumbersField = value;
                    this.RaisePropertyChanged("TaskManagerNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TeamApprovalDate {
            get {
                return this.TeamApprovalDateField;
            }
            set {
                if ((this.TeamApprovalDateField.Equals(value) != true)) {
                    this.TeamApprovalDateField = value;
                    this.RaisePropertyChanged("TeamApprovalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamApprovalStatus {
            get {
                return this.TeamApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamApprovalStatusField, value) != true)) {
                    this.TeamApprovalStatusField = value;
                    this.RaisePropertyChanged("TeamApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TechnicalAnalysisComplete {
            get {
                return this.TechnicalAnalysisCompleteField;
            }
            set {
                if ((this.TechnicalAnalysisCompleteField.Equals(value) != true)) {
                    this.TechnicalAnalysisCompleteField = value;
                    this.RaisePropertyChanged("TechnicalAnalysisComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechnicalReviewer {
            get {
                return this.TechnicalReviewerField;
            }
            set {
                if ((object.ReferenceEquals(this.TechnicalReviewerField, value) != true)) {
                    this.TechnicalReviewerField = value;
                    this.RaisePropertyChanged("TechnicalReviewer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Tested {
            get {
                return this.TestedField;
            }
            set {
                if ((this.TestedField.Equals(value) != true)) {
                    this.TestedField = value;
                    this.RaisePropertyChanged("Tested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeNeedToCompleteTesting {
            get {
                return this.TimeNeedToCompleteTestingField;
            }
            set {
                if ((this.TimeNeedToCompleteTestingField.Equals(value) != true)) {
                    this.TimeNeedToCompleteTestingField = value;
                    this.RaisePropertyChanged("TimeNeedToCompleteTesting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeNeededToExecuteBackOut {
            get {
                return this.TimeNeededToExecuteBackOutField;
            }
            set {
                if ((this.TimeNeededToExecuteBackOutField.Equals(value) != true)) {
                    this.TimeNeededToExecuteBackOutField = value;
                    this.RaisePropertyChanged("TimeNeededToExecuteBackOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TotalChangeTimeNeededIncludingTestingAndBackoutPath {
            get {
                return this.TotalChangeTimeNeededIncludingTestingAndBackoutPathField;
            }
            set {
                if ((this.TotalChangeTimeNeededIncludingTestingAndBackoutPathField.Equals(value) != true)) {
                    this.TotalChangeTimeNeededIncludingTestingAndBackoutPathField = value;
                    this.RaisePropertyChanged("TotalChangeTimeNeededIncludingTestingAndBackoutPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Urgency {
            get {
                return this.UrgencyField;
            }
            set {
                if ((object.ReferenceEquals(this.UrgencyField, value) != true)) {
                    this.UrgencyField = value;
                    this.RaisePropertyChanged("Urgency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> VisableToSelfService {
            get {
                return this.VisableToSelfServiceField;
            }
            set {
                if ((this.VisableToSelfServiceField.Equals(value) != true)) {
                    this.VisableToSelfServiceField = value;
                    this.RaisePropertyChanged("VisableToSelfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> WorkAroundExists {
            get {
                return this.WorkAroundExistsField;
            }
            set {
                if ((this.WorkAroundExistsField.Equals(value) != true)) {
                    this.WorkAroundExistsField = value;
                    this.RaisePropertyChanged("WorkAroundExists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightChange", Namespace="http://schemas.datacontract.org/2004/07/CherwellWCF.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightChange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeveloperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RallyNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ScheduledDeployDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManualDeploymentCheck.CherwellWCF.LightSpecific[] SpecificsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Developer {
            get {
                return this.DeveloperField;
            }
            set {
                if ((object.ReferenceEquals(this.DeveloperField, value) != true)) {
                    this.DeveloperField = value;
                    this.RaisePropertyChanged("Developer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RallyNumbers {
            get {
                return this.RallyNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.RallyNumbersField, value) != true)) {
                    this.RallyNumbersField = value;
                    this.RaisePropertyChanged("RallyNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ScheduledDeployDate {
            get {
                return this.ScheduledDeployDateField;
            }
            set {
                if ((this.ScheduledDeployDateField.Equals(value) != true)) {
                    this.ScheduledDeployDateField = value;
                    this.RaisePropertyChanged("ScheduledDeployDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManualDeploymentCheck.CherwellWCF.LightSpecific[] Specifics {
            get {
                return this.SpecificsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificsField, value) != true)) {
                    this.SpecificsField = value;
                    this.RaisePropertyChanged("Specifics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightSpecific", Namespace="http://schemas.datacontract.org/2004/07/CherwellWCF.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightSpecific : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeployedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVNPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Component {
            get {
                return this.ComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentField, value) != true)) {
                    this.ComponentField = value;
                    this.RaisePropertyChanged("Component");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deployed {
            get {
                return this.DeployedField;
            }
            set {
                if ((this.DeployedField.Equals(value) != true)) {
                    this.DeployedField = value;
                    this.RaisePropertyChanged("Deployed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationPath {
            get {
                return this.DestinationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationPathField, value) != true)) {
                    this.DestinationPathField = value;
                    this.RaisePropertyChanged("DestinationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVNPath {
            get {
                return this.SVNPathField;
            }
            set {
                if ((object.ReferenceEquals(this.SVNPathField, value) != true)) {
                    this.SVNPathField = value;
                    this.RaisePropertyChanged("SVNPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Servers {
            get {
                return this.ServersField;
            }
            set {
                if ((object.ReferenceEquals(this.ServersField, value) != true)) {
                    this.ServersField = value;
                    this.RaisePropertyChanged("Servers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LightChangeDeployment", Namespace="http://schemas.datacontract.org/2004/07/CherwellWCF.LightObjects")]
    [System.SerializableAttribute()]
    public partial class LightChangeDeployment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeployDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeployedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeploymentVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeveloperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OnServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RallyNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SVNPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeId {
            get {
                return this.ChangeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeIdField, value) != true)) {
                    this.ChangeIdField = value;
                    this.RaisePropertyChanged("ChangeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Component {
            get {
                return this.ComponentField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentField, value) != true)) {
                    this.ComponentField = value;
                    this.RaisePropertyChanged("Component");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeployDate {
            get {
                return this.DeployDateField;
            }
            set {
                if ((this.DeployDateField.Equals(value) != true)) {
                    this.DeployDateField = value;
                    this.RaisePropertyChanged("DeployDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeployedBy {
            get {
                return this.DeployedByField;
            }
            set {
                if ((object.ReferenceEquals(this.DeployedByField, value) != true)) {
                    this.DeployedByField = value;
                    this.RaisePropertyChanged("DeployedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeploymentVerified {
            get {
                return this.DeploymentVerifiedField;
            }
            set {
                if ((this.DeploymentVerifiedField.Equals(value) != true)) {
                    this.DeploymentVerifiedField = value;
                    this.RaisePropertyChanged("DeploymentVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationPath {
            get {
                return this.DestinationPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationPathField, value) != true)) {
                    this.DestinationPathField = value;
                    this.RaisePropertyChanged("DestinationPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Developer {
            get {
                return this.DeveloperField;
            }
            set {
                if ((object.ReferenceEquals(this.DeveloperField, value) != true)) {
                    this.DeveloperField = value;
                    this.RaisePropertyChanged("Developer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OnServer {
            get {
                return this.OnServerField;
            }
            set {
                if ((this.OnServerField.Equals(value) != true)) {
                    this.OnServerField = value;
                    this.RaisePropertyChanged("OnServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RallyNumbers {
            get {
                return this.RallyNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.RallyNumbersField, value) != true)) {
                    this.RallyNumbersField = value;
                    this.RaisePropertyChanged("RallyNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SVNPath {
            get {
                return this.SVNPathField;
            }
            set {
                if ((object.ReferenceEquals(this.SVNPathField, value) != true)) {
                    this.SVNPathField = value;
                    this.RaisePropertyChanged("SVNPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Servers {
            get {
                return this.ServersField;
            }
            set {
                if ((object.ReferenceEquals(this.ServersField, value) != true)) {
                    this.ServersField = value;
                    this.RaisePropertyChanged("Servers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CherwellWCF.ICherwellWCF")]
    public interface ICherwellWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GenerateWeeklyReport", ReplyAction="http://tempuri.org/ICherwellWCF/GenerateWeeklyReportResponse")]
        void GenerateWeeklyReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GenerateWeeklyReport", ReplyAction="http://tempuri.org/ICherwellWCF/GenerateWeeklyReportResponse")]
        System.Threading.Tasks.Task GenerateWeeklyReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GenerateBuildTeamReport", ReplyAction="http://tempuri.org/ICherwellWCF/GenerateBuildTeamReportResponse")]
        void GenerateBuildTeamReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GenerateBuildTeamReport", ReplyAction="http://tempuri.org/ICherwellWCF/GenerateBuildTeamReportResponse")]
        System.Threading.Tasks.Task GenerateBuildTeamReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetChangesByRallyNumber", ReplyAction="http://tempuri.org/ICherwellWCF/GetChangesByRallyNumberResponse")]
        ManualDeploymentCheck.CherwellWCF.Change[] GetChangesByRallyNumber(string rallyNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetChangesByRallyNumber", ReplyAction="http://tempuri.org/ICherwellWCF/GetChangesByRallyNumberResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.Change[]> GetChangesByRallyNumberAsync(string rallyNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetChangeControl", ReplyAction="http://tempuri.org/ICherwellWCF/GetChangeControlResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChange GetChangeControl(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetChangeControl", ReplyAction="http://tempuri.org/ICherwellWCF/GetChangeControlResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChange> GetChangeControlAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/SaveChangeDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/SaveChangeDeploymentResponse")]
        void SaveChangeDeployment(ManualDeploymentCheck.CherwellWCF.LightChange lc, string deployedBy, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/SaveChangeDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/SaveChangeDeploymentResponse")]
        System.Threading.Tasks.Task SaveChangeDeploymentAsync(ManualDeploymentCheck.CherwellWCF.LightChange lc, string deployedBy, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/UpdateChangeDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/UpdateChangeDeploymentResponse")]
        void UpdateChangeDeployment(int id, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/UpdateChangeDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/UpdateChangeDeploymentResponse")]
        System.Threading.Tasks.Task UpdateChangeDeploymentAsync(int id, string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/UpdateDeploymentCheck", ReplyAction="http://tempuri.org/ICherwellWCF/UpdateDeploymentCheckResponse")]
        void UpdateDeploymentCheck(int id, System.Nullable<int> onServer, System.Nullable<System.DateTime> verifiedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/UpdateDeploymentCheck", ReplyAction="http://tempuri.org/ICherwellWCF/UpdateDeploymentCheckResponse")]
        System.Threading.Tasks.Task UpdateDeploymentCheckAsync(int id, System.Nullable<int> onServer, System.Nullable<System.DateTime> verifiedOn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/DeleteDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/DeleteDeploymentResponse")]
        void DeleteDeployment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/DeleteDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/DeleteDeploymentResponse")]
        System.Threading.Tasks.Task DeleteDeploymentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetLatestDeployments", ReplyAction="http://tempuri.org/ICherwellWCF/GetLatestDeploymentsResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetLatestDeployments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetLatestDeployments", ReplyAction="http://tempuri.org/ICherwellWCF/GetLatestDeploymentsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetLatestDeploymentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment GetDeployment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeployment", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment> GetDeploymentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByChangeControl", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByChangeControlResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByChangeControl(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByChangeControl", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByChangeControlResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByChangeControlAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByDeployedBy", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByDeployedByResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByDeployedBy(string deployedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByDeployedBy", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByDeployedByResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByDeployedByAsync(string deployedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByComponent", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByComponentResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByComponent(string component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByComponent", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByComponentResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByComponentAsync(string component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeComponent", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeComponentResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByLikeComponent(string component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeComponent", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeComponentResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByLikeComponentAsync(string component);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeServer", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeServerResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByLikeServer(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeServer", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByLikeServerResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByLikeServerAsync(string server);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByRegion", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByRegionResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByRegion(string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByRegion", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByRegionResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByRegionAsync(string region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByDestPath", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByDestPathResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByDestPath(string destPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByDestPath", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByDestPathResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByDestPathAsync(string destPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsBySVNPath", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsBySVNPathResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsBySVNPath(string svnPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsBySVNPath", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsBySVNPathResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsBySVNPathAsync(string svnPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByDate", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByDateResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByDate(System.DateTime deployDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByDate", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByDateResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByDateAsync(System.DateTime deployDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeployments", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeployments(System.DateTime deployDateStart, System.DateTime deployDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeployments", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsAsync(System.DateTime deployDateStart, System.DateTime deployDateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByAll", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByAllResponse")]
        ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByAll(string id, string region, string deployer, string component, string server, string destPath, string svnPath, string rallyNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICherwellWCF/GetDeploymentsByAll", ReplyAction="http://tempuri.org/ICherwellWCF/GetDeploymentsByAllResponse")]
        System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByAllAsync(string id, string region, string deployer, string component, string server, string destPath, string svnPath, string rallyNumbers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICherwellWCFChannel : ManualDeploymentCheck.CherwellWCF.ICherwellWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CherwellWCFClient : System.ServiceModel.ClientBase<ManualDeploymentCheck.CherwellWCF.ICherwellWCF>, ManualDeploymentCheck.CherwellWCF.ICherwellWCF {
        
        public CherwellWCFClient() {
        }
        
        public CherwellWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CherwellWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CherwellWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CherwellWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GenerateWeeklyReport() {
            base.Channel.GenerateWeeklyReport();
        }
        
        public System.Threading.Tasks.Task GenerateWeeklyReportAsync() {
            return base.Channel.GenerateWeeklyReportAsync();
        }
        
        public void GenerateBuildTeamReport() {
            base.Channel.GenerateBuildTeamReport();
        }
        
        public System.Threading.Tasks.Task GenerateBuildTeamReportAsync() {
            return base.Channel.GenerateBuildTeamReportAsync();
        }
        
        public ManualDeploymentCheck.CherwellWCF.Change[] GetChangesByRallyNumber(string rallyNumber) {
            return base.Channel.GetChangesByRallyNumber(rallyNumber);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.Change[]> GetChangesByRallyNumberAsync(string rallyNumber) {
            return base.Channel.GetChangesByRallyNumberAsync(rallyNumber);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChange GetChangeControl(string number) {
            return base.Channel.GetChangeControl(number);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChange> GetChangeControlAsync(string number) {
            return base.Channel.GetChangeControlAsync(number);
        }
        
        public void SaveChangeDeployment(ManualDeploymentCheck.CherwellWCF.LightChange lc, string deployedBy, string region) {
            base.Channel.SaveChangeDeployment(lc, deployedBy, region);
        }
        
        public System.Threading.Tasks.Task SaveChangeDeploymentAsync(ManualDeploymentCheck.CherwellWCF.LightChange lc, string deployedBy, string region) {
            return base.Channel.SaveChangeDeploymentAsync(lc, deployedBy, region);
        }
        
        public void UpdateChangeDeployment(int id, string region) {
            base.Channel.UpdateChangeDeployment(id, region);
        }
        
        public System.Threading.Tasks.Task UpdateChangeDeploymentAsync(int id, string region) {
            return base.Channel.UpdateChangeDeploymentAsync(id, region);
        }
        
        public void UpdateDeploymentCheck(int id, System.Nullable<int> onServer, System.Nullable<System.DateTime> verifiedOn) {
            base.Channel.UpdateDeploymentCheck(id, onServer, verifiedOn);
        }
        
        public System.Threading.Tasks.Task UpdateDeploymentCheckAsync(int id, System.Nullable<int> onServer, System.Nullable<System.DateTime> verifiedOn) {
            return base.Channel.UpdateDeploymentCheckAsync(id, onServer, verifiedOn);
        }
        
        public void DeleteDeployment(int id) {
            base.Channel.DeleteDeployment(id);
        }
        
        public System.Threading.Tasks.Task DeleteDeploymentAsync(int id) {
            return base.Channel.DeleteDeploymentAsync(id);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetLatestDeployments() {
            return base.Channel.GetLatestDeployments();
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetLatestDeploymentsAsync() {
            return base.Channel.GetLatestDeploymentsAsync();
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment GetDeployment(int id) {
            return base.Channel.GetDeployment(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment> GetDeploymentAsync(int id) {
            return base.Channel.GetDeploymentAsync(id);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByChangeControl(string id) {
            return base.Channel.GetDeploymentsByChangeControl(id);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByChangeControlAsync(string id) {
            return base.Channel.GetDeploymentsByChangeControlAsync(id);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByDeployedBy(string deployedBy) {
            return base.Channel.GetDeploymentsByDeployedBy(deployedBy);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByDeployedByAsync(string deployedBy) {
            return base.Channel.GetDeploymentsByDeployedByAsync(deployedBy);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByComponent(string component) {
            return base.Channel.GetDeploymentsByComponent(component);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByComponentAsync(string component) {
            return base.Channel.GetDeploymentsByComponentAsync(component);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByLikeComponent(string component) {
            return base.Channel.GetDeploymentsByLikeComponent(component);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByLikeComponentAsync(string component) {
            return base.Channel.GetDeploymentsByLikeComponentAsync(component);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByLikeServer(string server) {
            return base.Channel.GetDeploymentsByLikeServer(server);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByLikeServerAsync(string server) {
            return base.Channel.GetDeploymentsByLikeServerAsync(server);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByRegion(string region) {
            return base.Channel.GetDeploymentsByRegion(region);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByRegionAsync(string region) {
            return base.Channel.GetDeploymentsByRegionAsync(region);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByDestPath(string destPath) {
            return base.Channel.GetDeploymentsByDestPath(destPath);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByDestPathAsync(string destPath) {
            return base.Channel.GetDeploymentsByDestPathAsync(destPath);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsBySVNPath(string svnPath) {
            return base.Channel.GetDeploymentsBySVNPath(svnPath);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsBySVNPathAsync(string svnPath) {
            return base.Channel.GetDeploymentsBySVNPathAsync(svnPath);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByDate(System.DateTime deployDate) {
            return base.Channel.GetDeploymentsByDate(deployDate);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByDateAsync(System.DateTime deployDate) {
            return base.Channel.GetDeploymentsByDateAsync(deployDate);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeployments(System.DateTime deployDateStart, System.DateTime deployDateEnd) {
            return base.Channel.GetDeployments(deployDateStart, deployDateEnd);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsAsync(System.DateTime deployDateStart, System.DateTime deployDateEnd) {
            return base.Channel.GetDeploymentsAsync(deployDateStart, deployDateEnd);
        }
        
        public ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[] GetDeploymentsByAll(string id, string region, string deployer, string component, string server, string destPath, string svnPath, string rallyNumbers) {
            return base.Channel.GetDeploymentsByAll(id, region, deployer, component, server, destPath, svnPath, rallyNumbers);
        }
        
        public System.Threading.Tasks.Task<ManualDeploymentCheck.CherwellWCF.LightChangeDeployment[]> GetDeploymentsByAllAsync(string id, string region, string deployer, string component, string server, string destPath, string svnPath, string rallyNumbers) {
            return base.Channel.GetDeploymentsByAllAsync(id, region, deployer, component, server, destPath, svnPath, rallyNumbers);
        }
    }
}
